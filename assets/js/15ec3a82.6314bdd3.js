"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[3741],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var o=r.createContext({}),p=function(t){var e=r.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=p(t.components);return r.createElement(o.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,o=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),d=p(n),k=a,m=d["".concat(o,".").concat(k)]||d[k]||c[k]||l;return n?r.createElement(m,i(i({ref:e},u),{},{components:n})):r.createElement(m,i({ref:e},u))}));function k(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,i=new Array(l);i[0]=d;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7817:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const l={hide_title:!0},i="ToTikzPlotExtension",s={unversionedId:"nancy/Unipi.Nancy.TikzPlot/ToTikzPlotExtension",id:"nancy/Unipi.Nancy.TikzPlot/ToTikzPlotExtension",title:"ToTikzPlotExtension",description:"This class provides methods to generate plots with TikZ.",source:"@site/docs/nancy/Unipi.Nancy.TikzPlot/ToTikzPlotExtension.md",sourceDirName:"nancy/Unipi.Nancy.TikzPlot",slug:"/nancy/Unipi.Nancy.TikzPlot/ToTikzPlotExtension",permalink:"/nancy/docs/nancy/Unipi.Nancy.TikzPlot/ToTikzPlotExtension",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"docsSidebar",previous:{title:"TikzLayoutSettings",permalink:"/nancy/docs/nancy/Unipi.Nancy.TikzPlot/TikzLayoutSettings"},next:{title:"References",permalink:"/nancy/docs/nancy/references"}},o={},p=[{value:"Fields",id:"fields",level:2},{value:"<strong>DefaultColorList</strong>",id:"defaultcolorlist",level:3},{value:"Methods",id:"methods",level:2},{value:"<strong>GetDefaultColors(Int32)</strong>",id:"getdefaultcolorsint32",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>GetDefaultNames(Int32, Char)</strong>",id:"getdefaultnamesint32-char",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>GetDefaultLineStyles(Int32)</strong>",id:"getdefaultlinestylesint32",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<strong>ComputePlotEnd(IReadOnlyList&lt;Curve&gt;, PlotEndStrategy, Nullable&lt;Rational&gt;)</strong>",id:"computeplotendireadonlylistcurve-plotendstrategy-nullablerational",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<strong>ToTikzPlot(IReadOnlyList&lt;Curve&gt;, IReadOnlyList&lt;String&gt;, IReadOnlyList&lt;String&gt;, IReadOnlyList&lt;String&gt;, TikzLayoutSettings, PlotEndStrategy, Nullable&lt;Rational&gt;)</strong>",id:"totikzplotireadonlylistcurve-ireadonlyliststring-ireadonlyliststring-ireadonlyliststring-tikzlayoutsettings-plotendstrategy-nullablerational",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<strong>ToTikzPlot(Curve, String, String, String, TikzLayoutSettings, PlotEndStrategy, Nullable&lt;Rational&gt;)</strong>",id:"totikzplotcurve-string-string-string-tikzlayoutsettings-plotendstrategy-nullablerational",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"<strong>ToTikzPlot(params Curve[])</strong>",id:"totikzplotparams-curve",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"<strong>GetUppMarks(Curve, String)</strong>",id:"getuppmarkscurve-string",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4}],u={toc:p};function c(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"totikzplotextension"},"ToTikzPlotExtension"),(0,a.kt)("p",null,"This class provides methods to generate plots with TikZ."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static class ToTikzPlotExtension\n")),(0,a.kt)("p",null,"Inheritance ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object")," \u2192 ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.TikzPlot/ToTikzPlotExtension"},"ToTikzPlotExtension")),(0,a.kt)("h2",{id:"fields"},"Fields"),(0,a.kt)("h3",{id:"defaultcolorlist"},(0,a.kt)("strong",{parentName:"h3"},"DefaultColorList")),(0,a.kt)("p",null,"Default colors."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<string> DefaultColorList;\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"getdefaultcolorsint32"},(0,a.kt)("strong",{parentName:"h3"},"GetDefaultColors(Int32)")),(0,a.kt)("p",null,"Get a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," colors from the default ones.\nIf ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," is more than the number of default colors, they are repeated."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<string> GetDefaultColors(int n)\n")),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"n")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32"},"Int32"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","String",">"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"getdefaultnamesint32-char"},(0,a.kt)("strong",{parentName:"h3"},"GetDefaultNames(Int32, Char)")),(0,a.kt)("p",null,"Get a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," default names.\nThese are lowercase letters, e.g., {f, g, h}."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<string> GetDefaultNames(int n, char firstLetter)\n")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"n")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32"},"Int32"),(0,a.kt)("br",null),"\nThe number of names to return."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"firstLetter")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.char"},"Char"),(0,a.kt)("br",null),"\nThe starting letter, defaults to 'f'."),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","String",">"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"getdefaultlinestylesint32"},(0,a.kt)("strong",{parentName:"h3"},"GetDefaultLineStyles(Int32)")),(0,a.kt)("p",null,"Get a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," default line styles."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<string> GetDefaultLineStyles(int n)\n")),(0,a.kt)("h4",{id:"parameters-2"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"n")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32"},"Int32"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","String",">"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"computeplotendireadonlylistcurve-plotendstrategy-nullablerational"},(0,a.kt)("strong",{parentName:"h3"},"ComputePlotEnd(IReadOnlyList","<","Curve",">",", PlotEndStrategy, Nullable","<","Rational",">",")")),(0,a.kt)("p",null,"Computes the x-axis right boundary."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Rational ComputePlotEnd(IReadOnlyList<Curve> curves, PlotEndStrategy strategy, Nullable<Rational> upTo)\n")),(0,a.kt)("h4",{id:"parameters-3"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","Curve",">"),(0,a.kt)("br",null),"\nThe curves to be plotted."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"strategy")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.TikzPlot/PlotEndStrategy"},"PlotEndStrategy"),(0,a.kt)("br",null),"\nComputation strategy, defaults to ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.TikzPlot/PlotEndStrategy#twoperiodseach"},"TwoPeriodsEach"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"upTo")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.nullable-1"},"Nullable","<","Rational",">"),(0,a.kt)("br",null),"\nThe preferred right boundary. If it is 0, it will be overridden."),(0,a.kt)("h4",{id:"returns-3"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"totikzplotireadonlylistcurve-ireadonlyliststring-ireadonlyliststring-ireadonlyliststring-tikzlayoutsettings-plotendstrategy-nullablerational"},(0,a.kt)("strong",{parentName:"h3"},"ToTikzPlot(IReadOnlyList","<","Curve",">",", IReadOnlyList","<","String",">",", IReadOnlyList","<","String",">",", IReadOnlyList","<","String",">",", TikzLayoutSettings, PlotEndStrategy, Nullable","<","Rational",">",")")),(0,a.kt)("p",null,"Plots the curves using TikZ."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static string ToTikzPlot(IReadOnlyList<Curve> curves, IReadOnlyList<string> names, IReadOnlyList<string> colors, IReadOnlyList<string> lineStyles, TikzLayoutSettings settings, PlotEndStrategy plotEndStrategy, Nullable<Rational> upTo)\n")),(0,a.kt)("h4",{id:"parameters-4"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","Curve",">"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"names")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","String",">"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"colors")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","String",">"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"lineStyles")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","String",">"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.TikzPlot/TikzLayoutSettings"},"TikzLayoutSettings"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"plotEndStrategy")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.TikzPlot/PlotEndStrategy"},"PlotEndStrategy"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"upTo")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.nullable-1"},"Nullable","<","Rational",">"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns-4"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,a.kt)("br",null),"\nA string with the TikZ code of the plot. Can be written to file and compiled with LaTeX."),(0,a.kt)("h3",{id:"totikzplotcurve-string-string-string-tikzlayoutsettings-plotendstrategy-nullablerational"},(0,a.kt)("strong",{parentName:"h3"},"ToTikzPlot(Curve, String, String, String, TikzLayoutSettings, PlotEndStrategy, Nullable","<","Rational",">",")")),(0,a.kt)("p",null,"Plots the curve using TikZ."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static string ToTikzPlot(Curve curve, string name, string color, string lineStyle, TikzLayoutSettings settings, PlotEndStrategy plotEndStrategy, Nullable<Rational> upTo)\n")),(0,a.kt)("h4",{id:"parameters-5"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"curve")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"name")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"color")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"lineStyle")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.TikzPlot/TikzLayoutSettings"},"TikzLayoutSettings"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"plotEndStrategy")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.TikzPlot/PlotEndStrategy"},"PlotEndStrategy"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"upTo")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.nullable-1"},"Nullable","<","Rational",">"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns-5"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,a.kt)("br",null),"\nA string with the TikZ code of the plot. Can be written to file and compiled with LaTeX."),(0,a.kt)("h3",{id:"totikzplotparams-curve"},(0,a.kt)("strong",{parentName:"h3"},"ToTikzPlot(params Curve[])")),(0,a.kt)("p",null,"Plots the curves using TikZ, using default settings."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static string ToTikzPlot(params Curve[] curves)\n")),(0,a.kt)("h4",{id:"parameters-6"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve[]"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns-6"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,a.kt)("br",null),"\nA string with the TikZ code of the plot. Can be written to file and compiled with LaTeX."),(0,a.kt)("h3",{id:"getuppmarkscurve-string"},(0,a.kt)("strong",{parentName:"h3"},"GetUppMarks(Curve, String)")),(0,a.kt)("p",null,"Computes the marks to denote the periodic behavior of the curve."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public static IEnumerable<string> GetUppMarks(Curve f, string name)\n")),(0,a.kt)("h4",{id:"parameters-7"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"f")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,a.kt)("br",null)),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"name")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns-7"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","String",">"),(0,a.kt)("br",null)))}c.isMDXComponent=!0}}]);