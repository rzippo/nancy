"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[6988],{2075:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>x,frontMatter:()=>t,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpressionExtensions","title":"CurveExpressionExtensions","description":"Class with extension methods involving CurveExpression type.","source":"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpressionExtensions.md","sourceDirName":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions","slug":"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpressionExtensions","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpressionExtensions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"CurveExpressionExtensions"},"sidebar":"docsSidebar","previous":{"title":"CurveExpression","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression"},"next":{"title":"CurveNAryExpression","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveNAryExpression"}}');var i=n(4848),o=n(8453);const t={hide_title:!0,title:"CurveExpressionExtensions"},c="CurveExpressionExtensions",a={},p=[{value:"Methods",id:"methods",level:2},{value:"<strong>Sum(IEnumerable&lt;CurveExpression&gt;)</strong>",id:"sumienumerablecurveexpression",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>Sum(IReadOnlyCollection&lt;CurveExpression&gt;)</strong>",id:"sumireadonlycollectioncurveexpression",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"curveexpressionextensions",children:"CurveExpressionExtensions"})}),"\n",(0,i.jsxs)(s.p,{children:["Class with extension methods involving ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"})," type."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public static class CurveExpressionExtensions\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Inheritance ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpressionExtensions",children:"CurveExpressionExtensions"})]}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"sumienumerablecurveexpression",children:(0,i.jsx)(s.strong,{children:"Sum(IEnumerable<CurveExpression>)"})}),"\n",(0,i.jsx)(s.p,{children:"Creates an expression composed of the addition between the expressions passed as arguments."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public static AdditionExpression Sum(IEnumerable<CurveExpression> curveExpressions)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"curveExpressions"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1",children:"IEnumerable<CurveExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/AdditionExpression",children:"AdditionExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"sumireadonlycollectioncurveexpression",children:(0,i.jsx)(s.strong,{children:"Sum(IReadOnlyCollection<CurveExpression>)"})}),"\n",(0,i.jsx)(s.p,{children:"Creates an expression composed of the addition between the expressions passed as arguments."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public static AdditionExpression Sum(IReadOnlyCollection<CurveExpression> curveExpressions)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"curveExpressions"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<CurveExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/AdditionExpression",children:"AdditionExpression"}),(0,i.jsx)("br",{})]})]})}function x(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>c});var r=n(6540);const i={},o=r.createContext(i);function t(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);