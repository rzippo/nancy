"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[3850],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,v=m["".concat(u,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(v,l(l({ref:t},p),{},{components:n})):a.createElement(v,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={hide_title:!0},l="CurveExtensions",o={unversionedId:"nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/CurveExtensions",id:"nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/CurveExtensions",title:"CurveExtensions",description:"Provides LINQ extensions methods for Curve,",source:"@site/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/CurveExtensions.md",sourceDirName:"nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra",slug:"/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/CurveExtensions",permalink:"/nancy/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/CurveExtensions",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"docsSidebar",previous:{title:"ComputationSettings",permalink:"/nancy/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},next:{title:"IToCodeString",permalink:"/nancy/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/IToCodeString"}},u={},s=[{value:"Methods",id:"methods",level:2},{value:"<strong>Equivalent(IEnumerable&lt;Curve&gt;, ComputationSettings)</strong>",id:"equivalentienumerablecurve-computationsettings",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Exceptions",id:"exceptions",level:4},{value:"<strong>Addition(IEnumerable&lt;Curve&gt;, ComputationSettings)</strong>",id:"additionienumerablecurve-computationsettings",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>Addition(IReadOnlyCollection&lt;Curve&gt;, ComputationSettings)</strong>",id:"additionireadonlycollectioncurve-computationsettings",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<strong>Minimum(IEnumerable&lt;Curve&gt;, ComputationSettings)</strong>",id:"minimumienumerablecurve-computationsettings",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<strong>Minimum(IReadOnlyCollection&lt;Curve&gt;, ComputationSettings)</strong>",id:"minimumireadonlycollectioncurve-computationsettings",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<strong>Maximum(IEnumerable&lt;Curve&gt;, ComputationSettings)</strong>",id:"maximumienumerablecurve-computationsettings",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"<strong>Maximum(IReadOnlyCollection&lt;Curve&gt;, ComputationSettings)</strong>",id:"maximumireadonlycollectioncurve-computationsettings",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"<strong>Convolution(IEnumerable&lt;Curve&gt;, ComputationSettings)</strong>",id:"convolutionienumerablecurve-computationsettings",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"<strong>Convolution(IReadOnlyCollection&lt;Curve&gt;, ComputationSettings)</strong>",id:"convolutionireadonlycollectioncurve-computationsettings",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"<strong>MaxPlusConvolution(IEnumerable&lt;Curve&gt;, ComputationSettings)</strong>",id:"maxplusconvolutionienumerablecurve-computationsettings",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"<strong>MaxPlusConvolution(IReadOnlyCollection&lt;Curve&gt;, ComputationSettings)</strong>",id:"maxplusconvolutionireadonlycollectioncurve-computationsettings",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"curveextensions"},"CurveExtensions"),(0,r.kt)("p",null,"Provides LINQ extensions methods for ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),",\nwhich are mostly shorthands to methods such as ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/CurveExtensions#convolutionienumerablecurve-computationsettings"},"Convolution(IEnumerable<Curve",">",", ComputationSettings)"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static class CurveExtensions\n")),(0,r.kt)("p",null,"Inheritance ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object")," \u2192 ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/CurveExtensions"},"CurveExtensions")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"equivalentienumerablecurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Equivalent(IEnumerable","<","Curve",">",", ComputationSettings)")),(0,r.kt)("p",null,"True if all the curves in the set represent the same function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static bool Equivalent(IEnumerable<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"additionienumerablecurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Addition(IEnumerable","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve Addition(IEnumerable<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"additionireadonlycollectioncurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Addition(IReadOnlyCollection","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve Addition(IReadOnlyCollection<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1"},"IReadOnlyCollection","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"minimumienumerablecurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Minimum(IEnumerable","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve Minimum(IEnumerable<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"minimumireadonlycollectioncurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Minimum(IReadOnlyCollection","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve Minimum(IReadOnlyCollection<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1"},"IReadOnlyCollection","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"maximumienumerablecurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Maximum(IEnumerable","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve Maximum(IEnumerable<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"maximumireadonlycollectioncurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Maximum(IReadOnlyCollection","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve Maximum(IReadOnlyCollection<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1"},"IReadOnlyCollection","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"convolutionienumerablecurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Convolution(IEnumerable","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve Convolution(IEnumerable<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"convolutionireadonlycollectioncurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"Convolution(IReadOnlyCollection","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve Convolution(IReadOnlyCollection<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1"},"IReadOnlyCollection","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"maxplusconvolutionienumerablecurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"MaxPlusConvolution(IEnumerable","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve MaxPlusConvolution(IEnumerable<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"maxplusconvolutionireadonlycollectioncurve-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"MaxPlusConvolution(IReadOnlyCollection","<","Curve",">",", ComputationSettings)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Curve MaxPlusConvolution(IReadOnlyCollection<Curve> curves, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"curves")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1"},"IReadOnlyCollection","<","Curve",">"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),(0,r.kt)("br",null)))}c.isMDXComponent=!0}}]);