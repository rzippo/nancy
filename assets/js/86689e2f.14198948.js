"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[5997],{6180:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"tutorials/first-tutorial/Examples/simple-computations","title":"Simple computations","description":"The examples shown in this page can be found, in notebook form, on GitHub.","source":"@site/docs/tutorials/first-tutorial/Examples/simple-computations.mdx","sourceDirName":"tutorials/first-tutorial/Examples","slug":"/tutorials/first-tutorial/Examples/simple-computations","permalink":"/nancy/docs/tutorials/first-tutorial/Examples/simple-computations","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"hide_title":true,"sidebar_position":1,"title":"Simple computations"},"sidebar":"tutorialSidebar","previous":{"title":"Operators","permalink":"/nancy/docs/tutorials/first-tutorial/operators"},"next":{"title":"Study of an IWRR tandem","permalink":"/nancy/docs/tutorials/first-tutorial/Examples/iwrr-tandem"}}');var r=i(4848),a=i(8453),s=i(6025);const o={hide_title:!0,sidebar_position:1,title:"Simple computations"},c="Simple computations",l={},u=[];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"simple-computations",children:"Simple computations"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["The examples shown in this page can be found, in ",(0,r.jsx)(t.a,{href:"/docs/tutorials/getting-started/notebooks",children:"notebook"})," form, on ",(0,r.jsx)(t.a,{href:"https://github.com/rzippo/nancy/blob/master/examples/quick-intro.dib",children:"GitHub"}),"."]})}),"\n",(0,r.jsx)(t.p,{children:"The library can be used to compute delay and buffer bounds for any kind of curves."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"var sc = new RateLatencyServiceCurve(3, 3);\nvar ac = new SigmaRhoArrivalCurve(4, 1);\nvar delay = Curve.HorizontalDeviation(ac, sc);\n// Output: 13/3\n"})}),"\n",(0,r.jsxs)("figure",{children:[(0,r.jsx)("img",{src:(0,s.Ay)("/img/tutorials/rl-tb.png"),alt:"Plot of the arrival and service curves. The max horizontal deviation can be seen at y = 4."}),(0,r.jsxs)("figcaption",{children:["Figure 3: Plot of the arrival and service curves. The max horizontal deviation can be seen at ",(0,r.jsx)("code",{children:"y = 4"}),"."]})]}),"\n",(0,r.jsxs)(t.p,{children:["The calculation works also for general curves, for example (from ",(0,r.jsx)("a",{href:"/docs/tutorials/references#DNC18",children:"[DNC18, p. 121]"}),"):"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"var sc = Curve.Minimum(\n    new RateLatencyServiceCurve(0, 3),\n    new RateLatencyServiceCurve(4, 3) + 3\n);\nvar ac = new SigmaRhoArrivalCurve(1, 1);\nvar delay = Curve.HorizontalDeviation(ac, sc);\n// Output: 2/1\n"})}),"\n",(0,r.jsxs)("figure",{children:[(0,r.jsx)("img",{src:(0,s.Ay)("/img/tutorials/dnc p 121.png"),alt:"Plot of the arrival and service curves. The max horizontal deviation can be seen at y = 3."}),(0,r.jsxs)("figcaption",{children:["Figure 4: Plot of the arrival and service curves. The max horizontal deviation can be seen at ",(0,r.jsx)("code",{children:"y = 3"}),"."]})]}),"\n",(0,r.jsxs)(t.p,{children:["The operators can be used to naturally construct any min-plus expressions.\nFor example, computing a residual service curve in a FIFO server ",(0,r.jsx)("a",{href:"/docs/tutorials/references#DNC18",children:"[DNC18, p. 166]"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"var beta = new RateLatencyServiceCurve(2, 3);\nvar alpha = new SigmaRhoArrivalCurve(3, 2);\nvar theta = 4;\nvar delta_theta = new DelayServiceCurve(theta);\n\nvar alpha_theta = Curve.Convolution(alpha, delta_theta);\nvar diff = Curve.Subtraction(beta, alpha_theta, nonNegative: true);\nvar residual = Curve.Minimum(diff, delta_theta);\n"})}),"\n",(0,r.jsxs)("figure",{children:[(0,r.jsx)("img",{src:(0,s.Ay)("/img/tutorials/fifo-residual.png"),alt:"Plot of the FIFO residual service curve, computed with the code above."}),(0,r.jsx)("figcaption",{children:"Figure 5: Plot of the FIFO residual service curve, computed with the code above."})]}),"\n",(0,r.jsxs)(t.p,{children:["As another example, computing the strict service curve for Interleaved Weighted Round-Robin (IWRR) described in ",(0,r.jsx)("a",{href:"/docs/tutorials/references#TLBB21",children:"[TLBB21]"})," (using Th. 1 with the parameters in Fig. 3):"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"var weights = new []{4, 6, 7, 10};\nvar l_min = new []{4096, 3072, 4608, 3072};\nvar l_max = new []{8704, 5632, 6656, 8192};\nvar beta = new RateLatencyServiceCurve(\n    delay: 0, \n    rate: 10000 // 10 Mb/s, but using ms as time unit\n);\nvar unit_rate = new RateLatencyServiceCurve(0, 1);\n\n// parameters computation omitted for brevity\nint Phi_i_j(int i, int j, int x) { ... }\nint Psi_i(int i, int x) { ... }\nint L_tot(int i) { ... }\n\nint i = 0; // the flow of interest\nvar stairs = new List<Curve>();\nfor(int k = 0; k < weights[i]; k++)\n{\n    var stair = new StairCurve(l_min[i], L_tot(i));\n    var delayed_stair = stair.DelayBy(Psi_i(i, k * l_min[i])); \n    stairs.Add(delayed_stair);\n}\nvar U_i = Curve.Addition(stairs); // summation of min-plus curves\nvar gamma_i = Curve.Convolution(unit_rate, U_i);\nvar beta_i = Curve.Composition(gamma_i, beta);\n"})}),"\n",(0,r.jsxs)("figure",{children:[(0,r.jsx)("img",{src:(0,s.Ay)("/img/tutorials/iwrr_sc.png"),alt:"Plot of the IWRR strict service curve, computed with the code above."}),(0,r.jsx)("figcaption",{children:"Figure 6: Plot of the IWRR strict service curve, computed with the code above."})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>o});var n=i(6540);const r={},a=n.createContext(r);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);