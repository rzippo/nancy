"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[8604],{3330:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/Expressions","title":"Expressions","description":"Static class with functions to build NetCal expressions","source":"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/Expressions.md","sourceDirName":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions","slug":"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/Expressions","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/Expressions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"Expressions"},"sidebar":"docsSidebar","previous":{"title":"ExpressionSettings","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings"},"next":{"title":"IExpression","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/IExpression"}}');var i=n(4848),t=n(8453);const a={hide_title:!0,title:"Expressions"},o="Expressions",c={},l=[{value:"Methods",id:"methods",level:2},{value:"<strong>FromCurve(Curve, String)</strong>",id:"fromcurvecurve-string",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>FromRational(Rational, String)</strong>",id:"fromrationalrational-string",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>Negate(CurveExpression, String, ExpressionSettings)</strong>",id:"negatecurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<strong>Negate(Curve, String, String, ExpressionSettings)</strong>",id:"negatecurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<strong>ToNonNegative(CurveExpression, String, ExpressionSettings)</strong>",id:"tononnegativecurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<strong>ToNonNegative(Curve, String, String, ExpressionSettings)</strong>",id:"tononnegativecurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"<strong>SubAdditiveClosure(CurveExpression, String, ExpressionSettings)</strong>",id:"subadditiveclosurecurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"<strong>SubAdditiveClosure(Curve, String, String, ExpressionSettings)</strong>",id:"subadditiveclosurecurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"<strong>SuperAdditiveClosure(CurveExpression, String, ExpressionSettings)</strong>",id:"superadditiveclosurecurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"<strong>SuperAdditiveClosure(Curve, String, String, ExpressionSettings)</strong>",id:"superadditiveclosurecurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"<strong>ToUpperNonDecreasing(CurveExpression, String, ExpressionSettings)</strong>",id:"touppernondecreasingcurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"<strong>ToUpperNonDecreasing(Curve, String, String, ExpressionSettings)</strong>",id:"touppernondecreasingcurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"<strong>ToLowerNonDecreasing(CurveExpression, String, ExpressionSettings)</strong>",id:"tolowernondecreasingcurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"<strong>ToLowerNonDecreasing(Curve, String, String, ExpressionSettings)</strong>",id:"tolowernondecreasingcurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"<strong>ToLeftContinuous(CurveExpression, String, ExpressionSettings)</strong>",id:"toleftcontinuouscurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"<strong>ToLeftContinuous(Curve, String, String, ExpressionSettings)</strong>",id:"toleftcontinuouscurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"<strong>ToRightContinuous(CurveExpression, String, ExpressionSettings)</strong>",id:"torightcontinuouscurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"<strong>ToRightContinuous(Curve, String, String, ExpressionSettings)</strong>",id:"torightcontinuouscurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"<strong>WithZeroOrigin(CurveExpression, String, ExpressionSettings)</strong>",id:"withzeroorigincurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"<strong>WithZeroOrigin(Curve, String, String, ExpressionSettings)</strong>",id:"withzeroorigincurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"<strong>LowerPseudoInverse(CurveExpression, String, ExpressionSettings)</strong>",id:"lowerpseudoinversecurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"<strong>LowerPseudoInverse(Curve, String, String, ExpressionSettings)</strong>",id:"lowerpseudoinversecurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"<strong>UpperPseudoInverse(CurveExpression, String, ExpressionSettings)</strong>",id:"upperpseudoinversecurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"<strong>UpperPseudoInverse(Curve, String, String, ExpressionSettings)</strong>",id:"upperpseudoinversecurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"<strong>Addition(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"additioncurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"<strong>Addition(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"additioncurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"<strong>Addition(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"additioncurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"<strong>Addition(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"additioncurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"<strong>Addition(IReadOnlyCollection&lt;Curve&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"additionireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"<strong>Addition(IReadOnlyCollection&lt;CurveExpression&gt;, String, ExpressionSettings)</strong>",id:"additionireadonlycollectioncurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-29",level:4},{value:"<strong>Subtraction(CurveExpression, CurveExpression, Boolean, String, ExpressionSettings)</strong>",id:"subtractioncurveexpression-curveexpression-boolean-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-30",level:4},{value:"<strong>Subtraction(CurveExpression, Curve, Boolean, String, String, ExpressionSettings)</strong>",id:"subtractioncurveexpression-curve-boolean-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-31",level:4},{value:"<strong>Subtraction(Curve, Curve, Boolean, String, String, String, ExpressionSettings)</strong>",id:"subtractioncurve-curve-boolean-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-32",level:4},{value:"<strong>Subtraction(Curve, CurveExpression, Boolean, String, String, ExpressionSettings)</strong>",id:"subtractioncurve-curveexpression-boolean-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-33",level:4},{value:"<strong>Minimum(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"minimumcurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-34",level:4},{value:"<strong>Minimum(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"minimumcurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-35",level:4},{value:"<strong>Minimum(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"minimumcurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-36",level:4},{value:"<strong>Minimum(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"minimumcurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-37",level:4},{value:"<strong>Minimum(IReadOnlyCollection&lt;Curve&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"minimumireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-38",level:4},{value:"<strong>Minimum(IReadOnlyCollection&lt;CurveExpression&gt;, String, ExpressionSettings)</strong>",id:"minimumireadonlycollectioncurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-39",level:4},{value:"<strong>Maximum(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"maximumcurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-40",level:4},{value:"<strong>Maximum(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"maximumcurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-41",level:4},{value:"<strong>Maximum(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"maximumcurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-42",level:4},{value:"<strong>Maximum(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"maximumcurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-43",level:4},{value:"<strong>Maximum(IReadOnlyCollection&lt;Curve&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"maximumireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-44",level:4},{value:"<strong>Maximum(IReadOnlyCollection&lt;CurveExpression&gt;, String, ExpressionSettings)</strong>",id:"maximumireadonlycollectioncurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-45",level:4},{value:"<strong>Convolution(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"convolutioncurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-46",level:4},{value:"<strong>Convolution(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"convolutioncurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-47",level:4},{value:"<strong>Convolution(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"convolutioncurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-48",level:4},{value:"Returns",id:"returns-48",level:4},{value:"<strong>Convolution(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"convolutioncurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-49",level:4},{value:"Returns",id:"returns-49",level:4},{value:"<strong>Convolution(IReadOnlyCollection&lt;Curve&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"convolutionireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-50",level:4},{value:"Returns",id:"returns-50",level:4},{value:"<strong>Convolution(IReadOnlyCollection&lt;CurveExpression&gt;, String, ExpressionSettings)</strong>",id:"convolutionireadonlycollectioncurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-51",level:4},{value:"Returns",id:"returns-51",level:4},{value:"<strong>Deconvolution(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"deconvolutioncurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-52",level:4},{value:"Returns",id:"returns-52",level:4},{value:"<strong>Deconvolution(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"deconvolutioncurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-53",level:4},{value:"Returns",id:"returns-53",level:4},{value:"<strong>Deconvolution(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"deconvolutioncurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-54",level:4},{value:"Returns",id:"returns-54",level:4},{value:"<strong>Deconvolution(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"deconvolutioncurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-55",level:4},{value:"Returns",id:"returns-55",level:4},{value:"<strong>MaxPlusConvolution(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"maxplusconvolutioncurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-56",level:4},{value:"Returns",id:"returns-56",level:4},{value:"<strong>MaxPlusConvolution(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"maxplusconvolutioncurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-57",level:4},{value:"Returns",id:"returns-57",level:4},{value:"<strong>MaxPlusConvolution(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"maxplusconvolutioncurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-58",level:4},{value:"Returns",id:"returns-58",level:4},{value:"<strong>MaxPlusConvolution(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"maxplusconvolutioncurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-59",level:4},{value:"Returns",id:"returns-59",level:4},{value:"<strong>MaxPlusConvolution(IReadOnlyCollection&lt;Curve&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"maxplusconvolutionireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-60",level:4},{value:"Returns",id:"returns-60",level:4},{value:"<strong>MaxPlusConvolution(IReadOnlyCollection&lt;CurveExpression&gt;, String, ExpressionSettings)</strong>",id:"maxplusconvolutionireadonlycollectioncurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-61",level:4},{value:"Returns",id:"returns-61",level:4},{value:"<strong>MaxPlusDeconvolution(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"maxplusdeconvolutioncurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-62",level:4},{value:"Returns",id:"returns-62",level:4},{value:"<strong>MaxPlusDeconvolution(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"maxplusdeconvolutioncurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-63",level:4},{value:"Returns",id:"returns-63",level:4},{value:"<strong>MaxPlusDeconvolution(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"maxplusdeconvolutioncurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-64",level:4},{value:"Returns",id:"returns-64",level:4},{value:"<strong>MaxPlusDeconvolution(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"maxplusdeconvolutioncurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-65",level:4},{value:"Returns",id:"returns-65",level:4},{value:"<strong>Composition(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"compositioncurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-66",level:4},{value:"Returns",id:"returns-66",level:4},{value:"<strong>Composition(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"compositioncurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-67",level:4},{value:"Returns",id:"returns-67",level:4},{value:"<strong>Composition(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"compositioncurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-68",level:4},{value:"Returns",id:"returns-68",level:4},{value:"<strong>Composition(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"compositioncurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-69",level:4},{value:"Returns",id:"returns-69",level:4},{value:"<strong>HorizontalDeviation(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"horizontaldeviationcurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-70",level:4},{value:"Returns",id:"returns-70",level:4},{value:"<strong>HorizontalDeviation(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"horizontaldeviationcurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-71",level:4},{value:"Returns",id:"returns-71",level:4},{value:"<strong>HorizontalDeviation(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"horizontaldeviationcurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-72",level:4},{value:"Returns",id:"returns-72",level:4},{value:"<strong>HorizontalDeviation(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"horizontaldeviationcurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-73",level:4},{value:"Returns",id:"returns-73",level:4},{value:"<strong>VerticalDeviation(CurveExpression, CurveExpression, String, ExpressionSettings)</strong>",id:"verticaldeviationcurveexpression-curveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-74",level:4},{value:"Returns",id:"returns-74",level:4},{value:"<strong>VerticalDeviation(CurveExpression, Curve, String, String, ExpressionSettings)</strong>",id:"verticaldeviationcurveexpression-curve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-75",level:4},{value:"Returns",id:"returns-75",level:4},{value:"<strong>VerticalDeviation(Curve, Curve, String, String, String, ExpressionSettings)</strong>",id:"verticaldeviationcurve-curve-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-76",level:4},{value:"Returns",id:"returns-76",level:4},{value:"<strong>VerticalDeviation(Curve, CurveExpression, String, String, ExpressionSettings)</strong>",id:"verticaldeviationcurve-curveexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-77",level:4},{value:"Returns",id:"returns-77",level:4},{value:"<strong>DelayBy(CurveExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"delaybycurveexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-78",level:4},{value:"Returns",id:"returns-78",level:4},{value:"<strong>DelayBy(CurveExpression, Rational, String, ExpressionSettings)</strong>",id:"delaybycurveexpression-rational-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-79",level:4},{value:"Returns",id:"returns-79",level:4},{value:"<strong>DelayBy(Curve, Rational, String, String, ExpressionSettings)</strong>",id:"delaybycurve-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-80",level:4},{value:"Returns",id:"returns-80",level:4},{value:"<strong>DelayBy(Curve, RationalExpression, String, String, ExpressionSettings)</strong>",id:"delaybycurve-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-81",level:4},{value:"Returns",id:"returns-81",level:4},{value:"<strong>ForwardBy(CurveExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"forwardbycurveexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-82",level:4},{value:"Returns",id:"returns-82",level:4},{value:"<strong>ForwardBy(CurveExpression, Rational, String, ExpressionSettings)</strong>",id:"forwardbycurveexpression-rational-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-83",level:4},{value:"Returns",id:"returns-83",level:4},{value:"<strong>ForwardBy(Curve, Rational, String, String, ExpressionSettings)</strong>",id:"forwardbycurve-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-84",level:4},{value:"Returns",id:"returns-84",level:4},{value:"<strong>ForwardBy(Curve, RationalExpression, String, String, ExpressionSettings)</strong>",id:"forwardbycurve-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-85",level:4},{value:"Returns",id:"returns-85",level:4},{value:"<strong>HorizontalShift(CurveExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"horizontalshiftcurveexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-86",level:4},{value:"Returns",id:"returns-86",level:4},{value:"<strong>HorizontalShift(CurveExpression, Rational, String, ExpressionSettings)</strong>",id:"horizontalshiftcurveexpression-rational-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-87",level:4},{value:"Returns",id:"returns-87",level:4},{value:"<strong>HorizontalShift(Curve, Rational, String, String, ExpressionSettings)</strong>",id:"horizontalshiftcurve-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-88",level:4},{value:"Returns",id:"returns-88",level:4},{value:"<strong>HorizontalShift(Curve, RationalExpression, String, String, ExpressionSettings)</strong>",id:"horizontalshiftcurve-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-89",level:4},{value:"Returns",id:"returns-89",level:4},{value:"<strong>VerticalShift(CurveExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"verticalshiftcurveexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-90",level:4},{value:"Returns",id:"returns-90",level:4},{value:"<strong>VerticalShift(CurveExpression, Rational, String, ExpressionSettings)</strong>",id:"verticalshiftcurveexpression-rational-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-91",level:4},{value:"Returns",id:"returns-91",level:4},{value:"<strong>VerticalShift(Curve, Rational, String, String, ExpressionSettings)</strong>",id:"verticalshiftcurve-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-92",level:4},{value:"Returns",id:"returns-92",level:4},{value:"<strong>VerticalShift(Curve, RationalExpression, String, String, ExpressionSettings)</strong>",id:"verticalshiftcurve-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-93",level:4},{value:"Returns",id:"returns-93",level:4},{value:"<strong>Scale(CurveExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"scalecurveexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-94",level:4},{value:"Returns",id:"returns-94",level:4},{value:"<strong>Scale(CurveExpression, Rational, String, ExpressionSettings)</strong>",id:"scalecurveexpression-rational-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-95",level:4},{value:"Returns",id:"returns-95",level:4},{value:"<strong>Scale(Curve, Rational, String, String, ExpressionSettings)</strong>",id:"scalecurve-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-96",level:4},{value:"Returns",id:"returns-96",level:4},{value:"<strong>Scale(Curve, RationalExpression, String, String, ExpressionSettings)</strong>",id:"scalecurve-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-97",level:4},{value:"Returns",id:"returns-97",level:4},{value:"<strong>RationalAddition(RationalExpression, Rational, String, String, ExpressionSettings)</strong>",id:"rationaladditionrationalexpression-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-98",level:4},{value:"Returns",id:"returns-98",level:4},{value:"<strong>RationalAddition(RationalExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"rationaladditionrationalexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-99",level:4},{value:"Returns",id:"returns-99",level:4},{value:"<strong>RationalAddition(Rational, Rational, String, String, String, ExpressionSettings)</strong>",id:"rationaladditionrational-rational-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-100",level:4},{value:"Returns",id:"returns-100",level:4},{value:"<strong>RationalAddition(Rational, RationalExpression, String, String, ExpressionSettings)</strong>",id:"rationaladditionrational-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-101",level:4},{value:"Returns",id:"returns-101",level:4},{value:"<strong>RationalAddition(IReadOnlyCollection&lt;Rational&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"rationaladditionireadonlycollectionrational-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-102",level:4},{value:"Returns",id:"returns-102",level:4},{value:"<strong>RationalSubtraction(RationalExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"rationalsubtractionrationalexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-103",level:4},{value:"Returns",id:"returns-103",level:4},{value:"<strong>RationalSubtraction(RationalExpression, Rational, String, String, ExpressionSettings)</strong>",id:"rationalsubtractionrationalexpression-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-104",level:4},{value:"Returns",id:"returns-104",level:4},{value:"<strong>RationalSubtraction(Rational, Rational, String, String, String, ExpressionSettings)</strong>",id:"rationalsubtractionrational-rational-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-105",level:4},{value:"Returns",id:"returns-105",level:4},{value:"<strong>RationalSubtraction(Rational, RationalExpression, String, String, ExpressionSettings)</strong>",id:"rationalsubtractionrational-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-106",level:4},{value:"Returns",id:"returns-106",level:4},{value:"<strong>Product(RationalExpression, Rational, String, String, ExpressionSettings)</strong>",id:"productrationalexpression-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-107",level:4},{value:"Returns",id:"returns-107",level:4},{value:"<strong>Product(RationalExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"productrationalexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-108",level:4},{value:"Returns",id:"returns-108",level:4},{value:"<strong>Product(Rational, Rational, String, String, String, ExpressionSettings)</strong>",id:"productrational-rational-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-109",level:4},{value:"Returns",id:"returns-109",level:4},{value:"<strong>Product(Rational, RationalExpression, String, String, ExpressionSettings)</strong>",id:"productrational-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-110",level:4},{value:"Returns",id:"returns-110",level:4},{value:"<strong>RationalProduct(IReadOnlyCollection&lt;Rational&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"rationalproductireadonlycollectionrational-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-111",level:4},{value:"Returns",id:"returns-111",level:4},{value:"<strong>Division(RationalExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"divisionrationalexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-112",level:4},{value:"Returns",id:"returns-112",level:4},{value:"<strong>Division(RationalExpression, Rational, String, String, ExpressionSettings)</strong>",id:"divisionrationalexpression-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-113",level:4},{value:"Returns",id:"returns-113",level:4},{value:"<strong>Division(Rational, Rational, String, String, String, ExpressionSettings)</strong>",id:"divisionrational-rational-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-114",level:4},{value:"Returns",id:"returns-114",level:4},{value:"<strong>Division(Rational, RationalExpression, String, String, ExpressionSettings)</strong>",id:"divisionrational-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-115",level:4},{value:"Returns",id:"returns-115",level:4},{value:"<strong>LeastCommonMultiple(RationalExpression, Rational, String, String, ExpressionSettings)</strong>",id:"leastcommonmultiplerationalexpression-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-116",level:4},{value:"Returns",id:"returns-116",level:4},{value:"<strong>LeastCommonMultiple(RationalExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"leastcommonmultiplerationalexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-117",level:4},{value:"Returns",id:"returns-117",level:4},{value:"<strong>LeastCommonMultiple(Rational, Rational, String, String, String, ExpressionSettings)</strong>",id:"leastcommonmultiplerational-rational-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-118",level:4},{value:"Returns",id:"returns-118",level:4},{value:"<strong>LeastCommonMultiple(Rational, RationalExpression, String, String, ExpressionSettings)</strong>",id:"leastcommonmultiplerational-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-119",level:4},{value:"Returns",id:"returns-119",level:4},{value:"<strong>LeastCommonMultiple(IReadOnlyCollection&lt;Rational&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"leastcommonmultipleireadonlycollectionrational-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-120",level:4},{value:"Returns",id:"returns-120",level:4},{value:"<strong>GreatestCommonDivisor(RationalExpression, Rational, String, String, ExpressionSettings)</strong>",id:"greatestcommondivisorrationalexpression-rational-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-121",level:4},{value:"Returns",id:"returns-121",level:4},{value:"<strong>GreatestCommonDivisor(RationalExpression, RationalExpression, String, ExpressionSettings)</strong>",id:"greatestcommondivisorrationalexpression-rationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-122",level:4},{value:"Returns",id:"returns-122",level:4},{value:"<strong>GreatestCommonDivisor(Rational, Rational, String, String, String, ExpressionSettings)</strong>",id:"greatestcommondivisorrational-rational-string-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-123",level:4},{value:"Returns",id:"returns-123",level:4},{value:"<strong>GreatestCommonDivisor(Rational, RationalExpression, String, String, ExpressionSettings)</strong>",id:"greatestcommondivisorrational-rationalexpression-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-124",level:4},{value:"Returns",id:"returns-124",level:4},{value:"<strong>GreatestCommonDivisor(IReadOnlyCollection&lt;Rational&gt;, IReadOnlyCollection&lt;String&gt;, String, ExpressionSettings)</strong>",id:"greatestcommondivisorireadonlycollectionrational-ireadonlycollectionstring-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-125",level:4},{value:"Returns",id:"returns-125",level:4},{value:"<strong>Negate(RationalExpression, String, ExpressionSettings)</strong>",id:"negaterationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-126",level:4},{value:"Returns",id:"returns-126",level:4},{value:"<strong>Negate(Rational, String, ExpressionSettings)</strong>",id:"negaterational-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-127",level:4},{value:"Returns",id:"returns-127",level:4},{value:"<strong>Invert(RationalExpression, String, ExpressionSettings)</strong>",id:"invertrationalexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-128",level:4},{value:"Returns",id:"returns-128",level:4},{value:"<strong>Invert(Rational, String, ExpressionSettings)</strong>",id:"invertrational-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-129",level:4},{value:"Returns",id:"returns-129",level:4},{value:"<strong>Placeholder(String, ExpressionSettings)</strong>",id:"placeholderstring-expressionsettings",level:3},{value:"Parameters",id:"parameters-130",level:4},{value:"Returns",id:"returns-130",level:4},{value:"<strong>RationalPlaceholder(String, ExpressionSettings)</strong>",id:"rationalplaceholderstring-expressionsettings",level:3},{value:"Parameters",id:"parameters-131",level:4},{value:"Returns",id:"returns-131",level:4},{value:"<strong>Compute&lt;T&gt;(IGenericExpression&lt;T&gt;)</strong>",id:"computetigenericexpressiont",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-132",level:4},{value:"Returns",id:"returns-132",level:4},{value:"<strong>Equivalent(CurveExpression, CurveExpression)</strong>",id:"equivalentcurveexpression-curveexpression",level:3},{value:"Parameters",id:"parameters-133",level:4},{value:"Returns",id:"returns-133",level:4}];function x(s){const e={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msubsup:"msubsup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",...(0,t.R)(),...s.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"expressions",children:"Expressions"})}),"\n",(0,i.jsx)(e.p,{children:"Static class with functions to build NetCal expressions"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static class Expressions\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Inheritance ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/Expressions",children:"Expressions"})]}),"\n",(0,i.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(e.h3,{id:"fromcurvecurve-string",children:(0,i.jsx)(e.strong,{children:"FromCurve(Curve, String)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"})," object from a Curve object."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static ConcreteCurveExpression FromCurve(Curve curve, string name)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"fromrationalrational-string",children:(0,i.jsx)(e.strong,{children:"FromRational(Rational, String)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"})," object from a Rational object."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalNumberExpression FromRational(Rational number, string name)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"negatecurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Negate(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds the opposite operator to the expression passed as argument."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Negate(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"negatecurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Negate(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds the opposite operator to the curve passed as argument (internally converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Negate(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"tononnegativecurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToNonNegative(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds to the expression passed as argument the operation to compute its non-negative version."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToNonNegative(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"tononnegativecurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToNonNegative(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds to the curve passed as argument the operation to compute its non-negative version."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToNonNegative(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"subadditiveclosurecurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"SubAdditiveClosure(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds the sub-additive closure operator to the expression passed as argument."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression SubAdditiveClosure(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"subadditiveclosurecurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"SubAdditiveClosure(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds the sub-additive closure operator to the curve passed as argument\r\n(internally converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression SubAdditiveClosure(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-7",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"superadditiveclosurecurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"SuperAdditiveClosure(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds the super-additive closure operator to the expression passed as argument."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression SuperAdditiveClosure(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-8",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"superadditiveclosurecurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"SuperAdditiveClosure(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds the super-additive closure operator to the curve passed as argument (internally converted\r\nto ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression SuperAdditiveClosure(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-9",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"touppernondecreasingcurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToUpperNonDecreasing(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds to the expression passed as argument the operation to compute its upper non-decreasing version."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToUpperNonDecreasing(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-10",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"touppernondecreasingcurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToUpperNonDecreasing(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds to the curve passed as argument the operation to compute its upper non-decreasing version."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToUpperNonDecreasing(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-11",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"tolowernondecreasingcurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToLowerNonDecreasing(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds to the expression passed as argument the operation to compute its lower non-decreasing version."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToLowerNonDecreasing(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-12",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"tolowernondecreasingcurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToLowerNonDecreasing(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds to the curve passed as argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") the operation to\r\ncompute its lower non-decreasing version."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToLowerNonDecreasing(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-13",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"toleftcontinuouscurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToLeftContinuous(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds to the expression passed as argument the operation to compute a left continuous version of it."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToLeftContinuous(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-14",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"toleftcontinuouscurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToLeftContinuous(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds to the curve passed as argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") the operation to\r\ncompute a left continuous version of it."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToLeftContinuous(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-15",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"torightcontinuouscurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToRightContinuous(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds to the expression passed as argument the operation to compute a right continuous version of it."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToRightContinuous(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-16",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"torightcontinuouscurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ToRightContinuous(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds to the curve passed as argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") the operation to\r\ncompute a right continuous version of it."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ToRightContinuous(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-17",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"withzeroorigincurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"WithZeroOrigin(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds to the expression passed as argument an operation which enforces it to assume 0 at time 0."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression WithZeroOrigin(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-18",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-18",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"withzeroorigincurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"WithZeroOrigin(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds to the curve passed as argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"})," an operation which\r\nenforces it to assume 0 at time 0."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression WithZeroOrigin(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-19",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-19",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"lowerpseudoinversecurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"LowerPseudoInverse(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds to the expression passed as argument the operation to compute the lower pseudo-inverse function,\r\n",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsxs)(e.msubsup,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{children:"\u2193"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"})]})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"inf"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{fence:"true",children:"{"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:":"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{fence:"true",children:"}"})]}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"sup"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{fence:"true",children:"{"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:":"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"<"}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{fence:"true",children:"}"})]})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f^{-1}_\\downarrow(x) = \\inf \\left\\{ t : f(t) \\ge x \\right\\} = \\sup \\left\\{ t : f(t) < x \\right\\}"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.2917em",verticalAlign:"-0.4374em"}}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(e.span,{className:"vlist-r",children:[(0,i.jsxs)(e.span,{className:"vlist",style:{height:"0.8542em"},children:[(0,i.jsxs)(e.span,{style:{top:"-2.3987em",marginLeft:"-0.1076em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mrel mtight",children:"\u2193"})})]}),(0,i.jsxs)(e.span,{style:{top:"-3.1031em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mtight",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]})]}),(0,i.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.4374em"},children:(0,i.jsx)(e.span,{})})})]})})]}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsxs)(e.span,{className:"mop",children:["in",(0,i.jsx)(e.span,{style:{marginRight:"0.07778em"},children:"f"})]}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"minner",children:[(0,i.jsx)(e.span,{className:"mopen delimcenter",style:{top:"0em"},children:"{"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:":"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose delimcenter",style:{top:"0em"},children:"}"})]}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mop",children:"sup"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"minner",children:[(0,i.jsx)(e.span,{className:"mopen delimcenter",style:{top:"0em"},children:"{"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:":"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"<"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose delimcenter",style:{top:"0em"},children:"}"})]})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression LowerPseudoInverse(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-20",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-20",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"lowerpseudoinversecurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"LowerPseudoInverse(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds to the curve passed as argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") the operation to\r\ncompute the lower pseudo-inverse function,\r\n",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsxs)(e.msubsup,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{children:"\u2193"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"})]})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"inf"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{fence:"true",children:"{"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:":"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{fence:"true",children:"}"})]}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"sup"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{fence:"true",children:"{"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:":"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"<"}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{fence:"true",children:"}"})]})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f^{-1}_\\downarrow(x) = \\inf \\left\\{ t : f(t) \\ge x \\right\\} = \\sup \\left\\{ t : f(t) < x \\right\\}"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.2917em",verticalAlign:"-0.4374em"}}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(e.span,{className:"vlist-r",children:[(0,i.jsxs)(e.span,{className:"vlist",style:{height:"0.8542em"},children:[(0,i.jsxs)(e.span,{style:{top:"-2.3987em",marginLeft:"-0.1076em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mrel mtight",children:"\u2193"})})]}),(0,i.jsxs)(e.span,{style:{top:"-3.1031em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mtight",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]})]}),(0,i.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.4374em"},children:(0,i.jsx)(e.span,{})})})]})})]}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsxs)(e.span,{className:"mop",children:["in",(0,i.jsx)(e.span,{style:{marginRight:"0.07778em"},children:"f"})]}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"minner",children:[(0,i.jsx)(e.span,{className:"mopen delimcenter",style:{top:"0em"},children:"{"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:":"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose delimcenter",style:{top:"0em"},children:"}"})]}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mop",children:"sup"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"minner",children:[(0,i.jsx)(e.span,{className:"mopen delimcenter",style:{top:"0em"},children:"{"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:":"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"<"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose delimcenter",style:{top:"0em"},children:"}"})]})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression LowerPseudoInverse(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-21",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-21",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"upperpseudoinversecurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"UpperPseudoInverse(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds to the expression passed as argument the operation to compute the upper pseudo-inverse function,\r\n",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsxs)(e.msubsup,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{children:"\u2191"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"})]})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"inf"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"{"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:":"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:">"}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"}"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"sup"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"{"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:":"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"\u2264"}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"}"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f^{-1}_\\uparrow(x) = \\inf\\{ t : f(t) > x \\} = \\sup\\{ t : f(t) \\le x \\}"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.2917em",verticalAlign:"-0.4374em"}}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(e.span,{className:"vlist-r",children:[(0,i.jsxs)(e.span,{className:"vlist",style:{height:"0.8542em"},children:[(0,i.jsxs)(e.span,{style:{top:"-2.3987em",marginLeft:"-0.1076em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mrel mtight",children:"\u2191"})})]}),(0,i.jsxs)(e.span,{style:{top:"-3.1031em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mtight",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]})]}),(0,i.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.4374em"},children:(0,i.jsx)(e.span,{})})})]})})]}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsxs)(e.span,{className:"mop",children:["in",(0,i.jsx)(e.span,{style:{marginRight:"0.07778em"},children:"f"})]}),(0,i.jsx)(e.span,{className:"mopen",children:"{"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:":"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:">"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose",children:"}"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mop",children:"sup"}),(0,i.jsx)(e.span,{className:"mopen",children:"{"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:":"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2264"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose",children:"}"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression UpperPseudoInverse(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-22",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-22",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"upperpseudoinversecurve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"UpperPseudoInverse(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds to the curve passed as argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") the operation to\r\ncompute the upper pseudo-inverse function,\r\n",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsxs)(e.msubsup,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{children:"\u2191"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"})]})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"inf"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"{"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:":"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:">"}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"}"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"sup"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"{"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:":"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"\u2264"}),(0,i.jsx)(e.mi,{children:"x"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"}"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f^{-1}_\\uparrow(x) = \\inf\\{ t : f(t) > x \\} = \\sup\\{ t : f(t) \\le x \\}"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.2917em",verticalAlign:"-0.4374em"}}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(e.span,{className:"vlist-r",children:[(0,i.jsxs)(e.span,{className:"vlist",style:{height:"0.8542em"},children:[(0,i.jsxs)(e.span,{style:{top:"-2.3987em",marginLeft:"-0.1076em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mrel mtight",children:"\u2191"})})]}),(0,i.jsxs)(e.span,{style:{top:"-3.1031em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mtight",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mord mtight",children:"1"})]})})]})]}),(0,i.jsx)(e.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.4374em"},children:(0,i.jsx)(e.span,{})})})]})})]}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsxs)(e.span,{className:"mop",children:["in",(0,i.jsx)(e.span,{style:{marginRight:"0.07778em"},children:"f"})]}),(0,i.jsx)(e.span,{className:"mopen",children:"{"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:":"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:">"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose",children:"}"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mop",children:"sup"}),(0,i.jsx)(e.span,{className:"mopen",children:"{"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:":"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2264"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(e.span,{className:"mclose",children:"}"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression UpperPseudoInverse(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-23",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-23",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"additioncurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Addition(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the addition between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Addition(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-24",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-24",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"additioncurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Addition(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the addition between the expression and the curve (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Addition(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-25",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-25",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"additioncurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Addition(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the addition between the two curves (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Addition(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-26",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-26",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"additioncurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Addition(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the addition between the curve ",(0,i.jsx)(e.code,{children:"curveL"})," (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Addition(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-27",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-27",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"additionireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Addition(IReadOnlyCollection<Curve>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the addition between the curves passed as argument in the collection\r\n",(0,i.jsx)(e.code,{children:"curves"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Addition(IReadOnlyCollection<Curve> curves, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-28",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curves"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Curve>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-28",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"additionireadonlycollectioncurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Addition(IReadOnlyCollection<CurveExpression>, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the addition between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Addition(IReadOnlyCollection<CurveExpression> curveExpressions, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-29",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveExpressions"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<CurveExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-29",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"subtractioncurveexpression-curveexpression-boolean-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Subtraction(CurveExpression, CurveExpression, Boolean, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the subtraction between the two expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Subtraction(CurveExpression expressionL, CurveExpression expressionR, bool nonNegative, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-30",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nonNegative"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-30",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"subtractioncurveexpression-curve-boolean-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Subtraction(CurveExpression, Curve, Boolean, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the subtraction between the expression and the curve (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Subtraction(CurveExpression expression, Curve curve, bool nonNegative, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-31",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nonNegative"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-31",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"subtractioncurve-curve-boolean-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Subtraction(Curve, Curve, Boolean, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the subtraction between the two curves (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Subtraction(Curve curveL, Curve curveR, bool nonNegative, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-32",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nonNegative"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-32",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"subtractioncurve-curveexpression-boolean-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Subtraction(Curve, CurveExpression, Boolean, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the subtraction between the curve ",(0,i.jsx)(e.code,{children:"curveL"})," (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as\r\narguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Subtraction(Curve curveL, CurveExpression expressionR, bool nonNegative, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-33",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nonNegative"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-33",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"minimumcurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Minimum(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the minimum between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Minimum(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-34",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-34",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"minimumcurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Minimum(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the minimum between the expression and the curve (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Minimum(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-35",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-35",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"minimumcurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Minimum(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the minimum between the two curves (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Minimum(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-36",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-36",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"minimumcurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Minimum(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the minimum between the curve ",(0,i.jsx)(e.code,{children:"curveL"})," (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Minimum(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-37",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-37",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"minimumireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Minimum(IReadOnlyCollection<Curve>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the minimum between the curves passed as argument in the collection\r\n",(0,i.jsx)(e.code,{children:"curves"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Minimum(IReadOnlyCollection<Curve> curves, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-38",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curves"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Curve>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-38",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"minimumireadonlycollectioncurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Minimum(IReadOnlyCollection<CurveExpression>, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the minimum between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Minimum(IReadOnlyCollection<CurveExpression> curveExpressions, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-39",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveExpressions"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<CurveExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-39",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maximumcurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Maximum(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the maximum between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Maximum(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-40",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-40",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maximumcurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Maximum(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the maximum between the expression and the curve (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Maximum(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-41",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-41",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maximumcurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Maximum(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the maximum between the two curves (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Maximum(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-42",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-42",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maximumcurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Maximum(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the maximum between the curve ",(0,i.jsx)(e.code,{children:"curveL"})," (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Maximum(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-43",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-43",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maximumireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Maximum(IReadOnlyCollection<Curve>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the maximum between the curves passed as argument in the collection\r\n",(0,i.jsx)(e.code,{children:"curves"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Maximum(IReadOnlyCollection<Curve> curves, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-44",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curves"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Curve>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-44",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maximumireadonlycollectioncurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Maximum(IReadOnlyCollection<CurveExpression>, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the maximum between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Maximum(IReadOnlyCollection<CurveExpression> curveExpressions, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-45",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveExpressions"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<CurveExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-45",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"convolutioncurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Convolution(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the convolution between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Convolution(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-46",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-46",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"convolutioncurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Convolution(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the convolution between the expression and the curve (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Convolution(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-47",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-47",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"convolutioncurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Convolution(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the convolution between the two curves (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Convolution(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-48",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-48",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"convolutioncurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Convolution(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the convolution between the curve ",(0,i.jsx)(e.code,{children:"curveL"})," (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Convolution(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-49",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-49",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"convolutionireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Convolution(IReadOnlyCollection<Curve>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the convolution between the curves passed as argument in the collection\r\n",(0,i.jsx)(e.code,{children:"curves"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Convolution(IReadOnlyCollection<Curve> curves, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-50",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curves"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Curve>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-50",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"convolutionireadonlycollectioncurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Convolution(IReadOnlyCollection<CurveExpression>, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the convolution between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Convolution(IReadOnlyCollection<CurveExpression> curveExpressions, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-51",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveExpressions"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<CurveExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-51",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"deconvolutioncurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Deconvolution(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the deconvolution between the two expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Deconvolution(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-52",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-52",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"deconvolutioncurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Deconvolution(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the deconvolution between the expression and the curve (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Deconvolution(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-53",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-53",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"deconvolutioncurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Deconvolution(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the deconvolution between the two curves (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Deconvolution(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-54",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-54",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"deconvolutioncurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Deconvolution(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the deconvolution between the curve ",(0,i.jsx)(e.code,{children:"curveL"})," (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as\r\narguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Deconvolution(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-55",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-55",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusconvolutioncurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusConvolution(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the max-plus convolution between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusConvolution(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-56",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-56",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusconvolutioncurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusConvolution(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the max-plus convolution between the expression and the curve\r\n(converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusConvolution(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-57",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-57",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusconvolutioncurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusConvolution(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the max-plus convolution between the two curves (converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusConvolution(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-58",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-58",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusconvolutioncurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusConvolution(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the max-plus convolution between the curve ",(0,i.jsx)(e.code,{children:"curveL"})," (converted\r\nto ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusConvolution(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-59",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-59",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusconvolutionireadonlycollectioncurve-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusConvolution(IReadOnlyCollection<Curve>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the max-plus convolution between the curves passed as argument in the\r\ncollection ",(0,i.jsx)(e.code,{children:"curves"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusConvolution(IReadOnlyCollection<Curve> curves, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-60",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curves"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Curve>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-60",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusconvolutionireadonlycollectioncurveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusConvolution(IReadOnlyCollection<CurveExpression>, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the max-plus convolution between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusConvolution(IReadOnlyCollection<CurveExpression> curveExpressions, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-61",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveExpressions"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<CurveExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-61",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusdeconvolutioncurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusDeconvolution(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the max-plus deconvolution between the two expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusDeconvolution(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-62",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-62",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusdeconvolutioncurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusDeconvolution(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the max-plus deconvolution between the expression and the curve (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusDeconvolution(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-63",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-63",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusdeconvolutioncurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusDeconvolution(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the max-plus deconvolution between the two curves (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusDeconvolution(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-64",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-64",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"maxplusdeconvolutioncurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"MaxPlusDeconvolution(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the max-plus deconvolution between the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\n(internally converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"}),"\r\npassed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression MaxPlusDeconvolution(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-65",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-65",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"compositioncurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Composition(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the composition between the two expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Composition(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-66",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-66",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"compositioncurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Composition(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the composition between the expression and the curve (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Composition(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-67",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-67",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"compositioncurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Composition(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the composition between the two curves (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Composition(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-68",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-68",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"compositioncurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Composition(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the composition between the curve ",(0,i.jsx)(e.code,{children:"curveL"})," (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as\r\narguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Composition(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-69",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-69",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"horizontaldeviationcurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"HorizontalDeviation(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the horizontal deviation operation between the two expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression HorizontalDeviation(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-70",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-70",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"horizontaldeviationcurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"HorizontalDeviation(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the horizontal deviation operation between the expression and the curve\r\n(internally converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression HorizontalDeviation(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-71",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-71",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"horizontaldeviationcurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"HorizontalDeviation(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the horizontal deviation operation between the two curves (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression HorizontalDeviation(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-72",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-72",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"horizontaldeviationcurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"HorizontalDeviation(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the horizontal deviation operation between the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\n(internally converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"}),"\r\npassed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression HorizontalDeviation(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-73",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-73",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"verticaldeviationcurveexpression-curveexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"VerticalDeviation(CurveExpression, CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the vertical deviation operation between the two expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression VerticalDeviation(CurveExpression expressionL, CurveExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-74",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-74",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"verticaldeviationcurveexpression-curve-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"VerticalDeviation(CurveExpression, Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the vertical deviation operation between the expression and the curve\r\n(internally converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression VerticalDeviation(CurveExpression expression, Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-75",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-75",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"verticaldeviationcurve-curve-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"VerticalDeviation(Curve, Curve, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the vertical deviation operation between the two curves (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression VerticalDeviation(Curve curveL, Curve curveR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-76",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveR"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-76",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"verticaldeviationcurve-curveexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"VerticalDeviation(Curve, CurveExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the vertical deviation operation between the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\n(internally converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ConcreteCurveExpression",children:"ConcreteCurveExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"}),"\r\npassed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression VerticalDeviation(Curve curveL, CurveExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-77",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-77",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"delaybycurveexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"DelayBy(CurveExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that delays the curve expression\r\n",(0,i.jsx)(e.code,{children:"expressionL"})," by the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t - T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", with ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mn,{children:"0"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"T \\ge 0"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the delay argument turns out to be either negative or infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression DelayBy(CurveExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-78",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-78",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"delaybycurveexpression-rational-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"DelayBy(CurveExpression, Rational, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that delays the curve expression\r\n",(0,i.jsx)(e.code,{children:"expression"})," by the rational ",(0,i.jsx)(e.code,{children:"delay"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t - T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", with ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mn,{children:"0"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"T \\ge 0"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the delay argument turns out to be either negative or infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression DelayBy(CurveExpression expression, Rational delay, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-79",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"delay"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-79",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"delaybycurve-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"DelayBy(Curve, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that delays the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\nby the rational ",(0,i.jsx)(e.code,{children:"delay"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t - T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", with ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mn,{children:"0"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"T \\ge 0"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the delay argument turns out to be either negative or infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression DelayBy(Curve curveL, Rational delay, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-80",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"delay"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-80",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"delaybycurve-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"DelayBy(Curve, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that delays the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\nby the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t - T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", with ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mn,{children:"0"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"T \\ge 0"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the delay argument turns out to be either negative or infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression DelayBy(Curve curveL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-81",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-81",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"forwardbycurveexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ForwardBy(CurveExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that forwards the curve expression\r\n",(0,i.jsx)(e.code,{children:"expressionL"})," by the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t + T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", with ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mn,{children:"0"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"T \\ge 0"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the time argument turns out to be either negative or infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ForwardBy(CurveExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-82",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-82",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"forwardbycurveexpression-rational-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ForwardBy(CurveExpression, Rational, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that forwards the curve expression\r\n",(0,i.jsx)(e.code,{children:"expression"})," by the rational ",(0,i.jsx)(e.code,{children:"time"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t + T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", with ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mn,{children:"0"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"T \\ge 0"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the time argument turns out to be either negative or infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ForwardBy(CurveExpression expression, Rational time, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-83",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"time"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-83",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"forwardbycurve-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ForwardBy(Curve, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that forwards the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\nby the rational ",(0,i.jsx)(e.code,{children:"time"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t + T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", with ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mn,{children:"0"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"T \\ge 0"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the time argument turns out to be either negative or infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ForwardBy(Curve curveL, Rational time, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-84",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"time"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-84",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"forwardbycurve-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"ForwardBy(Curve, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that forwards the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\nby the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t + T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", with ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{children:"\u2265"}),(0,i.jsx)(e.mn,{children:"0"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"T \\ge 0"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the time argument turns out to be either negative or infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression ForwardBy(Curve curveL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-85",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-85",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"horizontalshiftcurveexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"HorizontalShift(CurveExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that shifts the curve expression\r\n",(0,i.jsx)(e.code,{children:"expressionL"})," horizontally to the right by the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),",\r\ni.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t - T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the shift argument turns out to be infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression HorizontalShift(CurveExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-86",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-86",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"horizontalshiftcurveexpression-rational-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"HorizontalShift(CurveExpression, Rational, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that shifts the curve expression\r\n",(0,i.jsx)(e.code,{children:"expression"})," horizontally to the right by the rational ",(0,i.jsx)(e.code,{children:"time"}),",\r\ni.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t - T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the shift argument turns out to be infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression HorizontalShift(CurveExpression expression, Rational time, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-87",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"time"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-87",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"horizontalshiftcurve-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"HorizontalShift(Curve, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that shifts the curve ",(0,i.jsx)(e.code,{children:"curveL"})," horizontally to the right\r\nby the rational ",(0,i.jsx)(e.code,{children:"time"}),",\r\ni.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t - T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the shift argument turns out to be infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression HorizontalShift(Curve curveL, Rational time, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-88",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"time"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-88",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"horizontalshiftcurve-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"HorizontalShift(Curve, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that shifts the curve ",(0,i.jsx)(e.code,{children:"curveL"})," horizontally to the right\r\nby the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),",\r\ni.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mi,{children:"T"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t - T)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"T"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsxs)(e.p,{children:["Computing the expression will throw an ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception",children:"ArgumentException"}),"\r\nif the shift argument turns out to be infinite."]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression HorizontalShift(Curve curveL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-89",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-89",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"verticalshiftcurveexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"VerticalShift(CurveExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that shifts the curve expression\r\n",(0,i.jsx)(e.code,{children:"expressionL"})," by the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"K"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t) + K"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6833em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression VerticalShift(CurveExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-90",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-90",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"verticalshiftcurveexpression-rational-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"VerticalShift(CurveExpression, Rational, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that shifts the curve expression\r\n",(0,i.jsx)(e.code,{children:"expression"})," by the rational ",(0,i.jsx)(e.code,{children:"time"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"K"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t) + K"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6833em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression VerticalShift(CurveExpression expression, Rational time, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-91",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"time"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-91",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"verticalshiftcurve-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"VerticalShift(Curve, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that shifts the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\nby the rational ",(0,i.jsx)(e.code,{children:"time"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"K"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t) + K"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6833em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression VerticalShift(Curve curveL, Rational time, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-92",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"time"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-92",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"verticalshiftcurve-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"VerticalShift(Curve, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that shifts the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\nby the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),", i.e., computing ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"K"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"f(t) + K"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6833em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression VerticalShift(Curve curveL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-93",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-93",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"scalecurveexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Scale(CurveExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that scales the curve expression\r\n",(0,i.jsx)(e.code,{children:"expressionL"})," by the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),", i.e. ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"k"}),(0,i.jsx)(e.mo,{children:"\u22c5"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k \\cdot f(t)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Scale(CurveExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-94",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-94",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"scalecurveexpression-rational-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Scale(CurveExpression, Rational, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that scales the curve expression\r\n",(0,i.jsx)(e.code,{children:"expression"})," by the rational ",(0,i.jsx)(e.code,{children:"scaleFactor"}),", i.e. ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"k"}),(0,i.jsx)(e.mo,{children:"\u22c5"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k \\cdot f(t)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Scale(CurveExpression expression, Rational scaleFactor, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-95",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"scaleFactor"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-95",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"scalecurve-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Scale(Curve, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that scales the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\nby the rational ",(0,i.jsx)(e.code,{children:"scaleFactor"}),", i.e. ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"k"}),(0,i.jsx)(e.mo,{children:"\u22c5"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k \\cdot f(t)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Scale(Curve curveL, Rational scaleFactor, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-96",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"scaleFactor"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-96",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"scalecurve-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Scale(Curve, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression that scales the curve ",(0,i.jsx)(e.code,{children:"curveL"}),"\r\nby the rational expression ",(0,i.jsx)(e.code,{children:"expressionR"}),", i.e. ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"k"}),(0,i.jsx)(e.mo,{children:"\u22c5"}),(0,i.jsx)(e.mi,{children:"f"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k \\cdot f(t)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u22c5"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Scale(Curve curveL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-97",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"curveL"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-97",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationaladditionrationalexpression-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalAddition(RationalExpression, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the addition between the expression passed as first argument and the\r\nrational number passed as second argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalAddition(RationalExpression expression, Rational number, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-98",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-98",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationaladditionrationalexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalAddition(RationalExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the addition between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalAddition(RationalExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-99",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-99",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationaladditionrational-rational-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalAddition(Rational, Rational, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the addition between the two rational numbers passed as arguments\r\n(converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalAddition(Rational rationalL, Rational rationalR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-100",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalR"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-100",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationaladditionrational-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalAddition(Rational, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the addition between the rational number ",(0,i.jsx)(e.code,{children:"rationalL"})," and the\r\nexpression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalAddition(Rational rationalL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-101",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-101",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationaladditionireadonlycollectionrational-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalAddition(IReadOnlyCollection<Rational>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the addition between the rational numbers passed as\r\narguments using the collection ",(0,i.jsx)(e.code,{children:"numbers"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalAddition(IReadOnlyCollection<Rational> numbers, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-102",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numbers"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Rational>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-102",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationalsubtractionrationalexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalSubtraction(RationalExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the subtraction between the two rational expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalSubtraction(RationalExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-103",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-103",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationalsubtractionrationalexpression-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalSubtraction(RationalExpression, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the subtraction between the expression and the number (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalSubtraction(RationalExpression expression, Rational number, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-104",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-104",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationalsubtractionrational-rational-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalSubtraction(Rational, Rational, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the subtraction between the two numbers (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalSubtraction(Rational numberL, Rational numberR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-105",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numberL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numberR"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-105",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationalsubtractionrational-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalSubtraction(Rational, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the subtraction between the number ",(0,i.jsx)(e.code,{children:"numberL"})," (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as\r\narguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalSubtraction(Rational numberL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-106",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numberL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-106",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"productrationalexpression-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Product(RationalExpression, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the product between the expression passed as first argument and the\r\nrational number passed as second argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Product(RationalExpression expression, Rational number, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-107",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-107",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"productrationalexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Product(RationalExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the product between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Product(RationalExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-108",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-108",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"productrational-rational-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Product(Rational, Rational, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the product between the two rational numbers passed as arguments\r\n(converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Product(Rational rationalL, Rational rationalR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-109",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalR"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-109",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"productrational-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Product(Rational, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the product between the rational number ",(0,i.jsx)(e.code,{children:"rationalL"})," and the\r\nexpression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Product(Rational rationalL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-110",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-110",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationalproductireadonlycollectionrational-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalProduct(IReadOnlyCollection<Rational>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the product between the rational numbers passed as\r\narguments using the collection ",(0,i.jsx)(e.code,{children:"numbers"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalProduct(IReadOnlyCollection<Rational> numbers, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-111",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numbers"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Rational>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-111",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"divisionrationalexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Division(RationalExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the division between the two rational expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Division(RationalExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-112",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-112",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"divisionrationalexpression-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Division(RationalExpression, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the division between the expression and the number (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Division(RationalExpression expression, Rational number, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-113",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-113",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"divisionrational-rational-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Division(Rational, Rational, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the division between the two numbers (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),") passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Division(Rational numberL, Rational numberR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-114",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numberL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numberR"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-114",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"divisionrational-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Division(Rational, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the division between the number ",(0,i.jsx)(e.code,{children:"numberL"})," (internally\r\nconverted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),") and the expression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as\r\narguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Division(Rational numberL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-115",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numberL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-115",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"leastcommonmultiplerationalexpression-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"LeastCommonMultiple(RationalExpression, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the l.c.m. between the expression passed as first argument and the\r\nrational number passed as second argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression LeastCommonMultiple(RationalExpression expression, Rational number, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-116",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-116",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"leastcommonmultiplerationalexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"LeastCommonMultiple(RationalExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the l.c.m. between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression LeastCommonMultiple(RationalExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-117",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-117",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"leastcommonmultiplerational-rational-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"LeastCommonMultiple(Rational, Rational, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the l.c.m. between the two rational numbers passed as arguments\r\n(converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression LeastCommonMultiple(Rational rationalL, Rational rationalR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-118",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalR"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-118",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"leastcommonmultiplerational-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"LeastCommonMultiple(Rational, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the l.c.m. between the rational number ",(0,i.jsx)(e.code,{children:"rationalL"})," and the\r\nexpression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression LeastCommonMultiple(Rational rationalL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-119",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-119",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"leastcommonmultipleireadonlycollectionrational-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"LeastCommonMultiple(IReadOnlyCollection<Rational>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the l.c.m. between the rational numbers passed as\r\narguments using the collection ",(0,i.jsx)(e.code,{children:"numbers"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression LeastCommonMultiple(IReadOnlyCollection<Rational> numbers, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-120",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numbers"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Rational>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-120",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"greatestcommondivisorrationalexpression-rational-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"GreatestCommonDivisor(RationalExpression, Rational, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the g.c.d. between the expression passed as first argument and the\r\nrational number passed as second argument (converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression GreatestCommonDivisor(RationalExpression expression, Rational number, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-121",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-121",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"greatestcommondivisorrationalexpression-rationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"GreatestCommonDivisor(RationalExpression, RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a new expression composed of the g.c.d. between the expressions passed as arguments."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression GreatestCommonDivisor(RationalExpression expressionL, RationalExpression expressionR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-122",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionL"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-122",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"greatestcommondivisorrational-rational-string-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"GreatestCommonDivisor(Rational, Rational, String, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the g.c.d. between the two rational numbers passed as arguments\r\n(converted to ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression GreatestCommonDivisor(Rational rationalL, Rational rationalR, string nameL, string nameR, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-123",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalR"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameR"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-123",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"greatestcommondivisorrational-rationalexpression-string-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"GreatestCommonDivisor(Rational, RationalExpression, String, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the g.c.d. between the rational number ",(0,i.jsx)(e.code,{children:"rationalL"})," and the\r\nexpression ",(0,i.jsx)(e.code,{children:"expressionR"})," passed as arguments."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression GreatestCommonDivisor(Rational rationalL, RationalExpression expressionR, string nameL, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-124",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"rationalL"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionR"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"nameL"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-124",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"greatestcommondivisorireadonlycollectionrational-ireadonlycollectionstring-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"GreatestCommonDivisor(IReadOnlyCollection<Rational>, IReadOnlyCollection<String>, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Creates a new expression composed of the g.c.d. between the rational numbers passed as\r\narguments using the collection ",(0,i.jsx)(e.code,{children:"numbers"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression GreatestCommonDivisor(IReadOnlyCollection<Rational> numbers, IReadOnlyCollection<string> names, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-125",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"numbers"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<Rational>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"names"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlycollection-1",children:"IReadOnlyCollection<String>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-125",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"negaterationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Negate(RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds the negation operator to the expression passed as argument."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Negate(RationalExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-126",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-126",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"negaterational-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Negate(Rational, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds the negation operator to the number passed as argument (which is converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Negate(Rational number, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-127",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-127",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"invertrationalexpression-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Invert(RationalExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Adds the inversion operator to the expression passed as argument."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Invert(RationalExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-128",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-128",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"invertrational-string-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Invert(Rational, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(e.p,{children:["Adds the inversion operator to the number passed as argument (which is converted to\r\n",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/RationalNumberExpression",children:"RationalNumberExpression"}),")."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression Invert(Rational number, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-129",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"number"})," Rational",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expressionName"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-129",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"placeholderstring-expressionsettings",children:(0,i.jsx)(e.strong,{children:"Placeholder(String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a placeholder expression for a curve expression."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static CurveExpression Placeholder(string name, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-130",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-130",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"rationalplaceholderstring-expressionsettings",children:(0,i.jsx)(e.strong,{children:"RationalPlaceholder(String, ExpressionSettings)"})}),"\n",(0,i.jsx)(e.p,{children:"Creates a placeholder expression for a rational expression."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static RationalExpression RationalPlaceholder(string name, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-131",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"name"})," ",(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"settings"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-131",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression",children:"RationalExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"computetigenericexpressiont",children:(0,i.jsx)(e.strong,{children:"Compute<T>(IGenericExpression<T>)"})}),"\n",(0,i.jsx)(e.p,{children:"Computes the value of the expression (rational or curve expression) passed as argument."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static T Compute<T>(IGenericExpression<T> expression)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"Expressions.T"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"parameters-132",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"expression"})," IGenericExpression<T>",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-132",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:["Expressions.T",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h3,{id:"equivalentcurveexpression-curveexpression",children:(0,i.jsx)(e.strong,{children:"Equivalent(CurveExpression, CurveExpression)"})}),"\n",(0,i.jsxs)(e.p,{children:["Verifies if two curve expressions (",(0,i.jsx)(e.code,{children:"e1"})," and ",(0,i.jsx)(e.code,{children:"e2"}),") are equivalent, i.e., their\r\nvalues are equivalent."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public static bool Equivalent(CurveExpression e1, CurveExpression e2)\n"})}),"\n",(0,i.jsx)(e.h4,{id:"parameters-133",children:"Parameters"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"e1"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"e2"})," ",(0,i.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(e.h4,{id:"returns-133",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]})]})}function p(s={}){const{wrapper:e}={...(0,t.R)(),...s.components};return e?(0,i.jsx)(e,{...s,children:(0,i.jsx)(x,{...s})}):x(s)}},8453:(s,e,n)=>{n.d(e,{R:()=>a,x:()=>o});var r=n(6540);const i={},t=r.createContext(i);function a(s){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function o(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(i):s.components||i:a(s.components),r.createElement(t.Provider,{value:e},s.children)}}}]);