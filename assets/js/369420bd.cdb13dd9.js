"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[407],{8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(r.Provider,{value:e},n.children)}},8780:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/IToCodeString","title":"IToCodeString","description":"Interface for classes having the ToCodeString() method.","source":"@site/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/IToCodeString.md","sourceDirName":"nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra","slug":"/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/IToCodeString","permalink":"/nancy/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/IToCodeString","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"IToCodeString"},"sidebar":"docsSidebar","previous":{"title":"CurveExtensions","permalink":"/nancy/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/CurveExtensions"},"next":{"title":"LinqExtensions","permalink":"/nancy/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/LinqExtensions"}}');var o=t(4848),r=t(8453);const s={hide_title:!0,title:"IToCodeString"},a="IToCodeString",c={},d=[{value:"Methods",id:"methods",level:2},{value:"<strong>ToCodeString(Boolean, Int32)</strong>",id:"tocodestringboolean-int32",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"itocodestring",children:"IToCodeString"})}),"\n",(0,o.jsx)(e.p,{children:"Interface for classes having the ToCodeString() method."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-csharp",children:"public interface IToCodeString\n"})}),"\n",(0,o.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(e.h3,{id:"tocodestringboolean-int32",children:(0,o.jsx)(e.strong,{children:"ToCodeString(Boolean, Int32)"})}),"\n",(0,o.jsx)(e.p,{children:"Returns a string containing C# code to create this object.\r\nUseful to copy and paste from a debugger into another test or notebook for further investigation."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-csharp",children:"string ToCodeString(bool formatted, int indentation)\n"})}),"\n",(0,o.jsx)(e.h4,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"formatted"})," ",(0,o.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,o.jsx)("br",{})]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"indentation"})," ",(0,o.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",children:"Int32"}),(0,o.jsx)("br",{})]}),"\n",(0,o.jsx)(e.h4,{id:"returns",children:"Returns"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,o.jsx)("br",{})]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}}}]);