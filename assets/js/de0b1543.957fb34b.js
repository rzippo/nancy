"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[2186],{8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}},8817:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>x,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor","title":"NetCalGBaseVisitor<Result>","description":"This class is auto-generated using ANTLR, version 4.13.2.","source":"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor.md","sourceDirName":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar","slug":"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"NetCalGBaseVisitor<Result>"},"sidebar":"docsSidebar","previous":{"title":"INetCalGVisitor<Result>","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/INetCalGVisitor"},"next":{"title":"NetCalGLexer","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGLexer"}}');var i=s(4848),t=s(8453);const a={hide_title:!0,title:"NetCalGBaseVisitor<Result>"},o="NetCalGBaseVisitor<Result>",l={},c=[{value:"Type Parameters",id:"type-parameters",level:4},{value:"Methods",id:"methods",level:2},{value:"<strong>VisitEquivalenceCatalog(EquivalenceCatalogContext)</strong>",id:"visitequivalencecatalogequivalencecatalogcontext",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>VisitEquivalence(EquivalenceContext)</strong>",id:"visitequivalenceequivalencecontext",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>VisitEquivalenceExpression(EquivalenceExpressionContext)</strong>",id:"visitequivalenceexpressionequivalenceexpressioncontext",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<strong>VisitHypothesis(HypothesisContext)</strong>",id:"visithypothesishypothesiscontext",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<strong>VisitSet(SetContext)</strong>",id:"visitsetsetcontext",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<strong>VisitPlaceholder(PlaceholderContext)</strong>",id:"visitplaceholderplaceholdercontext",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"<strong>VisitNonDecreasingProperty(NonDecreasingPropertyContext)</strong>",id:"visitnondecreasingpropertynondecreasingpropertycontext",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"<strong>VisitNonNegativeProperty(NonNegativePropertyContext)</strong>",id:"visitnonnegativepropertynonnegativepropertycontext",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"<strong>VisitSubadditiveProperty(SubadditivePropertyContext)</strong>",id:"visitsubadditivepropertysubadditivepropertycontext",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"<strong>VisitConvexProperty(ConvexPropertyContext)</strong>",id:"visitconvexpropertyconvexpropertycontext",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"<strong>VisitConcaveProperty(ConcavePropertyContext)</strong>",id:"visitconcavepropertyconcavepropertycontext",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"<strong>VisitLeftContinuousProperty(LeftContinuousPropertyContext)</strong>",id:"visitleftcontinuouspropertyleftcontinuouspropertycontext",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"<strong>VisitRightContinuousProperty(RightContinuousPropertyContext)</strong>",id:"visitrightcontinuouspropertyrightcontinuouspropertycontext",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"<strong>VisitZeroAtZeroProperty(ZeroAtZeroPropertyContext)</strong>",id:"visitzeroatzeropropertyzeroatzeropropertycontext",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"<strong>VisitUltimatelyConstant(UltimatelyConstantContext)</strong>",id:"visitultimatelyconstantultimatelyconstantcontext",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"<strong>VisitCompositionExpression(CompositionExpressionContext)</strong>",id:"visitcompositionexpressioncompositionexpressioncontext",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"<strong>VisitParenthesizedExpression(ParenthesizedExpressionContext)</strong>",id:"visitparenthesizedexpressionparenthesizedexpressioncontext",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"<strong>VisitMaxPlusDeconvolutionExpression(MaxPlusDeconvolutionExpressionContext)</strong>",id:"visitmaxplusdeconvolutionexpressionmaxplusdeconvolutionexpressioncontext",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"<strong>VisitAdditionExpression(AdditionExpressionContext)</strong>",id:"visitadditionexpressionadditionexpressioncontext",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"<strong>VisitConvolutionExpression(ConvolutionExpressionContext)</strong>",id:"visitconvolutionexpressionconvolutionexpressioncontext",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"<strong>VisitConstantCurveExpression(ConstantCurveExpressionContext)</strong>",id:"visitconstantcurveexpressionconstantcurveexpressioncontext",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"<strong>VisitDeconvolutionExpression(DeconvolutionExpressionContext)</strong>",id:"visitdeconvolutionexpressiondeconvolutionexpressioncontext",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"<strong>VisitSubtractionExpression(SubtractionExpressionContext)</strong>",id:"visitsubtractionexpressionsubtractionexpressioncontext",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"<strong>VisitMinimumExpression(MinimumExpressionContext)</strong>",id:"visitminimumexpressionminimumexpressioncontext",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"<strong>VisitMaxPlusConvolutionExpression(MaxPlusConvolutionExpressionContext)</strong>",id:"visitmaxplusconvolutionexpressionmaxplusconvolutionexpressioncontext",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"<strong>VisitMaximumExpression(MaximumExpressionContext)</strong>",id:"visitmaximumexpressionmaximumexpressioncontext",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"<strong>VisitConstantCurve(ConstantCurveContext)</strong>",id:"visitconstantcurveconstantcurvecontext",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"<strong>VisitRelationalOperator(RelationalOperatorContext)</strong>",id:"visitrelationaloperatorrelationaloperatorcontext",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-27",level:4}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"netcalgbasevisitorresult",children:"NetCalGBaseVisitor<Result>"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"This class is auto-generated using ANTLR, version 4.13.2."})}),"\n",(0,i.jsxs)(n.p,{children:["This class provides an empty implementation of ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/INetCalGVisitor",children:"INetCalGVisitor<Result>"}),",\r\nwhich can be extended to create a visitor which only needs to handle a subset\r\nof the available methods."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public class NetCalGBaseVisitor<Result> : , , INetCalGVisitor`1\n"})}),"\n",(0,i.jsx)(n.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"NetCalGBaseVisitor&lt;Result&gt;.Result"}),(0,i.jsx)("br",{}),"\r\nThe return type of the visit operation."]}),"\n",(0,i.jsxs)(n.p,{children:["Inheritance ",(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 AbstractParseTreeVisitor<Result> \u2192 ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor",children:"NetCalGBaseVisitor<Result>"}),(0,i.jsx)("br",{}),"\r\nImplements IParseTreeVisitor<Result>, INetCalGVisitor<Result>"]}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"visitequivalencecatalogequivalencecatalogcontext",children:(0,i.jsx)(n.strong,{children:"VisitEquivalenceCatalog(EquivalenceCatalogContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#equivalencecatalog",children:"equivalenceCatalog()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitEquivalenceCatalog(EquivalenceCatalogContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.EquivalenceCatalogContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitequivalenceequivalencecontext",children:(0,i.jsx)(n.strong,{children:"VisitEquivalence(EquivalenceContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#equivalence",children:"equivalence()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitEquivalence(EquivalenceContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.EquivalenceContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitequivalenceexpressionequivalenceexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitEquivalenceExpression(EquivalenceExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#equivalenceexpression",children:"equivalenceExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitEquivalenceExpression(EquivalenceExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.EquivalenceExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visithypothesishypothesiscontext",children:(0,i.jsx)(n.strong,{children:"VisitHypothesis(HypothesisContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#hypothesis",children:"hypothesis()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitHypothesis(HypothesisContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.HypothesisContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitsetsetcontext",children:(0,i.jsx)(n.strong,{children:"VisitSet(SetContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#set",children:"set()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitSet(SetContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.SetContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitplaceholderplaceholdercontext",children:(0,i.jsx)(n.strong,{children:"VisitPlaceholder(PlaceholderContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#placeholder",children:"placeholder()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitPlaceholder(PlaceholderContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.PlaceholderContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitnondecreasingpropertynondecreasingpropertycontext",children:(0,i.jsx)(n.strong,{children:"VisitNonDecreasingProperty(NonDecreasingPropertyContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the nonDecreasingProperty\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitNonDecreasingProperty(NonDecreasingPropertyContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.NonDecreasingPropertyContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitnonnegativepropertynonnegativepropertycontext",children:(0,i.jsx)(n.strong,{children:"VisitNonNegativeProperty(NonNegativePropertyContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the nonNegativeProperty\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitNonNegativeProperty(NonNegativePropertyContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.NonNegativePropertyContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitsubadditivepropertysubadditivepropertycontext",children:(0,i.jsx)(n.strong,{children:"VisitSubadditiveProperty(SubadditivePropertyContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the subadditiveProperty\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitSubadditiveProperty(SubadditivePropertyContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.SubadditivePropertyContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitconvexpropertyconvexpropertycontext",children:(0,i.jsx)(n.strong,{children:"VisitConvexProperty(ConvexPropertyContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the convexProperty\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitConvexProperty(ConvexPropertyContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.ConvexPropertyContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitconcavepropertyconcavepropertycontext",children:(0,i.jsx)(n.strong,{children:"VisitConcaveProperty(ConcavePropertyContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the concaveProperty\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitConcaveProperty(ConcavePropertyContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.ConcavePropertyContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitleftcontinuouspropertyleftcontinuouspropertycontext",children:(0,i.jsx)(n.strong,{children:"VisitLeftContinuousProperty(LeftContinuousPropertyContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the leftContinuousProperty\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitLeftContinuousProperty(LeftContinuousPropertyContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.LeftContinuousPropertyContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitrightcontinuouspropertyrightcontinuouspropertycontext",children:(0,i.jsx)(n.strong,{children:"VisitRightContinuousProperty(RightContinuousPropertyContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the rightContinuousProperty\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitRightContinuousProperty(RightContinuousPropertyContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.RightContinuousPropertyContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitzeroatzeropropertyzeroatzeropropertycontext",children:(0,i.jsx)(n.strong,{children:"VisitZeroAtZeroProperty(ZeroAtZeroPropertyContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the zeroAtZeroProperty\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitZeroAtZeroProperty(ZeroAtZeroPropertyContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.ZeroAtZeroPropertyContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitultimatelyconstantultimatelyconstantcontext",children:(0,i.jsx)(n.strong,{children:"VisitUltimatelyConstant(UltimatelyConstantContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the ultimatelyConstant\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#property",children:"property()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitUltimatelyConstant(UltimatelyConstantContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.UltimatelyConstantContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitcompositionexpressioncompositionexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitCompositionExpression(CompositionExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the compositionExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitCompositionExpression(CompositionExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.CompositionExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitparenthesizedexpressionparenthesizedexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitParenthesizedExpression(ParenthesizedExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the parenthesizedExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitParenthesizedExpression(ParenthesizedExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.ParenthesizedExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitmaxplusdeconvolutionexpressionmaxplusdeconvolutionexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitMaxPlusDeconvolutionExpression(MaxPlusDeconvolutionExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the maxPlusDeconvolutionExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitMaxPlusDeconvolutionExpression(MaxPlusDeconvolutionExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.MaxPlusDeconvolutionExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitadditionexpressionadditionexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitAdditionExpression(AdditionExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the additionExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitAdditionExpression(AdditionExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.AdditionExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitconvolutionexpressionconvolutionexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitConvolutionExpression(ConvolutionExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the convolutionExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitConvolutionExpression(ConvolutionExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.ConvolutionExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitconstantcurveexpressionconstantcurveexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitConstantCurveExpression(ConstantCurveExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the constantCurveExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitConstantCurveExpression(ConstantCurveExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.ConstantCurveExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitdeconvolutionexpressiondeconvolutionexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitDeconvolutionExpression(DeconvolutionExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the deconvolutionExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitDeconvolutionExpression(DeconvolutionExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.DeconvolutionExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitsubtractionexpressionsubtractionexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitSubtractionExpression(SubtractionExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the subtractionExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitSubtractionExpression(SubtractionExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-22",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.SubtractionExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitminimumexpressionminimumexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitMinimumExpression(MinimumExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the minimumExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitMinimumExpression(MinimumExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-23",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.MinimumExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitmaxplusconvolutionexpressionmaxplusconvolutionexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitMaxPlusConvolutionExpression(MaxPlusConvolutionExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the maxPlusConvolutionExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitMaxPlusConvolutionExpression(MaxPlusConvolutionExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-24",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.MaxPlusConvolutionExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitmaximumexpressionmaximumexpressioncontext",children:(0,i.jsx)(n.strong,{children:"VisitMaximumExpression(MaximumExpressionContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by the maximumExpression\r\nlabeled alternative in ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#curveexpression",children:"curveExpression()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitMaximumExpression(MaximumExpressionContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-25",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.MaximumExpressionContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitconstantcurveconstantcurvecontext",children:(0,i.jsx)(n.strong,{children:"VisitConstantCurve(ConstantCurveContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#constantcurve",children:"constantCurve()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitConstantCurve(ConstantCurveContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-26",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.ConstantCurveContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-26",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(n.h3,{id:"visitrelationaloperatorrelationaloperatorcontext",children:(0,i.jsx)(n.strong,{children:"VisitRelationalOperator(RelationalOperatorContext)"})}),"\n",(0,i.jsxs)(n.p,{children:["Visit a parse tree produced by ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGBaseVisitor#relationaloperator",children:"relationalOperator()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The default implementation returns the result of calling\non ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public Result VisitRelationalOperator(RelationalOperatorContext context)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-27",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"context"})," ",(0,i.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Grammar/NetCalGParser",children:"NetCalGParser.RelationalOperatorContext"}),(0,i.jsx)("br",{}),"\r\nThe parse tree."]}),"\n",(0,i.jsx)(n.h4,{id:"returns-27",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["NetCalGBaseVisitor<Result>.Result",(0,i.jsx)("br",{})]})]})}function x(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);