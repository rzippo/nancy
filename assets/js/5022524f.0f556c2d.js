"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[2838],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>d});var t=r(7294);function s(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){s(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var p=t.createContext({}),c=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},l=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,s=e.mdxType,i=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),y=c(r),d=s,x=y["".concat(p,".").concat(d)]||y[d]||u[d]||i;return r?t.createElement(x,a(a({ref:n},l),{},{components:r})):t.createElement(x,a({ref:n},l))}));function d(e,n){var r=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=r.length,a=new Array(i);a[0]=y;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:s,a[1]=o;for(var c=2;c<i;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},880:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=r(7462),s=(r(7294),r(3905));const i={hide_title:!0},a="IGenericUnaryExpression&lt;T, TResult&gt;",o={unversionedId:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericUnaryExpression`2",id:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericUnaryExpression`2",title:"IGenericUnaryExpression&lt;T, TResult&gt;",description:"Interface with members and functions which allow to define a unary expression, i.e. an expression whose root node",source:"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericUnaryExpression`2.md",sourceDirName:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals",slug:"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericUnaryExpression`2",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericUnaryExpression`2",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"docsSidebar",previous:{title:"IGenericExpression&lt;T&gt;",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericExpression`1"},next:{title:"InvertRationalExpression",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/InvertRationalExpression"}},p={},c=[{value:"Type Parameters",id:"type-parameters",level:4},{value:"Properties",id:"properties",level:2},{value:"<strong>Expression</strong>",id:"expression",level:3},{value:"Property Value",id:"property-value",level:4}],l={toc:c};function u(e){let{components:n,...r}=e;return(0,s.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"igenericunaryexpressiont-tresult"},"IGenericUnaryExpression","<","T, TResult",">"),(0,s.kt)("p",null,"Interface with members and functions which allow to define a unary expression, i.e. an expression whose root node\ncorresponds to an operation that involves only one operand."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public interface IGenericUnaryExpression<T, TResult> : IGenericExpression`1\n")),(0,s.kt)("h4",{id:"type-parameters"},"Type Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"IGenericUnaryExpression&lt;T, TResult&gt;.T"),(0,s.kt)("br",null),"\nOperand type"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"IGenericUnaryExpression&lt;T, TResult&gt;.TResult"),(0,s.kt)("br",null),"\nResult type"),(0,s.kt)("p",null,"Implements IGenericExpression","<","TResult",">"),(0,s.kt)("h2",{id:"properties"},"Properties"),(0,s.kt)("h3",{id:"expression"},(0,s.kt)("strong",{parentName:"h3"},"Expression")),(0,s.kt)("p",null,"Expression on which the unary operation is applied"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract IGenericExpression<T> Expression { get; }\n")),(0,s.kt)("h4",{id:"property-value"},"Property Value"),(0,s.kt)("p",null,"IGenericExpression","<","T",">",(0,s.kt)("br",null)))}u.isMDXComponent=!0}}]);