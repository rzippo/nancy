"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[9783],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var s=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,s,i=function(e,n){if(null==e)return{};var t,s,i={},r=Object.keys(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=s.createContext({}),l=function(e){var n=s.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=l(e.components);return s.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},d=s.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=l(t),h=i,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||r;return t?s.createElement(m,o(o({ref:n},c),{},{components:t})):s.createElement(m,o({ref:n},c))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=d;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var l=2;l<r;l++)o[l]=t[l];return s.createElement.apply(null,o)}return s.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3861:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=t(7462),i=(t(7294),t(3905));const r={hide_title:!0},o="ExpressionPosition",a={unversionedId:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition",id:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition",title:"ExpressionPosition",description:"Class which models the position of a sub-expression inside a DNC expression. The position is obtained by",source:"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition.md",sourceDirName:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility",slug:"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"docsSidebar",previous:{title:"Unipi.Nancy.Expressions.ExpressionsUtility",permalink:"/nancy/docs/category/unipinancyexpressionsexpressionsutility"},next:{title:"ExtensionMethods",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExtensionMethods"}},p={},l=[{value:"Constructors",id:"constructors",level:2},{value:"<strong>ExpressionPosition(IEnumerable&lt;String&gt;)</strong>",id:"expressionpositionienumerablestring",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Exceptions",id:"exceptions",level:4},{value:"<strong>ExpressionPosition()</strong>",id:"expressionposition-1",level:3},{value:"Methods",id:"methods",level:2},{value:"<strong>Operand()</strong>",id:"operand",level:3},{value:"Returns",id:"returns",level:4},{value:"<strong>Operand(Int32)</strong>",id:"operandint32",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>LeftOperand()</strong>",id:"leftoperand",level:3},{value:"Returns",id:"returns-2",level:4},{value:"<strong>RightOperand()</strong>",id:"rightoperand",level:3},{value:"Returns",id:"returns-3",level:4},{value:"<strong>ValidateExpressionPosition(IEnumerable&lt;String&gt;)</strong>",id:"validateexpressionpositionienumerablestring",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<strong>GetPositionPath()</strong>",id:"getpositionpath",level:3},{value:"Returns",id:"returns-5",level:4}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,s.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"expressionposition"},"ExpressionPosition"),(0,i.kt)("p",null,"Class which models the position of a sub-expression inside a DNC expression. The position is obtained by\nspecifying, using the different methods, the path from the root of the expression tree to the node representing\nthe sub-expression."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class ExpressionPosition\n")),(0,i.kt)("p",null,"Inheritance ",(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object")," \u2192 ",(0,i.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition"},"ExpressionPosition")),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"expressionpositionienumerablestring"},(0,i.kt)("strong",{parentName:"h3"},"ExpressionPosition(IEnumerable","<","String",">",")")),(0,i.kt)("p",null,"Creates the object representing the position of a sub-expression inside a DNC expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionPosition(IEnumerable<string> positionPath)\n")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"positionPath")," ",(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","String",">"),(0,i.kt)("br",null),'\nList of directions from the root expression to the sub-expression. The admitted\nvalues for the list are: "Operand", "LeftOperand", "RightOperand", a string representing a number (to be used to\nindex the operand of an n-ary expression, starting from 0).'),(0,i.kt)("h4",{id:"exceptions"},"Exceptions"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,i.kt)("br",null),"\nInvalid direction string"),(0,i.kt)("h3",{id:"expressionposition-1"},(0,i.kt)("strong",{parentName:"h3"},"ExpressionPosition()")),(0,i.kt)("p",null,"Class which models the position of a sub-expression inside a DNC expression. The position is obtained by\nspecifying, using the different methods, the path from the root of the expression tree to the node representing\nthe sub-expression."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionPosition()\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"operand"},(0,i.kt)("strong",{parentName:"h3"},"Operand()")),(0,i.kt)("p",null,"Adds to the path the step through the operand of a unary expression node"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionPosition Operand()\n")),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition"},"ExpressionPosition"),(0,i.kt)("br",null)),(0,i.kt)("h3",{id:"operandint32"},(0,i.kt)("strong",{parentName:"h3"},"Operand(Int32)")),(0,i.kt)("p",null,"Adds to the path the step through the operand number !:index (starting from 0) of an n-ary\nexpression node"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionPosition Operand(int index)\n")),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"index")," ",(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32"},"Int32"),(0,i.kt)("br",null)),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition"},"ExpressionPosition"),(0,i.kt)("br",null)),(0,i.kt)("h3",{id:"leftoperand"},(0,i.kt)("strong",{parentName:"h3"},"LeftOperand()")),(0,i.kt)("p",null,"Adds to the path the step through the left operand of a binary expression node"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionPosition LeftOperand()\n")),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition"},"ExpressionPosition"),(0,i.kt)("br",null)),(0,i.kt)("h3",{id:"rightoperand"},(0,i.kt)("strong",{parentName:"h3"},"RightOperand()")),(0,i.kt)("p",null,"Adds to the path the step through the right operand of a binary expression node"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionPosition RightOperand()\n")),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility/ExpressionPosition"},"ExpressionPosition"),(0,i.kt)("br",null)),(0,i.kt)("h3",{id:"validateexpressionpositionienumerablestring"},(0,i.kt)("strong",{parentName:"h3"},"ValidateExpressionPosition(IEnumerable","<","String",">",")")),(0,i.kt)("p",null,"Checks the validity of a list of strings representing a path inside an expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public static bool ValidateExpressionPosition(IEnumerable<string> positionPath)\n")),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"positionPath")," ",(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","String",">"),(0,i.kt)("br",null)),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,i.kt)("br",null)),(0,i.kt)("h3",{id:"getpositionpath"},(0,i.kt)("strong",{parentName:"h3"},"GetPositionPath()")),(0,i.kt)("p",null,"Return the path inside an expression as a list of direction strings"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public IEnumerable<string> GetPositionPath()\n")),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","String",">"),(0,i.kt)("br",null)))}u.isMDXComponent=!0}}]);