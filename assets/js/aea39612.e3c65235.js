"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[4309],{3101:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/IsomorphismConvLeft","title":"IsomorphismConvLeft","description":"The upper pseudoinverse of a (min,+) convolution of two non-decreasing left-continuous function is equal","source":"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/IsomorphismConvLeft.md","sourceDirName":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences","slug":"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/IsomorphismConvLeft","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/IsomorphismConvLeft","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"IsomorphismConvLeft"},"sidebar":"docsSidebar","previous":{"title":"EquivalenceGrammarVisitor","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/EquivalenceGrammarVisitor"},"next":{"title":"IsomorphismConvRight","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/IsomorphismConvRight"}}');var r=s(4848),o=s(8453);const t={hide_title:!0,title:"IsomorphismConvLeft"},c="IsomorphismConvLeft",p={},a=[{value:"Properties",id:"properties",level:2},{value:"<strong>LeftSideExpression</strong>",id:"leftsideexpression",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<strong>RightSideExpression</strong>",id:"rightsideexpression",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"Constructors",id:"constructors",level:2},{value:"<strong>IsomorphismConvLeft()</strong>",id:"isomorphismconvleft-1",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",span:"span",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"isomorphismconvleft",children:"IsomorphismConvLeft"})}),"\n",(0,r.jsxs)(n.p,{children:["The upper pseudoinverse of a (min,+) convolution of two non-decreasing left-continuous function is equal\r\nto the (max,+) convolution of their upper pseudoinverses.\r\nI.e., ",(0,r.jsx)(n.span,{className:"katex-error",title:"ParseError: KaTeX parse error: Got function '\\overline' with no arguments as superscript at position 35: \u2026rline{-1}} = f^\\\u0332o\u0332v\u0332e\u0332r\u0332l\u0332i\u0332n\u0332e\u0332{-1} \\overline{\u2026",style:{color:"#cc0000"},children:"(f \\otimes g)^{\\overline{-1}} = f^\\overline{-1} \\overline{\\otimes} g^\\overline{-1}"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Theorem 4.16 in ",(0,r.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/references",children:"[Zippo23]"}),"."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class IsomorphismConvLeft : Equivalence\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Inheritance ",(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,r.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/Equivalence",children:"Equivalence"})," \u2192 ",(0,r.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/IsomorphismConvLeft",children:"IsomorphismConvLeft"})]}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"leftsideexpression",children:(0,r.jsx)(n.strong,{children:"LeftSideExpression"})}),"\n",(0,r.jsx)(n.p,{children:"Left side of the equivalence"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public CurveExpression LeftSideExpression { get; set; }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"property-value",children:"Property Value"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h3,{id:"rightsideexpression",children:(0,r.jsx)(n.strong,{children:"RightSideExpression"})}),"\n",(0,r.jsx)(n.p,{children:"Right side of the equivalence"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public CurveExpression RightSideExpression { get; set; }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"property-value-1",children:"Property Value"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsx)(n.h3,{id:"isomorphismconvleft-1",children:(0,r.jsx)(n.strong,{children:"IsomorphismConvLeft()"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public IsomorphismConvLeft()\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);