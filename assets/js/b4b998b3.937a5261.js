"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[6123],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var m=a.createContext({}),o=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,m=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=o(n),k=l,d=c["".concat(m,".").concat(k)]||c[k]||u[k]||r;return n?a.createElement(d,i(i({ref:t},p),{},{components:n})):a.createElement(d,i({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=c;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s.mdxType="string"==typeof e?e:l,i[1]=s;for(var o=2;o<r;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3178:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return k},frontMatter:function(){return s},metadata:function(){return o},toc:function(){return u}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],s={hide_title:!0,sidebar_position:5},m="Element",o={unversionedId:"nancy/Unipi.Nancy.MinPlusAlgebra/Element",id:"nancy/Unipi.Nancy.MinPlusAlgebra/Element",title:"Element",description:"Smallest unit of representation of a min-plus algebra function.",source:"@site/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element.md",sourceDirName:"nancy/Unipi.Nancy.MinPlusAlgebra",slug:"/nancy/Unipi.Nancy.MinPlusAlgebra/Element",permalink:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{hide_title:!0,sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Segment",permalink:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},next:{title:"ComputationSettings",permalink:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"}},p={},u=[{value:"Properties",id:"properties",level:2},{value:"<strong>StartTime</strong>",id:"starttime",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<strong>EndTime</strong>",id:"endtime",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"<strong>Length</strong>",id:"length",level:3},{value:"Property Value",id:"property-value-2",level:4},{value:"<strong>IsInfinite</strong>",id:"isinfinite",level:3},{value:"Property Value",id:"property-value-3",level:4},{value:"<strong>IsPlusInfinite</strong>",id:"isplusinfinite",level:3},{value:"Property Value",id:"property-value-4",level:4},{value:"<strong>IsMinusInfinite</strong>",id:"isminusinfinite",level:3},{value:"Property Value",id:"property-value-5",level:4},{value:"<strong>IsFinite</strong>",id:"isfinite",level:3},{value:"Property Value",id:"property-value-6",level:4},{value:"<strong>IsIdenticallyZero</strong>",id:"isidenticallyzero",level:3},{value:"Property Value",id:"property-value-7",level:4},{value:"<strong>Type</strong>",id:"type",level:3},{value:"Property Value",id:"property-value-8",level:4},{value:"Methods",id:"methods",level:2},{value:"<strong>ValueAt(Rational)</strong>",id:"valueatrational",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>IsDefinedFor(Rational)</strong>",id:"isdefinedforrational",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>ToString()</strong>",id:"tostring",level:3},{value:"Returns",id:"returns-2",level:4},{value:"<strong>Scale(Rational)</strong>",id:"scalerational",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<strong>Delay(Rational)</strong>",id:"delayrational",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<strong>Anticipate(Rational)</strong>",id:"anticipaterational",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"<strong>VerticalShift(Rational)</strong>",id:"verticalshiftrational",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"<strong>Negate()</strong>",id:"negate",level:3},{value:"Returns",id:"returns-7",level:4},{value:"<strong>Inverse()</strong>",id:"inverse",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Exceptions",id:"exceptions",level:4},{value:"<strong>Addition(Element)</strong>",id:"additionelement",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Exceptions",id:"exceptions-1",level:4},{value:"<strong>Addition(Element, Element)</strong>",id:"additionelement-element",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Exceptions",id:"exceptions-2",level:4},{value:"<strong>Addition(IEnumerable&lt;Element&gt;)</strong>",id:"additionienumerableelement",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Exceptions",id:"exceptions-3",level:4},{value:"<strong>Subtraction(Element)</strong>",id:"subtractionelement",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Exceptions",id:"exceptions-4",level:4},{value:"<strong>Subtraction(Element, Element)</strong>",id:"subtractionelement-element",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Exceptions",id:"exceptions-5",level:4},{value:"<strong>Subtraction(IEnumerable&lt;Element&gt;)</strong>",id:"subtractionienumerableelement",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Exceptions",id:"exceptions-6",level:4},{value:"<strong>Minimum(Element)</strong>",id:"minimumelement",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-15",level:4},{value:"<strong>Minimum(Element, Element)</strong>",id:"minimumelement-element",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-16",level:4},{value:"<strong>Minimum(IReadOnlyList&lt;Element&gt;)</strong>",id:"minimumireadonlylistelement",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Exceptions",id:"exceptions-7",level:4},{value:"<strong>Maximum(Element)</strong>",id:"maximumelement",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-18",level:4},{value:"<strong>Maximum(Element, Element)</strong>",id:"maximumelement-element",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-19",level:4},{value:"<strong>Maximum(IReadOnlyList&lt;Element&gt;)</strong>",id:"maximumireadonlylistelement",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Exceptions",id:"exceptions-8",level:4},{value:"<strong>Convolution(Element)</strong>",id:"convolutionelement",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-21",level:4},{value:"<strong>Convolution(Element, Element)</strong>",id:"convolutionelement-element",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-22",level:4},{value:"<strong>Deconvolution(Element)</strong>",id:"deconvolutionelement",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-23",level:4},{value:"<strong>Deconvolution(Element, Element)</strong>",id:"deconvolutionelement-element",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-24",level:4},{value:"<strong>SubAdditiveClosure(ComputationSettings)</strong>",id:"subadditiveclosurecomputationsettings",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-25",level:4},{value:"<strong>SubAdditiveClosure(Rational, Rational, ComputationSettings)</strong>",id:"subadditiveclosurerational-rational-computationsettings",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Exceptions",id:"exceptions-9",level:4}],c={toc:u};function k(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"element"},"Element"),(0,r.kt)("p",null,"Smallest unit of representation of a min-plus algebra function.\nCan be either a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point")," or a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract class Element\n")),(0,r.kt)("p",null,"Inheritance ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object")," \u2192 ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"starttime"},(0,r.kt)("strong",{parentName:"h3"},"StartTime")),(0,r.kt)("p",null,"Left extreme of the definition interval of the element.\nIf the element is a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),", it is exclusive and strictly lower than ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element#endtime"},"EndTime"),".\nIf the element is a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),", it is inclusive and equal to ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element#endtime"},"EndTime"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Rational StartTime { get; }\n")),(0,r.kt)("h4",{id:"property-value"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"endtime"},(0,r.kt)("strong",{parentName:"h3"},"EndTime")),(0,r.kt)("p",null,"Right extreme of the definition interval of the element.\nIf the element is a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),", it is exclusive and strictly greater than ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element#starttime"},"StartTime"),".\nIf the element is a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),", it is inclusive and equal to ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element#starttime"},"StartTime"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Rational EndTime { get; }\n")),(0,r.kt)("h4",{id:"property-value-1"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"length"},(0,r.kt)("strong",{parentName:"h3"},"Length")),(0,r.kt)("p",null,"Length in time of the element.\nIf the element is a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),", it is strictly greater than 0.\nIf the element is a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),", it is equal to 0."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational Length { get; }\n")),(0,r.kt)("h4",{id:"property-value-2"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"isinfinite"},(0,r.kt)("strong",{parentName:"h3"},"IsInfinite")),(0,r.kt)("p",null,"True if the element has plus/minus infinite value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract bool IsInfinite { get; }\n")),(0,r.kt)("h4",{id:"property-value-3"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"isplusinfinite"},(0,r.kt)("strong",{parentName:"h3"},"IsPlusInfinite")),(0,r.kt)("p",null,"True if the element has plus infinite value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract bool IsPlusInfinite { get; }\n")),(0,r.kt)("h4",{id:"property-value-4"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"isminusinfinite"},(0,r.kt)("strong",{parentName:"h3"},"IsMinusInfinite")),(0,r.kt)("p",null,"True if the element has minus infinite value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract bool IsMinusInfinite { get; }\n")),(0,r.kt)("h4",{id:"property-value-5"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"isfinite"},(0,r.kt)("strong",{parentName:"h3"},"IsFinite")),(0,r.kt)("p",null,"True if the element has finite value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsFinite { get; }\n")),(0,r.kt)("h4",{id:"property-value-6"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"isidenticallyzero"},(0,r.kt)("strong",{parentName:"h3"},"IsIdenticallyZero")),(0,r.kt)("p",null,"True if the element has 0 value.\nIf the element is a ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),", this must be true for all its definition interval."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract bool IsIdenticallyZero { get; }\n")),(0,r.kt)("h4",{id:"property-value-7"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"type"},(0,r.kt)("strong",{parentName:"h3"},"Type")),(0,r.kt)("p",null,"Type identification property for JSON (de)serialization."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract string Type { get; }\n")),(0,r.kt)("h4",{id:"property-value-8"},"Property Value"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,r.kt)("br",null)),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"valueatrational"},(0,r.kt)("strong",{parentName:"h3"},"ValueAt(Rational)")),(0,r.kt)("p",null,"Computes the value of the element at the given time."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Rational ValueAt(Rational time)\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"time")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null),"\nThe time of sampling."),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null),"\nValue of the element at the given time or ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mo",{parentName:"mrow"},"+"),(0,r.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"\u221e")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"+\\infty")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"+"),(0,r.kt)("span",{parentName:"span",className:"mord"},"\u221e")))))," if outside definition bounds."),(0,r.kt)("h3",{id:"isdefinedforrational"},(0,r.kt)("strong",{parentName:"h3"},"IsDefinedFor(Rational)")),(0,r.kt)("p",null,"True if given time is between the element's definition bounds."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract bool IsDefinedFor(Rational time)\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"time")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"tostring"},(0,r.kt)("strong",{parentName:"h3"},"ToString()")),(0,r.kt)("p",null,"Returns string serialization in Json format."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public string ToString()\n")),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"scalerational"},(0,r.kt)("strong",{parentName:"h3"},"Scale(Rational)")),(0,r.kt)("p",null,"Scales the element by a multiplicative factor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Element Scale(Rational scaling)\n")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"scaling")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"delayrational"},(0,r.kt)("strong",{parentName:"h3"},"Delay(Rational)")),(0,r.kt)("p",null,"Translates forwards the definition interval by the given time quantity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Element Delay(Rational delay)\n")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"delay")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"anticipaterational"},(0,r.kt)("strong",{parentName:"h3"},"Anticipate(Rational)")),(0,r.kt)("p",null,"Translates backwards the definition interval by the given time quantity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Element Anticipate(Rational time)\n")),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"time")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"verticalshiftrational"},(0,r.kt)("strong",{parentName:"h3"},"VerticalShift(Rational)")),(0,r.kt)("p",null,"Shifts the element vertically by an additive factor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Element VerticalShift(Rational shift)\n")),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"shift")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"negate"},(0,r.kt)("strong",{parentName:"h3"},"Negate()")),(0,r.kt)("p",null,"Returns the opposite element, g(t) = -f(t)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Element Negate()\n")),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"inverse"},(0,r.kt)("strong",{parentName:"h3"},"Inverse()")),(0,r.kt)("p",null,"Compute the inverse function, ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msup"},"f"),(0,r.kt)("mrow",{parentName:"msup"},(0,r.kt)("mo",{parentName:"mrow"},"\u2212"),(0,r.kt)("mn",{parentName:"mrow"},"1"))),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"x"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"f"),(0,r.kt)("mrow",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mo",{parentName:"mrow"},":"),(0,r.kt)("mi",{parentName:"mrow"},"f"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"t"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mi",{parentName:"mrow"},"x"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f^{-1}(x) = inf { t : f(t) = x }")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))))))),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"in"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},":"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"))))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Element Inverse()\n")),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.invalidoperationexception"},"InvalidOperationException"),(0,r.kt)("br",null)),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"        If the element is non-bijective, i.e. a constant segment.\n")),(0,r.kt)("h3",{id:"additionelement"},(0,r.kt)("strong",{parentName:"h3"},"Addition(Element)")),(0,r.kt)("p",null,"Sums two elements over their overlapping part."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Element Addition(Element element)\n")),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"element")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nSecond operand"),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nThe element resulting from the sum."),(0,r.kt)("h4",{id:"exceptions-1"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThown if the two elements do not overlap."),(0,r.kt)("h3",{id:"additionelement-element"},(0,r.kt)("strong",{parentName:"h3"},"Addition(Element, Element)")),(0,r.kt)("p",null,"Sums two elements over their overlapping part."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Element Addition(Element a, Element b)\n")),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"a")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"b")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nThe element resulting from the sum."),(0,r.kt)("h4",{id:"exceptions-2"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThown if the two elements do not overlap."),(0,r.kt)("h3",{id:"additionienumerableelement"},(0,r.kt)("strong",{parentName:"h3"},"Addition(IEnumerable","<","Element",">",")")),(0,r.kt)("p",null,"Sums a set of elements over their overlapping part."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Element Addition(IEnumerable<Element> elements)\n")),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"elements")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Element",">"),(0,r.kt)("br",null),"\nThe elements to be summed."),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nThe result of the overall sum."),(0,r.kt)("h4",{id:"exceptions-3"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThrown if the elements do not overlap."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.invalidoperationexception"},"InvalidOperationException"),(0,r.kt)("br",null),"\nThrown if the set of elements is empty."),(0,r.kt)("h3",{id:"subtractionelement"},(0,r.kt)("strong",{parentName:"h3"},"Subtraction(Element)")),(0,r.kt)("p",null,"Subtracts two elements over their overlapping part."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The operation does not enforce non-negative values.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract Element Subtraction(Element element)\n")),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"element")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nSecond operand"),(0,r.kt)("h4",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nThe element resulting from the subtraction."),(0,r.kt)("h4",{id:"exceptions-4"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThown if the two elements do not overlap."),(0,r.kt)("h3",{id:"subtractionelement-element"},(0,r.kt)("strong",{parentName:"h3"},"Subtraction(Element, Element)")),(0,r.kt)("p",null,"Subtracts two elements over their overlapping part."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The operation does not enforce non-negative values.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Element Subtraction(Element a, Element b)\n")),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"a")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"b")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nThe element resulting from the subtraction."),(0,r.kt)("h4",{id:"exceptions-5"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThown if the two elements do not overlap."),(0,r.kt)("h3",{id:"subtractionienumerableelement"},(0,r.kt)("strong",{parentName:"h3"},"Subtraction(IEnumerable","<","Element",">",")")),(0,r.kt)("p",null,"Subtracts a set of elements over their overlapping part."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The operation does not enforce non-negative values.\nAs subtraction is not commutative, beware of the order of the operands.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Element Subtraction(IEnumerable<Element> elements)\n")),(0,r.kt)("h4",{id:"parameters-11"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"elements")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Element",">"),(0,r.kt)("br",null),"\nThe elements to be summed."),(0,r.kt)("h4",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nThe result of the overall subtraction."),(0,r.kt)("h4",{id:"exceptions-6"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThrown if the elements do not overlap."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.invalidoperationexception"},"InvalidOperationException"),(0,r.kt)("br",null),"\nThrown if the set of elements is empty."),(0,r.kt)("h3",{id:"minimumelement"},(0,r.kt)("strong",{parentName:"h3"},"Minimum(Element)")),(0,r.kt)("p",null,"Computes the minimum of two elements over their overlapping part.\nThe result is either a point, a segment or a segment-point-segment sequence."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract List<Element> Minimum(Element element)\n")),(0,r.kt)("h4",{id:"parameters-12"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"element")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nSecond operand"),(0,r.kt)("h4",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,r.kt)("br",null),"\nThe set of segments resulting from the minimum."),(0,r.kt)("h3",{id:"minimumelement-element"},(0,r.kt)("strong",{parentName:"h3"},"Minimum(Element, Element)")),(0,r.kt)("p",null,"Computes the minimum of two elements over their overlapping part.\nThe result is either a point, a segment or a segment-point-segment sequence."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Minimum(Element a, Element b)\n")),(0,r.kt)("h4",{id:"parameters-13"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"a")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"b")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,r.kt)("br",null),"\nThe set of segments resulting from the minimum."),(0,r.kt)("h3",{id:"minimumireadonlylistelement"},(0,r.kt)("strong",{parentName:"h3"},"Minimum(IReadOnlyList","<","Element",">",")")),(0,r.kt)("p",null,"Computes the minimum of a set of elements over their overlapping part."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Minimum(IReadOnlyList<Element> elements)\n")),(0,r.kt)("h4",{id:"parameters-14"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"elements")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","Element",">"),(0,r.kt)("br",null),"\nElements of which the minimum has to be computed."),(0,r.kt)("h4",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,r.kt)("br",null),"\nThe result of the overall minimum."),(0,r.kt)("h4",{id:"exceptions-7"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThrown if the elements do not overlap."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.invalidoperationexception"},"InvalidOperationException"),(0,r.kt)("br",null),"\nThrown if the set of elements is empty."),(0,r.kt)("h3",{id:"maximumelement"},(0,r.kt)("strong",{parentName:"h3"},"Maximum(Element)")),(0,r.kt)("p",null,"Computes the maximum of two elements over their overlapping part.\nThe result is either a point, a segment or a segment-point-segment sequence."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract List<Element> Maximum(Element element)\n")),(0,r.kt)("h4",{id:"parameters-15"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"element")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nSecond operand"),(0,r.kt)("h4",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,r.kt)("br",null),"\nThe set of segments resulting from the maximum."),(0,r.kt)("h3",{id:"maximumelement-element"},(0,r.kt)("strong",{parentName:"h3"},"Maximum(Element, Element)")),(0,r.kt)("p",null,"Computes the maximum of two elements over their overlapping part.\nThe result is either a point, a segment or a segment-point-segment sequence."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Maximum(Element a, Element b)\n")),(0,r.kt)("h4",{id:"parameters-16"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"a")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"b")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,r.kt)("br",null),"\nThe set of segments resulting from the maximum."),(0,r.kt)("h3",{id:"maximumireadonlylistelement"},(0,r.kt)("strong",{parentName:"h3"},"Maximum(IReadOnlyList","<","Element",">",")")),(0,r.kt)("p",null,"Computes the maximum of a set of elements over their overlapping part."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Maximum(IReadOnlyList<Element> elements)\n")),(0,r.kt)("h4",{id:"parameters-17"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"elements")," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","Element",">"),(0,r.kt)("br",null),"\nElements of which the maximum has to be computed."),(0,r.kt)("h4",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,r.kt)("br",null),"\nThe result of the overall maximum."),(0,r.kt)("h4",{id:"exceptions-8"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThrown if the elements do not overlap."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.invalidoperationexception"},"InvalidOperationException"),(0,r.kt)("br",null),"\nThrown if the set of elements is empty."),(0,r.kt)("h3",{id:"convolutionelement"},(0,r.kt)("strong",{parentName:"h3"},"Convolution(Element)")),(0,r.kt)("p",null,"Computes the convolution between two Elements."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Described in ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.1")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract IEnumerable<Element> Convolution(Element element)\n")),(0,r.kt)("h4",{id:"parameters-18"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"element")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null),"\nSecond operand"),(0,r.kt)("h4",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Element",">"),(0,r.kt)("br",null),"\nThe set of segments resulting from the convolution."),(0,r.kt)("h3",{id:"convolutionelement-element"},(0,r.kt)("strong",{parentName:"h3"},"Convolution(Element, Element)")),(0,r.kt)("p",null,"Computes the convolution between two Elements."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Described in ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.1")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static IEnumerable<Element> Convolution(Element a, Element b)\n")),(0,r.kt)("h4",{id:"parameters-19"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"a")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"b")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Element",">"),(0,r.kt)("br",null),"\nThe set of segments resulting from the convolution."),(0,r.kt)("h3",{id:"deconvolutionelement"},(0,r.kt)("strong",{parentName:"h3"},"Deconvolution(Element)")),(0,r.kt)("p",null,"Computes the deconvolution between two Elements."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Described in ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.2")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract List<Element> Deconvolution(Element element)\n")),(0,r.kt)("h4",{id:"parameters-20"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"element")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,r.kt)("br",null),"\nThe set of segments resulting from the deconvolution."),(0,r.kt)("h3",{id:"deconvolutionelement-element"},(0,r.kt)("strong",{parentName:"h3"},"Deconvolution(Element, Element)")),(0,r.kt)("p",null,"Computes the deconvolution between two Elements."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Described in ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.2")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Deconvolution(Element a, Element b)\n")),(0,r.kt)("h4",{id:"parameters-21"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"a")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"b")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,r.kt)("br",null),"\nThe set of segments resulting from the deconvolution."),(0,r.kt)("h3",{id:"subadditiveclosurecomputationsettings"},(0,r.kt)("strong",{parentName:"h3"},"SubAdditiveClosure(ComputationSettings)")),(0,r.kt)("p",null,"Computes the sub-additive closure of the element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract SubAdditiveCurve SubAdditiveClosure(ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-22"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.NetworkCalculus/SubAdditiveCurve"},"SubAdditiveCurve"),(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"subadditiveclosurerational-rational-computationsettings"},(0,r.kt)("strong",{parentName:"h3"},"SubAdditiveClosure(Rational, Rational, ComputationSettings)")),(0,r.kt)("p",null,"Computes the sub-additive closure of the pseudo-periodic element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract SubAdditiveCurve SubAdditiveClosure(Rational pseudoPeriodLength, Rational pseudoPeriodHeight, ComputationSettings settings)\n")),(0,r.kt)("h4",{id:"parameters-23"},"Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"pseudoPeriodLength")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null),"\nLenght of the pseudo-period"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"pseudoPeriodHeight")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,r.kt)("br",null),"\nStep gained after each pseudo-period"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.NetworkCalculus/SubAdditiveCurve"},"SubAdditiveCurve"),(0,r.kt)("br",null)),(0,r.kt)("h4",{id:"exceptions-9"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,r.kt)("br",null),"\nThrown if the period is not greater than 0"))}k.isMDXComponent=!0}}]);