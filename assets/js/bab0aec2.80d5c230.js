"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[2507],{3277:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"tutorials/optimizations/tuning-performance","title":"Tuning Performance","description":"\x3c!-- ## Representation minimization","source":"@site/docs/tutorials/optimizations/tuning-performance.md","sourceDirName":"tutorials/optimizations","slug":"/tutorials/optimizations/tuning-performance","permalink":"/nancy/docs/tutorials/optimizations/tuning-performance","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"hide_title":true,"sidebar_position":10,"title":"Tuning Performance"},"sidebar":"tutorialSidebar","previous":{"title":"Isospeed convolutions","permalink":"/nancy/docs/tutorials/optimizations/isospeed-convolutions"},"next":{"title":"Use specialized Curves","permalink":"/nancy/docs/tutorials/gotchas/specialized-curves"}}');var o=t(4848),s=t(8453);const a={hide_title:!0,sidebar_position:10,title:"Tuning Performance"},r="Tuning performance",c={},l=[];function u(n){const e={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"tuning-performance",children:"Tuning performance"})}),"\n",(0,o.jsxs)(e.p,{children:["Most operators will have as a last optional argument a ",(0,o.jsx)(e.a,{href:"/nancy/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings",children:"ComputationSettings"})," object, that is used to tune how the operator is computed."]}),"\n",(0,o.jsxs)(e.p,{children:["The most relevant settings are ",(0,o.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings#userepresentationminimization",children:"UseRepresentationMinimization"}),", which will apply representation minimization to all results (also intermediate ones) and ",(0,o.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings#useparallelism",children:"UseParallelism"}),", which will use parallelization when is (heuristically) deemed to be useful.\r\n",(0,o.jsx)(e.a,{href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings#usesubadditiveconvolutionoptimizations",children:"UseSubAdditiveConvolutionOptimizations"})," enables the subadditive convolution optimizations, and so on.\r\nThese are all set by default to ",(0,o.jsx)(e.code,{children:"true"}),"."]}),"\n",(0,o.jsx)(e.p,{children:"Below, an example which runs the min-plus convolution in serial mode."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-csharp",children:"    var f = ...;\r\n    var g = ...;\r\n\r\n    var h = Curve.Convolution(f, g, settings: ComputationSettings.Default() with { UseParallelism = false });\n"})})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function a(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);