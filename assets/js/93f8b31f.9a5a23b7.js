"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[6051],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),y=l(t),d=o,m=y["".concat(c,".").concat(d)]||y[d]||p[d]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=y;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},148:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>v,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=t(7462),o=(t(7294),t(3905)),a=t(4996);const i={hide_title:!0,title:"Introduction",sidebar_position:1},s="Nancy.Expressions",c={unversionedId:"tutorials/nancy-expressions/introduction",id:"tutorials/nancy-expressions/introduction",title:"Introduction",description:"Nancy.Expressions is a new library built on top of Nancy.",source:"@site/docs/tutorials/nancy-expressions/introduction.mdx",sourceDirName:"tutorials/nancy-expressions",slug:"/tutorials/nancy-expressions/introduction",permalink:"/nancy/docs/tutorials/nancy-expressions/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{hide_title:!0,title:"Introduction",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Note on the deconvolution",permalink:"/nancy/docs/tutorials/gotchas/note-deconvolution"},next:{title:"Simplifying expressions",permalink:"/nancy/docs/tutorials/nancy-expressions/expressions-manipulation"}},l={},u=[{value:"Nancy vs Nancy.Expressions",id:"nancy-vs-nancyexpressions",level:2},{value:"Works like an extension",id:"works-like-an-extension",level:3}],p=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},y=p("Tabs"),d=p("TabItem"),m={toc:u};function v(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nancyexpressions"},"Nancy.Expressions"),(0,o.kt)("p",null,"Nancy.Expressions is a new library built on top of Nancy.\nWhile Nancy is meant to perform the operations as you write them in code,\nNancy.Expressions is designed to represent a complex expression, allowing you to manipulate, visualize and simplify it before running its computation."),(0,o.kt)("figure",null,(0,o.kt)("img",{src:(0,a.Z)("/img/expressions/example-visualization.png"),alt:"Example of an expression constructed and then shown"}),(0,o.kt)("figcaption",null,"Example of an expression constructed and then shown")),(0,o.kt)("h2",{id:"nancy-vs-nancyexpressions"},"Nancy vs Nancy.Expressions"),(0,o.kt)("p",null,"To make it easy to adopt, the syntax of the two libraries is very similar.\nThe main differce is the switch from ",(0,o.kt)("inlineCode",{parentName:"p"},"Curve")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"Expressions")," as the type to use to call methods, and that you have to manually call ",(0,o.kt)("inlineCode",{parentName:"p"},"Compute()")," to have the result."),(0,o.kt)(y,{mdxType:"Tabs"},(0,o.kt)(d,{value:"nancy",label:"Nancy",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"    var f = new Curve(\n        <constructor arguments for f>\n    );\n    var g = new Curve(\n        <constructor arguments for g>\n    );\n    var f_sac = f.SubAdditiveClosure();\n    var conv = Curve.Convolution(f_sac, g);\n    var result = Curve.Deconvolution(conv, f_sac);\n"))),(0,o.kt)(d,{value:"nancy.expressions",label:"Nancy",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"    var f = Expressions.FromCurve(\n        curve: new Curve(\n            <constructor arguments for f>\n        );\n    var g = Expressions.FromCurve(\n        curve: new Curve(\n            <constructor arguments for g>\n        );\n    var f_sac = f.SubAdditiveClosure();\n    var conv = Expressions.Convolution(f_sac, g);\n    var deconv = Expressions.Deconvolution(conv, f_sac);\n    var result = deconv.Compute();\n")))),(0,o.kt)("h3",{id:"works-like-an-extension"},"Works like an extension"),(0,o.kt)("p",null,"When you call ",(0,o.kt)("inlineCode",{parentName:"p"},"Compute()"),", the usual Nancy algorithms are used to compute your expression, and a ",(0,o.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve")," or a ",(0,o.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.Numerics/Rational"},"Rational")," is returned."),(0,o.kt)("p",null,"So you can still do all you were doing with Nancy, but with a some more tools that work at the expression level."))}v.isMDXComponent=!0}}]);