"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[6320],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),c=m(n),k=r,g=c["".concat(p,".").concat(k)]||c[k]||u[k]||l;return n?a.createElement(g,i(i({ref:t},o),{},{components:n})):a.createElement(g,i({ref:t},o))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},66:function(e,t,n){n.r(t),n.d(t,{assets:function(){return o},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return u}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],s={hide_title:!0,sidebar_position:4},p="Segment",m={unversionedId:"nancy/Unipi.Nancy.MinPlusAlgebra/Segment",id:"nancy/Unipi.Nancy.MinPlusAlgebra/Segment",title:"Segment",description:"An open segment. Defined in ]StartTime, EndTime[.",source:"@site/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment.md",sourceDirName:"nancy/Unipi.Nancy.MinPlusAlgebra",slug:"/nancy/Unipi.Nancy.MinPlusAlgebra/Segment",permalink:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{hide_title:!0,sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Point",permalink:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},next:{title:"Element",permalink:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"}},o={},u=[{value:"Fields",id:"fields",level:2},{value:"<strong>TypeCode</strong>",id:"typecode",level:3},{value:"Properties",id:"properties",level:2},{value:"<strong>StartTime</strong>",id:"starttime",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<strong>EndTime</strong>",id:"endtime",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"<strong>Slope</strong>",id:"slope",level:3},{value:"Property Value",id:"property-value-2",level:4},{value:"<strong>RightLimitAtStartTime</strong>",id:"rightlimitatstarttime",level:3},{value:"Property Value",id:"property-value-3",level:4},{value:"<strong>LeftLimitAtEndTime</strong>",id:"leftlimitatendtime",level:3},{value:"Property Value",id:"property-value-4",level:4},{value:"<strong>IsInfinite</strong>",id:"isinfinite",level:3},{value:"Property Value",id:"property-value-5",level:4},{value:"<strong>IsPlusInfinite</strong>",id:"isplusinfinite",level:3},{value:"Property Value",id:"property-value-6",level:4},{value:"<strong>IsMinusInfinite</strong>",id:"isminusinfinite",level:3},{value:"Property Value",id:"property-value-7",level:4},{value:"<strong>IsIdenticallyZero</strong>",id:"isidenticallyzero",level:3},{value:"Property Value",id:"property-value-8",level:4},{value:"<strong>IsConstant</strong>",id:"isconstant",level:3},{value:"Property Value",id:"property-value-9",level:4},{value:"<strong>StartSlope</strong>",id:"startslope",level:3},{value:"Property Value",id:"property-value-10",level:4},{value:"<strong>EndSlope</strong>",id:"endslope",level:3},{value:"Property Value",id:"property-value-11",level:4},{value:"<strong>Type</strong>",id:"type",level:3},{value:"Property Value",id:"property-value-12",level:4},{value:"<strong>Length</strong>",id:"length",level:3},{value:"Property Value",id:"property-value-13",level:4},{value:"<strong>IsFinite</strong>",id:"isfinite",level:3},{value:"Property Value",id:"property-value-14",level:4},{value:"Constructors",id:"constructors",level:2},{value:"<strong>Segment(Rational, Rational, Rational, Rational)</strong>",id:"segmentrational-rational-rational-rational",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Exceptions",id:"exceptions",level:4},{value:"Methods",id:"methods",level:2},{value:"<strong>Constant(Rational, Rational, Rational)</strong>",id:"constantrational-rational-rational",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>Zero(Rational, Rational)</strong>",id:"zerorational-rational",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>PlusInfinite(Rational, Rational)</strong>",id:"plusinfiniterational-rational",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<strong>MinusInfinite(Rational, Rational)</strong>",id:"minusinfiniterational-rational",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<strong>ValueAt(Rational)</strong>",id:"valueatrational",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-4",level:4},{value:"<strong>RightLimitAt(Rational)</strong>",id:"rightlimitatrational",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-5",level:4},{value:"<strong>LeftLimitAt(Rational)</strong>",id:"leftlimitatrational",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-6",level:4},{value:"<strong>IsDefinedFor(Rational)</strong>",id:"isdefinedforrational",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-7",level:4},{value:"<strong>Split(Rational)</strong>",id:"splitrational",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Exceptions",id:"exceptions-1",level:4},{value:"<strong>Sample(Rational)</strong>",id:"samplerational",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Exceptions",id:"exceptions-2",level:4},{value:"<strong>Cut(Rational, Rational)</strong>",id:"cutrational-rational",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Exceptions",id:"exceptions-3",level:4},{value:"<strong>GetOverlap(Segment, Segment)</strong>",id:"getoverlapsegment-segment",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-11",level:4},{value:"<strong>GetOverlap(Segment)</strong>",id:"getoverlapsegment",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-12",level:4},{value:"<strong>GetIntersection(Segment, Segment)</strong>",id:"getintersectionsegment-segment",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-13",level:4},{value:"<strong>TimeAt(Rational)</strong>",id:"timeatrational",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-14",level:4},{value:"<strong>Scale(Rational)</strong>",id:"scalerational",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-15",level:4},{value:"<strong>Delay(Rational)</strong>",id:"delayrational",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-16",level:4},{value:"<strong>Anticipate(Rational)</strong>",id:"anticipaterational",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-17",level:4},{value:"<strong>VerticalShift(Rational)</strong>",id:"verticalshiftrational",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-18",level:4},{value:"<strong>Negate()</strong>",id:"negate",level:3},{value:"Returns",id:"returns-19",level:4},{value:"<strong>Inverse()</strong>",id:"inverse",level:3},{value:"Returns",id:"returns-20",level:4},{value:"<strong>Equals(Object)</strong>",id:"equalsobject",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-21",level:4},{value:"<strong>GetHashCode()</strong>",id:"gethashcode",level:3},{value:"Returns",id:"returns-22",level:4},{value:"<strong>Equals(Segment)</strong>",id:"equalssegment",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-23",level:4},{value:"<strong>IsCertainlyAbove(Segment, Segment)</strong>",id:"iscertainlyabovesegment-segment",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-24",level:4},{value:"<strong>IsCertainlyAbove(Segment)</strong>",id:"iscertainlyabovesegment",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-25",level:4},{value:"<strong>IsCertainlyBelow(Segment, Segment)</strong>",id:"iscertainlybelowsegment-segment",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-26",level:4},{value:"<strong>IsCertainlyBelow(Segment)</strong>",id:"iscertainlybelowsegment",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-27",level:4},{value:"<strong>Addition(Element)</strong>",id:"additionelement",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Exceptions",id:"exceptions-4",level:4},{value:"<strong>Addition(Segment, Point)</strong>",id:"additionsegment-point",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Exceptions",id:"exceptions-5",level:4},{value:"<strong>Addition(Point)</strong>",id:"additionpoint",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Exceptions",id:"exceptions-6",level:4},{value:"<strong>Addition(Segment, Segment)</strong>",id:"additionsegment-segment",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Exceptions",id:"exceptions-7",level:4},{value:"<strong>Addition(Segment)</strong>",id:"additionsegment",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Exceptions",id:"exceptions-8",level:4},{value:"<strong>Subtraction(Element)</strong>",id:"subtractionelement",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Exceptions",id:"exceptions-9",level:4},{value:"<strong>Subtraction(Segment, Point)</strong>",id:"subtractionsegment-point",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Exceptions",id:"exceptions-10",level:4},{value:"<strong>Subtraction(Point)</strong>",id:"subtractionpoint",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Exceptions",id:"exceptions-11",level:4},{value:"<strong>Subtraction(Segment, Segment)</strong>",id:"subtractionsegment-segment",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Exceptions",id:"exceptions-12",level:4},{value:"<strong>Subtraction(Segment)</strong>",id:"subtractionsegment",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Exceptions",id:"exceptions-13",level:4},{value:"<strong>Minimum(Element)</strong>",id:"minimumelement",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-38",level:4},{value:"<strong>Minimum(Segment, Point)</strong>",id:"minimumsegment-point",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Exceptions",id:"exceptions-14",level:4},{value:"<strong>Minimum(Point)</strong>",id:"minimumpoint",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Exceptions",id:"exceptions-15",level:4},{value:"<strong>Minimum(Segment, Segment)</strong>",id:"minimumsegment-segment",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Exceptions",id:"exceptions-16",level:4},{value:"<strong>Minimum(Segment)</strong>",id:"minimumsegment",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Exceptions",id:"exceptions-17",level:4},{value:"<strong>Minimum(IReadOnlyList&lt;Segment&gt;)</strong>",id:"minimumireadonlylistsegment",level:3},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Exceptions",id:"exceptions-18",level:4},{value:"<strong>Maximum(Element)</strong>",id:"maximumelement",level:3},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-44",level:4},{value:"<strong>Maximum(Segment, Point)</strong>",id:"maximumsegment-point",level:3},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Exceptions",id:"exceptions-19",level:4},{value:"<strong>Maximum(Point)</strong>",id:"maximumpoint",level:3},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Exceptions",id:"exceptions-20",level:4},{value:"<strong>Maximum(Segment, Segment)</strong>",id:"maximumsegment-segment",level:3},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Exceptions",id:"exceptions-21",level:4},{value:"<strong>Maximum(Segment)</strong>",id:"maximumsegment",level:3},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Exceptions",id:"exceptions-22",level:4},{value:"<strong>Maximum(IReadOnlyList&lt;Segment&gt;)</strong>",id:"maximumireadonlylistsegment",level:3},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-49",level:4},{value:"Exceptions",id:"exceptions-23",level:4},{value:"<strong>Convolution(Element)</strong>",id:"convolutionelement",level:3},{value:"Parameters",id:"parameters-48",level:4},{value:"Returns",id:"returns-50",level:4},{value:"<strong>Convolution(Segment, Point)</strong>",id:"convolutionsegment-point",level:3},{value:"Parameters",id:"parameters-49",level:4},{value:"Returns",id:"returns-51",level:4},{value:"<strong>Convolution(Point)</strong>",id:"convolutionpoint",level:3},{value:"Parameters",id:"parameters-50",level:4},{value:"Returns",id:"returns-52",level:4},{value:"<strong>Convolution(Segment, Segment)</strong>",id:"convolutionsegment-segment",level:3},{value:"Parameters",id:"parameters-51",level:4},{value:"Returns",id:"returns-53",level:4},{value:"<strong>Convolution(Segment)</strong>",id:"convolutionsegment",level:3},{value:"Parameters",id:"parameters-52",level:4},{value:"Returns",id:"returns-54",level:4},{value:"<strong>Deconvolution(Element)</strong>",id:"deconvolutionelement",level:3},{value:"Parameters",id:"parameters-53",level:4},{value:"Returns",id:"returns-55",level:4},{value:"<strong>Deconvolution(Segment, Point)</strong>",id:"deconvolutionsegment-point",level:3},{value:"Parameters",id:"parameters-54",level:4},{value:"Returns",id:"returns-56",level:4},{value:"<strong>Deconvolution(Point)</strong>",id:"deconvolutionpoint",level:3},{value:"Parameters",id:"parameters-55",level:4},{value:"Returns",id:"returns-57",level:4},{value:"<strong>Deconvolution(Segment, Segment)</strong>",id:"deconvolutionsegment-segment",level:3},{value:"Parameters",id:"parameters-56",level:4},{value:"Returns",id:"returns-58",level:4},{value:"<strong>Deconvolution(Segment)</strong>",id:"deconvolutionsegment",level:3},{value:"Parameters",id:"parameters-57",level:4},{value:"Returns",id:"returns-59",level:4},{value:"<strong>SubAdditiveClosure(ComputationSettings)</strong>",id:"subadditiveclosurecomputationsettings",level:3},{value:"Parameters",id:"parameters-58",level:4},{value:"Returns",id:"returns-60",level:4},{value:"<strong>SubAdditiveClosure(Rational, Rational, ComputationSettings)</strong>",id:"subadditiveclosurerational-rational-computationsettings",level:3},{value:"Parameters",id:"parameters-59",level:4},{value:"Returns",id:"returns-61",level:4}],c={toc:u};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"segment"},"Segment"),(0,l.kt)("p",null,"An open segment. Defined in ]",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment#starttime"},"StartTime"),", ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment#endtime"},"EndTime"),"[."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"From unit structure defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 4.1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public sealed class Segment : Element, System.IEquatable<Segment>\n")),(0,l.kt)("p",null,"Inheritance ",(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object")," \u2192 ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element")," \u2192 ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nImplements ",(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.iequatable-1"},"IEquatable","<","Segment",">")),(0,l.kt)("h2",{id:"fields"},"Fields"),(0,l.kt)("h3",{id:"typecode"},(0,l.kt)("strong",{parentName:"h3"},"TypeCode")),(0,l.kt)("p",null,"Type identification constant for JSON (de)serialization."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static string TypeCode;\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"starttime"},(0,l.kt)("strong",{parentName:"h3"},"StartTime")),(0,l.kt)("p",null,"Exclusive left extreme of the definition interval of the segment."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Referred to as ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("msub",{parentName:"mrow"},(0,l.kt)("mi",{parentName:"msub"},"x"),(0,l.kt)("mi",{parentName:"msub"},"i"))),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x_i")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,l.kt)("span",{parentName:"span",className:"mord"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,l.kt)("span",{parentName:"span",className:"msupsub"},(0,l.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,l.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,l.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,l.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,l.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,l.kt)("span",{parentName:"span"}))))))))))," in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 4.1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational StartTime { get; }\n")),(0,l.kt)("h4",{id:"property-value"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"endtime"},(0,l.kt)("strong",{parentName:"h3"},"EndTime")),(0,l.kt)("p",null,"Exclusive rigth extreme of the definition interval of the segment."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Referred to as ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("msub",{parentName:"mrow"},(0,l.kt)("mi",{parentName:"msub"},"x"),(0,l.kt)("mi",{parentName:"msub"},"i"))),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x_i")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,l.kt)("span",{parentName:"span",className:"mord"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,l.kt)("span",{parentName:"span",className:"msupsub"},(0,l.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,l.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,l.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,l.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,l.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,l.kt)("span",{parentName:"span"}))))))))))," in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 4.1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational EndTime { get; }\n")),(0,l.kt)("h4",{id:"property-value-1"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"slope"},(0,l.kt)("strong",{parentName:"h3"},"Slope")),(0,l.kt)("p",null,"Slope of the segment."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Referred to as ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("msub",{parentName:"mrow"},(0,l.kt)("mi",{parentName:"msub"},"\u03c1"),(0,l.kt)("mi",{parentName:"msub"},"i"))),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\rho_i")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,l.kt)("span",{parentName:"span",className:"mord"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal"},"\u03c1"),(0,l.kt)("span",{parentName:"span",className:"msupsub"},(0,l.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,l.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,l.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,l.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,l.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,l.kt)("span",{parentName:"span"}))))))))))," in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 4.1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational Slope { get; }\n")),(0,l.kt)("h4",{id:"property-value-2"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"rightlimitatstarttime"},(0,l.kt)("strong",{parentName:"h3"},"RightLimitAtStartTime")),(0,l.kt)("p",null,"Right limit of the segment at ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment#starttime"},"StartTime"),", ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mi",{parentName:"mrow"},"f"),(0,l.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,l.kt)("mi",{parentName:"mrow"},"a"),(0,l.kt)("mo",{parentName:"mrow"},"+"),(0,l.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(a+)")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,l.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,l.kt)("span",{parentName:"span",className:"mopen"},"("),(0,l.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,l.kt)("span",{parentName:"span",className:"mord"},"+"),(0,l.kt)("span",{parentName:"span",className:"mclose"},")"))))),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Referred to as ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("msub",{parentName:"mrow"},(0,l.kt)("mi",{parentName:"msub"},"\u03c1"),(0,l.kt)("mi",{parentName:"msub"},"i"))),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\rho_i")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,l.kt)("span",{parentName:"span",className:"mord"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal"},"\u03c1"),(0,l.kt)("span",{parentName:"span",className:"msupsub"},(0,l.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,l.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,l.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,l.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,l.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,l.kt)("span",{parentName:"span"}))))))))))," in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 4.1")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational RightLimitAtStartTime { get; }\n")),(0,l.kt)("h4",{id:"property-value-3"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"leftlimitatendtime"},(0,l.kt)("strong",{parentName:"h3"},"LeftLimitAtEndTime")),(0,l.kt)("p",null,"Left limit of the segment at ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment#endtime"},"EndTime"),", ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mi",{parentName:"mrow"},"f"),(0,l.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,l.kt)("mi",{parentName:"mrow"},"b"),(0,l.kt)("mo",{parentName:"mrow"},"\u2212"),(0,l.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(b-)")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,l.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,l.kt)("span",{parentName:"span",className:"mopen"},"("),(0,l.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,l.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,l.kt)("span",{parentName:"span",className:"mclose"},")"))))),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational LeftLimitAtEndTime { get; }\n")),(0,l.kt)("h4",{id:"property-value-4"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"isinfinite"},(0,l.kt)("strong",{parentName:"h3"},"IsInfinite")),(0,l.kt)("p",null,"True if the segment has value plus/minus infinite."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsInfinite { get; }\n")),(0,l.kt)("h4",{id:"property-value-5"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"isplusinfinite"},(0,l.kt)("strong",{parentName:"h3"},"IsPlusInfinite")),(0,l.kt)("p",null,"True if the segment has value plus infinite."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsPlusInfinite { get; }\n")),(0,l.kt)("h4",{id:"property-value-6"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"isminusinfinite"},(0,l.kt)("strong",{parentName:"h3"},"IsMinusInfinite")),(0,l.kt)("p",null,"True if the segment has value minus infinite."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsMinusInfinite { get; }\n")),(0,l.kt)("h4",{id:"property-value-7"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"isidenticallyzero"},(0,l.kt)("strong",{parentName:"h3"},"IsIdenticallyZero")),(0,l.kt)("p",null,"True if the segment has value 0 over all of its dominion."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsIdenticallyZero { get; }\n")),(0,l.kt)("h4",{id:"property-value-8"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"isconstant"},(0,l.kt)("strong",{parentName:"h3"},"IsConstant")),(0,l.kt)("p",null,"True if the segment has a constant value"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsConstant { get; }\n")),(0,l.kt)("h4",{id:"property-value-9"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"startslope"},(0,l.kt)("strong",{parentName:"h3"},"StartSlope")),(0,l.kt)("p",null,"Slope, w.r.t. origin, of the left extreme of the segment."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational StartSlope { get; }\n")),(0,l.kt)("h4",{id:"property-value-10"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"endslope"},(0,l.kt)("strong",{parentName:"h3"},"EndSlope")),(0,l.kt)("p",null,"Slope, w.r.t. origin, of the right extreme of the segment."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational EndSlope { get; }\n")),(0,l.kt)("h4",{id:"property-value-11"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"type"},(0,l.kt)("strong",{parentName:"h3"},"Type")),(0,l.kt)("p",null,"Type identification property for JSON (de)serialization."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public string Type { get; }\n")),(0,l.kt)("h4",{id:"property-value-12"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"length"},(0,l.kt)("strong",{parentName:"h3"},"Length")),(0,l.kt)("p",null,"Length in time of the element.\nIf the element is a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),", it is strictly greater than 0.\nIf the element is a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),", it is equal to 0."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational Length { get; }\n")),(0,l.kt)("h4",{id:"property-value-13"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"isfinite"},(0,l.kt)("strong",{parentName:"h3"},"IsFinite")),(0,l.kt)("p",null,"True if the element has finite value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsFinite { get; }\n")),(0,l.kt)("h4",{id:"property-value-14"},"Property Value"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h2",{id:"constructors"},"Constructors"),(0,l.kt)("h3",{id:"segmentrational-rational-rational-rational"},(0,l.kt)("strong",{parentName:"h3"},"Segment(Rational, Rational, Rational, Rational)")),(0,l.kt)("p",null,"Constructor."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Segment(Rational startTime, Rational endTime, Rational rightLimitAtStartTime, Rational slope)\n")),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"startTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nLeft extreme of the definition interval of the segment."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"endTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nRight extreme of the definition interval of the segment."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"rightLimitAtStartTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nRight limit of the segment at startTime, f(a+)."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"slope")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nSlope of the segment."),(0,l.kt)("h4",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null)),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"constantrational-rational-rational"},(0,l.kt)("strong",{parentName:"h3"},"Constant(Rational, Rational, Rational)")),(0,l.kt)("p",null,"Constructs a segment with a constant value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Segment Constant(Rational startTime, Rational endTime, Rational value)\n")),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"startTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nLeft extreme of the definition interval of the segment."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"endTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nRight extreme of the definition interval of the segment."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"value")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nValue of the segment."),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"zerorational-rational"},(0,l.kt)("strong",{parentName:"h3"},"Zero(Rational, Rational)")),(0,l.kt)("p",null,"Constructs a segment with constant value 0."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Segment Zero(Rational startTime, Rational endTime)\n")),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"startTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nLeft extreme of the definition interval of the segment."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"endTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nRight extreme of the definition interval of the segment."),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"plusinfiniterational-rational"},(0,l.kt)("strong",{parentName:"h3"},"PlusInfinite(Rational, Rational)")),(0,l.kt)("p",null,"Constructs a segment with constant value ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mo",{parentName:"mrow"},"+"),(0,l.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"\u221e")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"+\\infty")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,l.kt)("span",{parentName:"span",className:"mord"},"+"),(0,l.kt)("span",{parentName:"span",className:"mord"},"\u221e"))))),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Segment PlusInfinite(Rational startTime, Rational endTime)\n")),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"startTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nLeft extreme of the definition interval of the segment."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"endTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nRight extreme of the definition interval of the segment."),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"minusinfiniterational-rational"},(0,l.kt)("strong",{parentName:"h3"},"MinusInfinite(Rational, Rational)")),(0,l.kt)("p",null,"Constructs a segment with constant value ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mo",{parentName:"mrow"},"\u2212"),(0,l.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"\u221e")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"-\\infty")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,l.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,l.kt)("span",{parentName:"span",className:"mord"},"\u221e"))))),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Segment MinusInfinite(Rational startTime, Rational endTime)\n")),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"startTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nLeft extreme of the definition interval of the segment."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"endTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nRight extreme of the definition interval of the segment."),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"valueatrational"},(0,l.kt)("strong",{parentName:"h3"},"ValueAt(Rational)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational ValueAt(Rational time)\n")),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"time")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"rightlimitatrational"},(0,l.kt)("strong",{parentName:"h3"},"RightLimitAt(Rational)")),(0,l.kt)("p",null,"Computes the right limit of the segment at given ",(0,l.kt)("inlineCode",{parentName:"p"},"time")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational RightLimitAt(Rational time)\n")),(0,l.kt)("h4",{id:"parameters-6"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"time")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nThe target time of the limit"),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nThe value of ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mi",{parentName:"mrow"},"f"),(0,l.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,l.kt)("msup",{parentName:"mrow"},(0,l.kt)("mi",{parentName:"msup"},"t"),(0,l.kt)("mo",{parentName:"msup"},"+")),(0,l.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(t^+)")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0213em",verticalAlign:"-0.25em"}}),(0,l.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,l.kt)("span",{parentName:"span",className:"mopen"},"("),(0,l.kt)("span",{parentName:"span",className:"mord"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,l.kt)("span",{parentName:"span",className:"msupsub"},(0,l.kt)("span",{parentName:"span",className:"vlist-t"},(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.7713em"}},(0,l.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,l.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,l.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,l.kt)("span",{parentName:"span",className:"mbin mtight"},"+")))))))),(0,l.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,l.kt)("h3",{id:"leftlimitatrational"},(0,l.kt)("strong",{parentName:"h3"},"LeftLimitAt(Rational)")),(0,l.kt)("p",null,"Computes the left limit of the segment at given ",(0,l.kt)("inlineCode",{parentName:"p"},"time")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational LeftLimitAt(Rational time)\n")),(0,l.kt)("h4",{id:"parameters-7"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"time")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nThe target time of the limit"),(0,l.kt)("h4",{id:"returns-6"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nThe value of ",(0,l.kt)("span",{parentName:"p",className:"math math-inline"},(0,l.kt)("span",{parentName:"span",className:"katex"},(0,l.kt)("span",{parentName:"span",className:"katex-mathml"},(0,l.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,l.kt)("semantics",{parentName:"math"},(0,l.kt)("mrow",{parentName:"semantics"},(0,l.kt)("mi",{parentName:"mrow"},"f"),(0,l.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,l.kt)("msup",{parentName:"mrow"},(0,l.kt)("mi",{parentName:"msup"},"t"),(0,l.kt)("mo",{parentName:"msup"},"\u2212")),(0,l.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,l.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(t^-)")))),(0,l.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,l.kt)("span",{parentName:"span",className:"base"},(0,l.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0213em",verticalAlign:"-0.25em"}}),(0,l.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,l.kt)("span",{parentName:"span",className:"mopen"},"("),(0,l.kt)("span",{parentName:"span",className:"mord"},(0,l.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,l.kt)("span",{parentName:"span",className:"msupsub"},(0,l.kt)("span",{parentName:"span",className:"vlist-t"},(0,l.kt)("span",{parentName:"span",className:"vlist-r"},(0,l.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.7713em"}},(0,l.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,l.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,l.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,l.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2212")))))))),(0,l.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,l.kt)("h3",{id:"isdefinedforrational"},(0,l.kt)("strong",{parentName:"h3"},"IsDefinedFor(Rational)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsDefinedFor(Rational time)\n")),(0,l.kt)("h4",{id:"parameters-8"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"time")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-7"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"splitrational"},(0,l.kt)("strong",{parentName:"h3"},"Split(Rational)")),(0,l.kt)("p",null,"Splits the segment in a segment-point-segment set."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public ValueTuple<Segment, Point, Segment> Split(Rational splitTime)\n")),(0,l.kt)("h4",{id:"parameters-9"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"splitTime")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nThe time of split."),(0,l.kt)("h4",{id:"returns-8"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.valuetuple-3"},"ValueTuple","<","Segment, Point, Segment",">"),(0,l.kt)("br",null),"\nA tuple containing the segment-point-segment set resulting from the split."),(0,l.kt)("h4",{id:"exceptions-1"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segment is not defined for the time of split."),(0,l.kt)("h3",{id:"samplerational"},(0,l.kt)("strong",{parentName:"h3"},"Sample(Rational)")),(0,l.kt)("p",null,"Returns a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point")," sampling of the segment."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Point Sample(Rational time)\n")),(0,l.kt)("h4",{id:"parameters-10"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"time")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nTime of sampling."),(0,l.kt)("h4",{id:"returns-9"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe sampled ."),(0,l.kt)("h4",{id:"exceptions-2"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segment is not defined for the time of sampling."),(0,l.kt)("h3",{id:"cutrational-rational"},(0,l.kt)("strong",{parentName:"h3"},"Cut(Rational, Rational)")),(0,l.kt)("p",null,"Returns a cut of the segment for a smaller ]start, end[ interval."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Segment Cut(Rational cutStart, Rational cutEnd)\n")),(0,l.kt)("h4",{id:"parameters-11"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cutStart")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nLeft extreme of the new definition interval."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cutEnd")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nRight extreme of the new definition interval."),(0,l.kt)("h4",{id:"returns-10"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nThe resulting from the cut."),(0,l.kt)("h4",{id:"exceptions-3"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null)),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"        Thrown if the new definition interval is not a subset of the current one.\n")),(0,l.kt)("h3",{id:"getoverlapsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"GetOverlap(Segment, Segment)")),(0,l.kt)("p",null,"Computes the overlap between two segments."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Nullable<ValueTuple<Rational, Rational>> GetOverlap(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-12"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-11"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.nullable-1"},"Nullable","<","ValueTuple","<","Rational, Rational",">",">"),(0,l.kt)("br",null),"\nThe extremes of the overlap interval, or null if there is none."),(0,l.kt)("h3",{id:"getoverlapsegment"},(0,l.kt)("strong",{parentName:"h3"},"GetOverlap(Segment)")),(0,l.kt)("p",null,"Computes the overlap between two elements."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Nullable<ValueTuple<Rational, Rational>> GetOverlap(Segment secondOperand)\n")),(0,l.kt)("h4",{id:"parameters-13"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"secondOperand")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-12"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.nullable-1"},"Nullable","<","ValueTuple","<","Rational, Rational",">",">"),(0,l.kt)("br",null),"\nThe extremes of the overlap interval, or null if there is none."),(0,l.kt)("h3",{id:"getintersectionsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"GetIntersection(Segment, Segment)")),(0,l.kt)("p",null,"Computes the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point")," of intersection between two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s, if it exists."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The point is computed only if unique. If two segments coincide, even if in part, this method will return null.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Point GetIntersection(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-14"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-13"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point of intersection, or null if it does not exist."),(0,l.kt)("h3",{id:"timeatrational"},(0,l.kt)("strong",{parentName:"h3"},"TimeAt(Rational)")),(0,l.kt)("p",null,"Computes the first time the segment is at or above given ",(0,l.kt)("inlineCode",{parentName:"p"},"value"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational TimeAt(Rational value)\n")),(0,l.kt)("h4",{id:"parameters-15"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"value")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nThe value to reach."),(0,l.kt)("h4",{id:"returns-14"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nThe first time t at which f(t) = value, or + infinity if it is never reached."),(0,l.kt)("h3",{id:"scalerational"},(0,l.kt)("strong",{parentName:"h3"},"Scale(Rational)")),(0,l.kt)("p",null,"Scales the segment by a multiplicative factor."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Element Scale(Rational scaling)\n")),(0,l.kt)("h4",{id:"parameters-16"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"scaling")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-15"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"delayrational"},(0,l.kt)("strong",{parentName:"h3"},"Delay(Rational)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Element Delay(Rational delay)\n")),(0,l.kt)("h4",{id:"parameters-17"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"delay")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-16"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"anticipaterational"},(0,l.kt)("strong",{parentName:"h3"},"Anticipate(Rational)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Element Anticipate(Rational time)\n")),(0,l.kt)("h4",{id:"parameters-18"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"time")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-17"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"verticalshiftrational"},(0,l.kt)("strong",{parentName:"h3"},"VerticalShift(Rational)")),(0,l.kt)("p",null,"Shifts the segment vertically by an additive factor."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Element VerticalShift(Rational shift)\n")),(0,l.kt)("h4",{id:"parameters-19"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"shift")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-18"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"negate"},(0,l.kt)("strong",{parentName:"h3"},"Negate()")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Element Negate()\n")),(0,l.kt)("h4",{id:"returns-19"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"inverse"},(0,l.kt)("strong",{parentName:"h3"},"Inverse()")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Element Inverse()\n")),(0,l.kt)("h4",{id:"returns-20"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"equalsobject"},(0,l.kt)("strong",{parentName:"h3"},"Equals(Object)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool Equals(object obj)\n")),(0,l.kt)("h4",{id:"parameters-20"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"obj")," ",(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-21"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"gethashcode"},(0,l.kt)("strong",{parentName:"h3"},"GetHashCode()")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public int GetHashCode()\n")),(0,l.kt)("h4",{id:"returns-22"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32"},"Int32"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"equalssegment"},(0,l.kt)("strong",{parentName:"h3"},"Equals(Segment)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool Equals(Segment s)\n")),(0,l.kt)("h4",{id:"parameters-21"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"s")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-23"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"iscertainlyabovesegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"IsCertainlyAbove(Segment, Segment)")),(0,l.kt)("p",null,"Returns true if the first segment has always higher value than the second one.\nDoes not consider time overlapping."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static bool IsCertainlyAbove(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-22"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-24"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"iscertainlyabovesegment"},(0,l.kt)("strong",{parentName:"h3"},"IsCertainlyAbove(Segment)")),(0,l.kt)("p",null,"Returns true if the first segment has always higher value than the second one.\nDoes not consider time overlapping."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsCertainlyAbove(Segment segment)\n")),(0,l.kt)("h4",{id:"parameters-23"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-25"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"iscertainlybelowsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"IsCertainlyBelow(Segment, Segment)")),(0,l.kt)("p",null,"Returns true if the first segment has always lower value than the second one.\nDoes not consider time overlapping."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static bool IsCertainlyBelow(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-24"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-26"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"iscertainlybelowsegment"},(0,l.kt)("strong",{parentName:"h3"},"IsCertainlyBelow(Segment)")),(0,l.kt)("p",null,"Returns true if the first segment has always lower value than the second one.\nDoes not consider time overlapping."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool IsCertainlyBelow(Segment segment)\n")),(0,l.kt)("h4",{id:"parameters-25"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-27"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"additionelement"},(0,l.kt)("strong",{parentName:"h3"},"Addition(Element)")),(0,l.kt)("p",null,"Sums the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," with an overlapping ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Element Addition(Element element)\n")),(0,l.kt)("h4",{id:"parameters-26"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"element")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-28"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null),"\nThe element resulting from the sum."),(0,l.kt)("h4",{id:"exceptions-4"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segment and the element do not overlap."),(0,l.kt)("h3",{id:"additionsegment-point"},(0,l.kt)("strong",{parentName:"h3"},"Addition(Segment, Point)")),(0,l.kt)("p",null,"Sums a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," with an overlapping ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Point Addition(Segment segment, Point point)\n")),(0,l.kt)("h4",{id:"parameters-27"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-29"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point resulting from the sum."),(0,l.kt)("h4",{id:"exceptions-5"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if point and segment do not overlap."),(0,l.kt)("h3",{id:"additionpoint"},(0,l.kt)("strong",{parentName:"h3"},"Addition(Point)")),(0,l.kt)("p",null,"Sums the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," with an overlapping ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Point Addition(Point point)\n")),(0,l.kt)("h4",{id:"parameters-28"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-30"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point resulting from the sum."),(0,l.kt)("h4",{id:"exceptions-6"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if point and segment do not overlap."),(0,l.kt)("h3",{id:"additionsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"Addition(Segment, Segment)")),(0,l.kt)("p",null,"Sums two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s over their overlapping part."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Segment Addition(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-29"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-31"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nA segment representing the sum."),(0,l.kt)("h4",{id:"exceptions-7"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if there is no overlap between the segments."),(0,l.kt)("h3",{id:"additionsegment"},(0,l.kt)("strong",{parentName:"h3"},"Addition(Segment)")),(0,l.kt)("p",null,"Sums two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s over their overlapping part."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Segment Addition(Segment segment)\n")),(0,l.kt)("h4",{id:"parameters-30"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-32"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nA segment representing the sum."),(0,l.kt)("h4",{id:"exceptions-8"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if there is no overlap between the segments."),(0,l.kt)("h3",{id:"subtractionelement"},(0,l.kt)("strong",{parentName:"h3"},"Subtraction(Element)")),(0,l.kt)("p",null,"Subtracts the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," with an overlapping ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The operation does not enforce non-negative values.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Element Subtraction(Element element)\n")),(0,l.kt)("h4",{id:"parameters-31"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"element")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-33"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null),"\nThe element resulting from the subtraction."),(0,l.kt)("h4",{id:"exceptions-9"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segment and the element do not overlap."),(0,l.kt)("h3",{id:"subtractionsegment-point"},(0,l.kt)("strong",{parentName:"h3"},"Subtraction(Segment, Point)")),(0,l.kt)("p",null,"Subtracts a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," with an overlapping ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The operation does not enforce non-negative values.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Point Subtraction(Segment segment, Point point)\n")),(0,l.kt)("h4",{id:"parameters-32"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-34"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point resulting from the subtraction."),(0,l.kt)("h4",{id:"exceptions-10"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if point and segment do not overlap."),(0,l.kt)("h3",{id:"subtractionpoint"},(0,l.kt)("strong",{parentName:"h3"},"Subtraction(Point)")),(0,l.kt)("p",null,"Subtracts the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," with an overlapping ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The operation does not enforce non-negative values.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Point Subtraction(Point point)\n")),(0,l.kt)("h4",{id:"parameters-33"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-35"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point resulting from the subtraction."),(0,l.kt)("h4",{id:"exceptions-11"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if point and segment do not overlap."),(0,l.kt)("h3",{id:"subtractionsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"Subtraction(Segment, Segment)")),(0,l.kt)("p",null,"Subtracts two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s over their overlapping part."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The operation does not enforce non-negative values.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Segment Subtraction(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-34"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-36"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nA segment representing the subtraction."),(0,l.kt)("h4",{id:"exceptions-12"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if there is no overlap between the segments."),(0,l.kt)("h3",{id:"subtractionsegment"},(0,l.kt)("strong",{parentName:"h3"},"Subtraction(Segment)")),(0,l.kt)("p",null,"Subtracts two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s over their overlapping part."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The operation does not enforce non-negative values.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Segment Subtraction(Segment segment)\n")),(0,l.kt)("h4",{id:"parameters-35"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-37"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nA segment representing the subtraction."),(0,l.kt)("h4",{id:"exceptions-13"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if there is no overlap between the segments."),(0,l.kt)("h3",{id:"minimumelement"},(0,l.kt)("strong",{parentName:"h3"},"Minimum(Element)")),(0,l.kt)("p",null,"Computes the minimum of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and the given ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element")," over their overlapping part.\nThe result is either a point, a segment or a segment-point-segment sequence."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public List<Element> Minimum(Element element)\n")),(0,l.kt)("h4",{id:"parameters-36"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"element")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-38"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the minimum."),(0,l.kt)("h3",{id:"minimumsegment-point"},(0,l.kt)("strong",{parentName:"h3"},"Minimum(Segment, Point)")),(0,l.kt)("p",null,"Computes the minimum of a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point")," over their overlapping part."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Point Minimum(Segment segment, Point point)\n")),(0,l.kt)("h4",{id:"parameters-37"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-39"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point resulting from the minimum."),(0,l.kt)("h4",{id:"exceptions-14"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if point and segment do not overlap."),(0,l.kt)("h3",{id:"minimumpoint"},(0,l.kt)("strong",{parentName:"h3"},"Minimum(Point)")),(0,l.kt)("p",null,"Computes the minimum of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point")," over their overlapping part."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Point Minimum(Point point)\n")),(0,l.kt)("h4",{id:"parameters-38"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nSecond operand"),(0,l.kt)("h4",{id:"returns-40"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point resulting from the minimum"),(0,l.kt)("h4",{id:"exceptions-15"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if point and segment do not overlap"),(0,l.kt)("h3",{id:"minimumsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"Minimum(Segment, Segment)")),(0,l.kt)("p",null,"Computes the minimum of two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s over their overlapping part.\nThe result is either a segment or, if the segments intersect, a segment-point-segment sequence."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Minimum(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-39"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-41"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the minimum."),(0,l.kt)("h4",{id:"exceptions-16"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segments do not overlap."),(0,l.kt)("h3",{id:"minimumsegment"},(0,l.kt)("strong",{parentName:"h3"},"Minimum(Segment)")),(0,l.kt)("p",null,"Computes the minimum of two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s over their overlapping part.\nThe result is either a segment or, if the segments intersect, a segment-point-segment sequence."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public List<Element> Minimum(Segment segment)\n")),(0,l.kt)("h4",{id:"parameters-40"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-42"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the minimum"),(0,l.kt)("h4",{id:"exceptions-17"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segments do not overlap"),(0,l.kt)("h3",{id:"minimumireadonlylistsegment"},(0,l.kt)("strong",{parentName:"h3"},"Minimum(IReadOnlyList","<","Segment",">",")")),(0,l.kt)("p",null,"Computes the minimum of a set of segments over their overlapping part."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Minimum(IReadOnlyList<Segment> segments)\n")),(0,l.kt)("h4",{id:"parameters-41"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segments")," ",(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","Segment",">"),(0,l.kt)("br",null),"\nSegments of which the minimum has to be computed."),(0,l.kt)("h4",{id:"returns-43"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe result of the overall minimum."),(0,l.kt)("h4",{id:"exceptions-18"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segments do not overlap."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.invalidoperationexception"},"InvalidOperationException"),(0,l.kt)("br",null),"\nThrown if the set of segments is empty."),(0,l.kt)("h3",{id:"maximumelement"},(0,l.kt)("strong",{parentName:"h3"},"Maximum(Element)")),(0,l.kt)("p",null,"Computes the maximum of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and the given ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element")," over their overlapping part.\nThe result is either a point, a segment or a segment-point-segment sequence."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public List<Element> Maximum(Element element)\n")),(0,l.kt)("h4",{id:"parameters-42"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"element")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-44"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the maximum."),(0,l.kt)("h3",{id:"maximumsegment-point"},(0,l.kt)("strong",{parentName:"h3"},"Maximum(Segment, Point)")),(0,l.kt)("p",null,"Computes the maximum of a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point")," over their overlapping part."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Point Maximum(Segment segment, Point point)\n")),(0,l.kt)("h4",{id:"parameters-43"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-45"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point resulting from the maximum."),(0,l.kt)("h4",{id:"exceptions-19"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if point and segment do not overlap."),(0,l.kt)("h3",{id:"maximumpoint"},(0,l.kt)("strong",{parentName:"h3"},"Maximum(Point)")),(0,l.kt)("p",null,"Computes the maximum of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point")," over their overlapping part."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Point Maximum(Point point)\n")),(0,l.kt)("h4",{id:"parameters-44"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nSecond operand"),(0,l.kt)("h4",{id:"returns-46"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null),"\nThe point resulting from the maximum"),(0,l.kt)("h4",{id:"exceptions-20"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if point and segment do not overlap"),(0,l.kt)("h3",{id:"maximumsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"Maximum(Segment, Segment)")),(0,l.kt)("p",null,"Computes the maximum of two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s over their overlapping part.\nThe result is either a segment or, if the segments intersect, a segment-point-segment sequence."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Maximum(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-45"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-47"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the maximum."),(0,l.kt)("h4",{id:"exceptions-21"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segments do not overlap."),(0,l.kt)("h3",{id:"maximumsegment"},(0,l.kt)("strong",{parentName:"h3"},"Maximum(Segment)")),(0,l.kt)("p",null,"Computes the maximum of two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s over their overlapping part.\nThe result is either a segment or, if the segments intersect, a segment-point-segment sequence."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public List<Element> Maximum(Segment segment)\n")),(0,l.kt)("h4",{id:"parameters-46"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-48"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the maximum"),(0,l.kt)("h4",{id:"exceptions-22"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segments do not overlap"),(0,l.kt)("h3",{id:"maximumireadonlylistsegment"},(0,l.kt)("strong",{parentName:"h3"},"Maximum(IReadOnlyList","<","Segment",">",")")),(0,l.kt)("p",null,"Computes the maximum of a set of segments over their overlapping part."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Maximum(IReadOnlyList<Segment> segments)\n")),(0,l.kt)("h4",{id:"parameters-47"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segments")," ",(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ireadonlylist-1"},"IReadOnlyList","<","Segment",">"),(0,l.kt)("br",null),"\nSegments of which the maximum has to be computed."),(0,l.kt)("h4",{id:"returns-49"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe result of the overall maximum."),(0,l.kt)("h4",{id:"exceptions-23"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"},"ArgumentException"),(0,l.kt)("br",null),"\nThrown if the segments do not overlap."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.invalidoperationexception"},"InvalidOperationException"),(0,l.kt)("br",null),"\nThrown if the set of segments is empty."),(0,l.kt)("h3",{id:"convolutionelement"},(0,l.kt)("strong",{parentName:"h3"},"Convolution(Element)")),(0,l.kt)("p",null,"Computes the convolution between the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and the given ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public IEnumerable<Element> Convolution(Element element)\n")),(0,l.kt)("h4",{id:"parameters-48"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"element")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-50"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the convolution."),(0,l.kt)("h3",{id:"convolutionsegment-point"},(0,l.kt)("strong",{parentName:"h3"},"Convolution(Segment, Point)")),(0,l.kt)("p",null,"Computes the convolution between a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.1, Lemma 3")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Segment Convolution(Segment segment, Point point)\n")),(0,l.kt)("h4",{id:"parameters-49"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-51"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nThe resulting from the convolution."),(0,l.kt)("h3",{id:"convolutionpoint"},(0,l.kt)("strong",{parentName:"h3"},"Convolution(Point)")),(0,l.kt)("p",null,"Computes the convolution between the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.1, Lemma 3")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Segment Convolution(Point point)\n")),(0,l.kt)("h4",{id:"parameters-50"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-52"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nThe resulting from the convolution."),(0,l.kt)("h3",{id:"convolutionsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"Convolution(Segment, Segment)")),(0,l.kt)("p",null,"Computes the convolution between two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.1, Lemma 4")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static IEnumerable<Element> Convolution(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-51"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-53"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the convolution."),(0,l.kt)("h3",{id:"convolutionsegment"},(0,l.kt)("strong",{parentName:"h3"},"Convolution(Segment)")),(0,l.kt)("p",null,"Computes the convolution between two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.1, Lemma 4")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public IEnumerable<Element> Convolution(Segment segment)\n")),(0,l.kt)("h4",{id:"parameters-52"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-54"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the convolution."),(0,l.kt)("h3",{id:"deconvolutionelement"},(0,l.kt)("strong",{parentName:"h3"},"Deconvolution(Element)")),(0,l.kt)("p",null,"Computes the deconvolution between the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and the given ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public List<Element> Deconvolution(Element element)\n")),(0,l.kt)("h4",{id:"parameters-53"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"element")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Element"},"Element"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-55"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the deconvolution."),(0,l.kt)("h3",{id:"deconvolutionsegment-point"},(0,l.kt)("strong",{parentName:"h3"},"Deconvolution(Segment, Point)")),(0,l.kt)("p",null,"Computes the deconvolution between a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.2, Lemma 6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static Segment Deconvolution(Segment segment, Point point)\n")),(0,l.kt)("h4",{id:"parameters-54"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-56"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nThe resulting from the deconvolution."),(0,l.kt)("h3",{id:"deconvolutionpoint"},(0,l.kt)("strong",{parentName:"h3"},"Deconvolution(Point)")),(0,l.kt)("p",null,"Computes the deconvolution between the ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment")," and a ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.2, Lemma 6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public Segment Deconvolution(Point point)\n")),(0,l.kt)("h4",{id:"parameters-55"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"point")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Point"},"Point"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-57"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null),"\nThe resulting from the deconvolution."),(0,l.kt)("h3",{id:"deconvolutionsegment-segment"},(0,l.kt)("strong",{parentName:"h3"},"Deconvolution(Segment, Segment)")),(0,l.kt)("p",null,"Computes the deconvolution between two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.2, Lemma 8")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public static List<Element> Deconvolution(Segment a, Segment b)\n")),(0,l.kt)("h4",{id:"parameters-56"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"b")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-58"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the deconvolution."),(0,l.kt)("h3",{id:"deconvolutionsegment"},(0,l.kt)("strong",{parentName:"h3"},"Deconvolution(Segment)")),(0,l.kt)("p",null,"Computes the deconvolution between two ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),"s."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Defined in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 3.2.2, Lemma 8")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public List<Element> Deconvolution(Segment segment)\n")),(0,l.kt)("h4",{id:"parameters-57"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"segment")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Segment"},"Segment"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-59"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"},"List","<","Element",">"),(0,l.kt)("br",null),"\nThe set of s resulting from the deconvolution."),(0,l.kt)("h3",{id:"subadditiveclosurecomputationsettings"},(0,l.kt)("strong",{parentName:"h3"},"SubAdditiveClosure(ComputationSettings)")),(0,l.kt)("p",null,"Computes the sub-additive closure of the segment."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Described in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 4.6 as algorithm 10")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public SubAdditiveCurve SubAdditiveClosure(ComputationSettings settings)\n")),(0,l.kt)("h4",{id:"parameters-58"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-60"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.NetworkCalculus/SubAdditiveCurve"},"SubAdditiveCurve"),(0,l.kt)("br",null),"\nThe result of the sub-additive closure."),(0,l.kt)("h3",{id:"subadditiveclosurerational-rational-computationsettings"},(0,l.kt)("strong",{parentName:"h3"},"SubAdditiveClosure(Rational, Rational, ComputationSettings)")),(0,l.kt)("p",null,"Computes the sub-additive closure of the pseudo-periodic segment."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Described in ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/References"},"[","BT07","]")," Section 4.6 as algorithm 11")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public SubAdditiveCurve SubAdditiveClosure(Rational pseudoPeriodLength, Rational pseudoPeriodHeight, ComputationSettings settings)\n")),(0,l.kt)("h4",{id:"parameters-59"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pseudoPeriodLength")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nLength of the pseudo-period."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pseudoPeriodHeight")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Numerics/Rational"},"Rational"),(0,l.kt)("br",null),"\nStep gained after each pseudo-period."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"settings")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings"),(0,l.kt)("br",null)),(0,l.kt)("h4",{id:"returns-61"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.NetworkCalculus/SubAdditiveCurve"},"SubAdditiveCurve"),(0,l.kt)("br",null)))}k.isMDXComponent=!0}}]);