"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[4981],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),u=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(t),d=i,y=m["".concat(c,".").concat(d)]||m[d]||s[d]||r;return t?a.createElement(y,o(o({ref:n},p),{},{components:t})):a.createElement(y,o({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1667:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=t(7462),i=(t(7294),t(3905));const r={hide_title:!0,sidebar_position:3,title:"Operators"},o="Operators",l={unversionedId:"tutorials/first-tutorial/operators",id:"tutorials/first-tutorial/operators",title:"Operators",description:"The library implements the DNC operators for all representable curves, which include",source:"@site/docs/tutorials/first-tutorial/operators.md",sourceDirName:"tutorials/first-tutorial",slug:"/tutorials/first-tutorial/operators",permalink:"/nancy/docs/tutorials/first-tutorial/operators",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{hide_title:!0,sidebar_position:3,title:"Operators"},sidebar:"tutorialSidebar",previous:{title:"Common types of curves",permalink:"/nancy/docs/tutorials/first-tutorial/common-types"},next:{title:"Simple computations",permalink:"/nancy/docs/tutorials/first-tutorial/Examples/simple-computations"}},c={},u=[{value:"Immutability",id:"immutability",level:2}],p={toc:u};function s(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"operators"},"Operators"),(0,i.kt)("p",null,"The library implements the DNC operators for all representable curves, which include"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#minimumcurve-computationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"Minimum"))," and ",(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#maximumcurve-computationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"Maximum"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#additioncurve"},(0,i.kt)("inlineCode",{parentName:"a"},"Addition"))," and ",(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#subtractioncurve-boolean"},(0,i.kt)("inlineCode",{parentName:"a"},"Subtraction")),", the latter with option to have the result non-negative (default) or not"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#convolutioncurve-computationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"Convolution"))," and ",(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#deconvolutioncurve-computationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"Deconvolution"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#verticaldeviationcurve-curve"},(0,i.kt)("inlineCode",{parentName:"a"},"Vertical")),"- and ",(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#horizontaldeviationcurve-curve"},(0,i.kt)("inlineCode",{parentName:"a"},"HorizontalDeviation"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#maxplusconvolutioncurve-computationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"MaxPlusConvolution"))," and ",(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#maxplusdeconvolutioncurve-computationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"MaxPlusDeconvolution"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#lowerpseudoinverse"},(0,i.kt)("inlineCode",{parentName:"a"},"Lower")),"- and ",(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#upperpseudoinverse"},(0,i.kt)("inlineCode",{parentName:"a"},"UpperPseudoInverse"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#subadditiveclosurecomputationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"Sub")),"- and ",(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#superadditiveclosurecomputationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"SuperAdditiveClosure"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#compositioncurve-computationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"Composition")))),(0,i.kt)("p",null,"Common manipulations are also included:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#delaybyrational"},(0,i.kt)("inlineCode",{parentName:"a"},"DelayBy"))," and ",(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#anticipatebyrational"},(0,i.kt)("inlineCode",{parentName:"a"},"AnticipateBy"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#verticalshiftrational-boolean"},(0,i.kt)("inlineCode",{parentName:"a"},"VerticalShift"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/nancy/Unipi.Nancy/Unipi.Nancy.MinPlusAlgebra/Curve#cutrational-rational-boolean-boolean-computationsettings"},(0,i.kt)("inlineCode",{parentName:"a"},"Cut"))," over finite interval")),(0,i.kt)("h2",{id:"immutability"},"Immutability"),(0,i.kt)("p",null,"Note that all the data structures used in Nancy are ",(0,i.kt)("em",{parentName:"p"},"immutable"),".\nThis means that methods will not change the operands, instead they will create and return a new object that contains the result."),(0,i.kt)("p",null,"The main benefit of this approach is that you can safely use objects in multiple contexts and concurrently, and never worry about concurrent writes to your variables."))}s.isMDXComponent=!0}}]);