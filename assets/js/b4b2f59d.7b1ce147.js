"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[5865],{531:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/Equivalence","title":"Equivalence","description":"The class allows to define equivalences involving NetCal expressions","source":"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/Equivalence.md","sourceDirName":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences","slug":"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/Equivalence","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/Equivalence","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"Equivalence"},"sidebar":"docsSidebar","previous":{"title":"DeconvolutionWithConvolution","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/DeconvolutionWithConvolution"},"next":{"title":"EquivalenceApplyResult","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/EquivalenceApplyResult"}}');var i=n(4848),o=n(8453);const t={hide_title:!0,title:"Equivalence"},c="Equivalence",a={},l=[{value:"Properties",id:"properties",level:2},{value:"<strong>LeftSideExpression</strong>",id:"leftsideexpression",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<strong>RightSideExpression</strong>",id:"rightsideexpression",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"Constructors",id:"constructors",level:2},{value:"<strong>Equivalence(CurveExpression, CurveExpression)</strong>",id:"equivalencecurveexpression-curveexpression",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Exceptions",id:"exceptions",level:4},{value:"Methods",id:"methods",level:2},{value:"<strong>AddHypothesis(String, Predicate&lt;CurveExpression&gt;)</strong>",id:"addhypothesisstring-predicatecurveexpression",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"<strong>AddHypothesis(String, String, Func&lt;CurveExpression, CurveExpression, Boolean&gt;)</strong>",id:"addhypothesisstring-string-funccurveexpression-curveexpression-boolean",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"<strong>AddHypothesis(String, String, String, Func&lt;CurveExpression, CurveExpression, CurveExpression, Boolean&gt;)</strong>",id:"addhypothesisstring-string-string-funccurveexpression-curveexpression-curveexpression-boolean",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"<strong>AddHypothesis(String, Predicate&lt;RationalExpression&gt;)</strong>",id:"addhypothesisstring-predicaterationalexpression",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"<strong>AddHypothesis(String, String, Func&lt;RationalExpression, RationalExpression, Boolean&gt;)</strong>",id:"addhypothesisstring-string-funcrationalexpression-rationalexpression-boolean",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"<strong>AddHypothesis(String, String, String, Func&lt;RationalExpression, RationalExpression, RationalExpression, Boolean&gt;)</strong>",id:"addhypothesisstring-string-string-funcrationalexpression-rationalexpression-rationalexpression-boolean",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"<strong>Apply(IGenericExpression&lt;Curve&gt;, CheckType)</strong>",id:"applyigenericexpressioncurve-checktype",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>ToString()</strong>",id:"tostring",level:3},{value:"Returns",id:"returns-1",level:4},{value:"<strong>ReadEquivalencesFromFile(String)</strong>",id:"readequivalencesfromfilestring",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<strong>ReadEquivalences(String)</strong>",id:"readequivalencesstring",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-3",level:4}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"equivalence",children:"Equivalence"})}),"\n",(0,i.jsx)(s.p,{children:"The class allows to define equivalences involving NetCal expressions"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public class Equivalence\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Inheritance ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/Equivalence",children:"Equivalence"})]}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"leftsideexpression",children:(0,i.jsx)(s.strong,{children:"LeftSideExpression"})}),"\n",(0,i.jsx)(s.p,{children:"Left side of the equivalence"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public CurveExpression LeftSideExpression { get; set; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"rightsideexpression",children:(0,i.jsx)(s.strong,{children:"RightSideExpression"})}),"\n",(0,i.jsx)(s.p,{children:"Right side of the equivalence"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public CurveExpression RightSideExpression { get; set; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-1",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(s.h3,{id:"equivalencecurveexpression-curveexpression",children:(0,i.jsx)(s.strong,{children:"Equivalence(CurveExpression, CurveExpression)"})}),"\n",(0,i.jsx)(s.p,{children:"Equivalence constructor"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public Equivalence(CurveExpression leftSideExpression, CurveExpression rightSideExpression)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"leftSideExpression"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{}),"\r\nThe left side of the equivalence"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"rightSideExpression"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{}),"\r\nThe right side of the equivalence"]}),"\n",(0,i.jsx)(s.h4,{id:"exceptions",children:"Exceptions"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.exception",children:"Exception"}),(0,i.jsx)("br",{}),"\r\nException raised if left or right side don't contain placeholders"]}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"addhypothesisstring-predicatecurveexpression",children:(0,i.jsx)(s.strong,{children:"AddHypothesis(String, Predicate<CurveExpression>)"})}),"\n",(0,i.jsx)(s.p,{children:"Add an hypothesis on a single curve operand."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public void AddHypothesis(string placeholder, Predicate<CurveExpression> h)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"h"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.predicate-1",children:"Predicate<CurveExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"addhypothesisstring-string-funccurveexpression-curveexpression-boolean",children:(0,i.jsx)(s.strong,{children:"AddHypothesis(String, String, Func<CurveExpression, CurveExpression, Boolean>)"})}),"\n",(0,i.jsx)(s.p,{children:"Add an hypothesis on a two curve operands."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public void AddHypothesis(string placeholder1, string placeholder2, Func<CurveExpression, CurveExpression, bool> h)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder1"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder2"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"h"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.func-3",children:"Func<CurveExpression, CurveExpression, Boolean>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"addhypothesisstring-string-string-funccurveexpression-curveexpression-curveexpression-boolean",children:(0,i.jsx)(s.strong,{children:"AddHypothesis(String, String, String, Func<CurveExpression, CurveExpression, CurveExpression, Boolean>)"})}),"\n",(0,i.jsx)(s.p,{children:"Add an hypothesis on a three curve operands."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public void AddHypothesis(string placeholder1, string placeholder2, string placeholder3, Func<CurveExpression, CurveExpression, CurveExpression, bool> h)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder1"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder2"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder3"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"h"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.func-4",children:"Func<CurveExpression, CurveExpression, CurveExpression, Boolean>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"addhypothesisstring-predicaterationalexpression",children:(0,i.jsx)(s.strong,{children:"AddHypothesis(String, Predicate<RationalExpression>)"})}),"\n",(0,i.jsx)(s.p,{children:"Add an hypothesis on a single rational operand."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public void AddHypothesis(string placeholder, Predicate<RationalExpression> h)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"h"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.predicate-1",children:"Predicate<RationalExpression>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"addhypothesisstring-string-funcrationalexpression-rationalexpression-boolean",children:(0,i.jsx)(s.strong,{children:"AddHypothesis(String, String, Func<RationalExpression, RationalExpression, Boolean>)"})}),"\n",(0,i.jsx)(s.p,{children:"Add an hypothesis on two rational operands."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public void AddHypothesis(string placeholder1, string placeholder2, Func<RationalExpression, RationalExpression, bool> h)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder1"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder2"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"h"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.func-3",children:"Func<RationalExpression, RationalExpression, Boolean>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"addhypothesisstring-string-string-funcrationalexpression-rationalexpression-rationalexpression-boolean",children:(0,i.jsx)(s.strong,{children:"AddHypothesis(String, String, String, Func<RationalExpression, RationalExpression, RationalExpression, Boolean>)"})}),"\n",(0,i.jsx)(s.p,{children:"Add an hypothesis on three rational operands."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public void AddHypothesis(string placeholder1, string placeholder2, string placeholder3, Func<RationalExpression, RationalExpression, RationalExpression, bool> h)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder1"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder2"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"placeholder3"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"h"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.func-4",children:"Func<RationalExpression, RationalExpression, RationalExpression, Boolean>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"applyigenericexpressioncurve-checktype",children:(0,i.jsx)(s.strong,{children:"Apply(IGenericExpression<Curve>, CheckType)"})}),"\n",(0,i.jsx)(s.p,{children:"Check and apply the equivalence."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public EquivalenceApplyResult Apply(IGenericExpression<Curve> expression, CheckType checkType)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"expression"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericExpression",children:"IGenericExpression<Curve>"}),(0,i.jsx)("br",{}),"\r\nThe expression on which the equivalence is to be applied."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"checkType"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/CheckType",children:"CheckType"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/EquivalenceApplyResult",children:"EquivalenceApplyResult"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"tostring",children:(0,i.jsx)(s.strong,{children:"ToString()"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public string ToString()\n"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"readequivalencesfromfilestring",children:(0,i.jsx)(s.strong,{children:"ReadEquivalencesFromFile(String)"})}),"\n",(0,i.jsx)(s.p,{children:"Reads a set of equivalences from a text file."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public static List<Equivalence> ReadEquivalencesFromFile(string fileName)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"fileName"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{}),"\r\nPath to text file."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1",children:"List<Equivalence>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"readequivalencesstring",children:(0,i.jsx)(s.strong,{children:"ReadEquivalences(String)"})}),"\n",(0,i.jsx)(s.p,{children:"Reads a set of equivalences from a string."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public static List<Equivalence> ReadEquivalences(string equivalenceCatalog)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"equivalenceCatalog"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{}),"\r\nThe string containing the equivalences."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1",children:"List<Equivalence>"}),(0,i.jsx)("br",{})]})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>c});var r=n(6540);const i={},o=r.createContext(i);function t(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);