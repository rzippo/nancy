"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[7706],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>x});var t=r(7294);function s(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){s(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var o=t.createContext({}),l=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},c=function(e){var n=l(e.components);return t.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,s=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(r),x=s,y=m["".concat(o,".").concat(x)]||m[x]||u[x]||i;return r?t.createElement(y,a(a({ref:n},c),{},{components:r})):t.createElement(y,a({ref:n},c))}));function x(e,n){var r=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=r.length,a=new Array(i);a[0]=m;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:s,a[1]=p;for(var l=2;l<i;l++)a[l]=r[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4007:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var t=r(7462),s=(r(7294),r(3905));const i={hide_title:!0},a="ExpressionReplacer&lt;T1, T2&gt;",p={unversionedId:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility.Internals/ExpressionReplacer`2",id:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility.Internals/ExpressionReplacer`2",title:"ExpressionReplacer&lt;T1, T2&gt;",description:"Class which allows to manipulate DNC expressions. It manages replacement by-value and by-position. The features",source:"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility.Internals/ExpressionReplacer`2.md",sourceDirName:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility.Internals",slug:"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility.Internals/ExpressionReplacer`2",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility.Internals/ExpressionReplacer`2",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"docsSidebar",previous:{title:"Unipi.Nancy.Expressions.ExpressionsUtility.Internals",permalink:"/nancy/docs/category/unipinancyexpressionsexpressionsutilityinternals"},next:{title:"Unipi.Nancy.Expressions.Grammar",permalink:"/nancy/docs/category/unipinancyexpressionsgrammar"}},o={},l=[{value:"Type Parameters",id:"type-parameters",level:4},{value:"Constructors",id:"constructors",level:2},{value:"<strong>ExpressionReplacer(IGenericExpression&lt;T1&gt;, IGenericExpression&lt;T2&gt;)</strong>",id:"expressionreplacerigenericexpressiont1-igenericexpressiont2",level:3},{value:"Parameters",id:"parameters",level:4},{value:"<strong>ExpressionReplacer(IGenericExpression&lt;T1&gt;, Equivalence, CheckType)</strong>",id:"expressionreplacerigenericexpressiont1-equivalence-checktype",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Methods",id:"methods",level:2},{value:"<strong>MatchPattern&lt;T&gt;(IGenericExpression&lt;T&gt;, IGenericExpression&lt;T&gt;, Boolean)</strong>",id:"matchpatterntigenericexpressiont-igenericexpressiont-boolean",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns",level:4},{value:"<strong>ReplaceByValue(IGenericExpression&lt;T2&gt;)</strong>",id:"replacebyvalueigenericexpressiont2",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>ReplaceByPosition(IEnumerable&lt;String&gt;)</strong>",id:"replacebypositionienumerablestring",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-2",level:4}],c={toc:l};function u(e){let{components:n,...r}=e;return(0,s.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"expressionreplacert1-t2"},"ExpressionReplacer","<","T1, T2",">"),(0,s.kt)("p",null,"Class which allows to manipulate DNC expressions. It manages replacement by-value and by-position. The features\nare also reused for applying equivalence by-value and by-position."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public class ExpressionReplacer<T1, T2>\n")),(0,s.kt)("h4",{id:"type-parameters"},"Type Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"ExpressionReplacer&lt;T1, T2&gt;.T1"),(0,s.kt)("br",null),"\nValue type of  (Curve or Rational)"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"ExpressionReplacer&lt;T1, T2&gt;.T2"),(0,s.kt)("br",null),"\nValue type of  (Curve or Rational)"),(0,s.kt)("p",null,"Inheritance ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object")," \u2192 ",(0,s.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.ExpressionsUtility.Internals/ExpressionReplacer%602"},"ExpressionReplacer","<","T1, T2",">")),(0,s.kt)("h2",{id:"constructors"},"Constructors"),(0,s.kt)("h3",{id:"expressionreplacerigenericexpressiont1-igenericexpressiont2"},(0,s.kt)("strong",{parentName:"h3"},"ExpressionReplacer(IGenericExpression","<","T1",">",", IGenericExpression","<","T2",">",")")),(0,s.kt)("p",null,"Class which allows to manipulate DNC expressions. It manages replacement by-value and by-position. The features\nare also reused for applying equivalence by-value and by-position."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionReplacer(IGenericExpression<T1> originalExpression, IGenericExpression<T2> newExpressionToReplace)\n")),(0,s.kt)("h4",{id:"parameters"},"Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"originalExpression")," IGenericExpression","<","T1",">",(0,s.kt)("br",null),"\nThe main DNC expression, a sub-expression of it needs to be replaced."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"newExpressionToReplace")," IGenericExpression","<","T2",">",(0,s.kt)("br",null),'\nThe new expression which must be "inserted" inside the main expression.'),(0,s.kt)("h3",{id:"expressionreplacerigenericexpressiont1-equivalence-checktype"},(0,s.kt)("strong",{parentName:"h3"},"ExpressionReplacer(IGenericExpression","<","T1",">",", Equivalence, CheckType)")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionReplacer(IGenericExpression<T1> originalExpression, Equivalence equivalence, CheckType checkType)\n")),(0,s.kt)("h4",{id:"parameters-1"},"Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"originalExpression")," IGenericExpression","<","T1",">",(0,s.kt)("br",null)),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"equivalence")," ",(0,s.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/Equivalence"},"Equivalence"),(0,s.kt)("br",null)),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"checkType")," ",(0,s.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/CheckType"},"CheckType"),(0,s.kt)("br",null)),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("h3",{id:"matchpatterntigenericexpressiont-igenericexpressiont-boolean"},(0,s.kt)("strong",{parentName:"h3"},"MatchPattern","<","T",">","(IGenericExpression","<","T",">",", IGenericExpression","<","T",">",", Boolean)")),(0,s.kt)("p",null,"Verifies if an expression is equivalent to another (called pattern) by comparing their structure"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public static bool MatchPattern<T>(IGenericExpression<T> pattern, IGenericExpression<T> expression, bool patternRoot)\n")),(0,s.kt)("h4",{id:"type-parameters-1"},"Type Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"ExpressionReplacer&lt;T1, T2&gt;.T"),(0,s.kt)("br",null)),(0,s.kt)("h4",{id:"parameters-2"},"Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"pattern")," IGenericExpression","<","T",">",(0,s.kt)("br",null),"\nThe pattern expression"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"expression")," IGenericExpression","<","T",">",(0,s.kt)("br",null),"\nThe expression checked against the pattern"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"patternRoot")," ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,s.kt)("br",null),"\nIndication of whether the match is at the root of the pattern or not"),(0,s.kt)("h4",{id:"returns"},"Returns"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,s.kt)("br",null),"\nTrue if the expression matches the pattern, False otherwise"),(0,s.kt)("h3",{id:"replacebyvalueigenericexpressiont2"},(0,s.kt)("strong",{parentName:"h3"},"ReplaceByValue(IGenericExpression","<","T2",">",")")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public IGenericExpression<T1> ReplaceByValue(IGenericExpression<T2> expressionPattern)\n")),(0,s.kt)("h4",{id:"parameters-3"},"Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"expressionPattern")," IGenericExpression","<","T2",">",(0,s.kt)("br",null)),(0,s.kt)("h4",{id:"returns-1"},"Returns"),(0,s.kt)("p",null,"IGenericExpression","<","T1",">",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"replacebypositionienumerablestring"},(0,s.kt)("strong",{parentName:"h3"},"ReplaceByPosition(IEnumerable","<","String",">",")")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public IGenericExpression<T1> ReplaceByPosition(IEnumerable<string> expressionPosition)\n")),(0,s.kt)("h4",{id:"parameters-4"},"Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"expressionPosition")," ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"},"IEnumerable","<","String",">"),(0,s.kt)("br",null)),(0,s.kt)("h4",{id:"returns-2"},"Returns"),(0,s.kt)("p",null,"IGenericExpression","<","T1",">",(0,s.kt)("br",null)))}u.isMDXComponent=!0}}]);