"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[3578],{1436:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/CheckType","title":"CheckType","description":"todo: document","source":"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/CheckType.md","sourceDirName":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences","slug":"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/CheckType","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/CheckType","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"CheckType"},"sidebar":"docsSidebar","previous":{"title":"Unipi.Nancy.Expressions.Equivalences","permalink":"/nancy/docs/category/unipinancyexpressionsequivalences"},"next":{"title":"ConvAdditionByAConstant","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/ConvAdditionByAConstant"}}');var c=s(4848),i=s(8453);const o={hide_title:!0,title:"CheckType"},r="CheckType",a={},d=[{value:"Fields",id:"fields",level:2},{value:"<strong>CheckLeftOnly</strong>",id:"checkleftonly",level:3},{value:"<strong>CheckRightOnly</strong>",id:"checkrightonly",level:3},{value:"<strong>CheckBothSides</strong>",id:"checkbothsides",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"checktype",children:"CheckType"})}),"\n",(0,c.jsx)(n.p,{children:"todo: document"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-csharp",children:"public enum CheckType\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Inheritance ",(0,c.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,c.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.valuetype",children:"ValueType"})," \u2192 ",(0,c.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.enum",children:"Enum"})," \u2192 ",(0,c.jsx)(n.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Equivalences/CheckType",children:"CheckType"}),(0,c.jsx)("br",{}),"\r\nImplements ",(0,c.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.icomparable",children:"IComparable"}),", ",(0,c.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.ispanformattable",children:"ISpanFormattable"}),", ",(0,c.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.iformattable",children:"IFormattable"}),", ",(0,c.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.iconvertible",children:"IConvertible"})]}),"\n",(0,c.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,c.jsx)(n.h3,{id:"checkleftonly",children:(0,c.jsx)(n.strong,{children:"CheckLeftOnly"})}),"\n",(0,c.jsx)(n.p,{children:"todo: document"}),"\n",(0,c.jsx)(n.h3,{id:"checkrightonly",children:(0,c.jsx)(n.strong,{children:"CheckRightOnly"})}),"\n",(0,c.jsx)(n.p,{children:"todo: document"}),"\n",(0,c.jsx)(n.h3,{id:"checkbothsides",children:(0,c.jsx)(n.strong,{children:"CheckBothSides"})}),"\n",(0,c.jsx)(n.p,{children:"todo: document"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(6540);const c={},i=t.createContext(c);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);