"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[404],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),f=i,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1402:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={hide_title:!0,sidebar_position:10,title:"Tuning Performance"},a="Tuning performance",s={unversionedId:"tutorials/optimizations/tuning-performance",id:"tutorials/optimizations/tuning-performance",title:"Tuning Performance",description:"\x3c!-- ## Representation minimization",source:"@site/docs/tutorials/optimizations/tuning-performance.md",sourceDirName:"tutorials/optimizations",slug:"/tutorials/optimizations/tuning-performance",permalink:"/nancy/docs/tutorials/optimizations/tuning-performance",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{hide_title:!0,sidebar_position:10,title:"Tuning Performance"},sidebar:"tutorialSidebar",previous:{title:"Isospeed convolutions",permalink:"/nancy/docs/tutorials/optimizations/isospeed-convolutions"},next:{title:"Use specialized Curves",permalink:"/nancy/docs/tutorials/gotchas/specialized-curves"}},l={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tuning-performance"},"Tuning performance"),(0,i.kt)("p",null,"Most operators will have as a last optional argument a ",(0,i.kt)("a",{parentName:"p",href:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings"},"ComputationSettings")," object, that is used to tune how the operator is computed."),(0,i.kt)("p",null,"The most relevant settings are ",(0,i.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings#userepresentationminimization"},"UseRepresentationMinimization"),", which will apply representation minimization to all results (also intermediate ones) and ",(0,i.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings#useparallelism"},"UseParallelism"),", which will use parallelization when is (heuristically) deemed to be useful.\n",(0,i.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.MinPlusAlgebra/ComputationSettings#usesubadditiveconvolutionoptimizations"},"UseSubAdditiveConvolutionOptimizations")," enables the subadditive convolution optimizations, and so on.\nThese are all set by default to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",null,"Below, an example which runs the min-plus convolution in serial mode."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"    var f = ...;\n    var g = ...;\n\n    var h = Curve.Convolution(f, g, settings: ComputationSettings.Default() with { UseParallelism = false });\n")))}u.isMDXComponent=!0}}]);