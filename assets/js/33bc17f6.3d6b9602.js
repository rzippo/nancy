"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[1414],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=l(t),y=a,m=d["".concat(p,".").concat(y)]||d[y]||u[y]||s;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<s;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1797:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const s={hide_title:!0},i="RationalBinaryExpression&lt;TLeftOperand, TRightOperand&gt;",o={unversionedId:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalBinaryExpression`2",id:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalBinaryExpression`2",title:"RationalBinaryExpression&lt;TLeftOperand, TRightOperand&gt;",description:"Class which describes binary (nor commutative or associative) expressions whose value is a Rational",source:"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalBinaryExpression`2.md",sourceDirName:"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions",slug:"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalBinaryExpression`2",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalBinaryExpression`2",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"docsSidebar",previous:{title:"IGenericNAryExpression&lt;T1, TResult&gt;",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/IGenericNAryExpression`2"},next:{title:"RationalExpression",permalink:"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression"}},p={},l=[{value:"Type Parameters",id:"type-parameters",level:4},{value:"Properties",id:"properties",level:2},{value:"<strong>LeftExpression</strong>",id:"leftexpression",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<strong>RightExpression</strong>",id:"rightexpression",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"<strong>Name</strong>",id:"name",level:3},{value:"Property Value",id:"property-value-2",level:4},{value:"<strong>Settings</strong>",id:"settings",level:3},{value:"Property Value",id:"property-value-3",level:4},{value:"<strong>Value</strong>",id:"value",level:3},{value:"Property Value",id:"property-value-4",level:4},{value:"Methods",id:"methods",level:2},{value:"<strong>GetHashCode()</strong>",id:"gethashcode",level:3},{value:"Returns",id:"returns",level:4},{value:"<strong>Equals(Object)</strong>",id:"equalsobject",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>Equals(RationalExpression)</strong>",id:"equalsrationalexpression",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<strong>Equals(RationalBinaryExpression&lt;TLeftOperand, TRightOperand&gt;)</strong>",id:"equalsrationalbinaryexpressiontleftoperand-trightoperand",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<strong>&lt;Clone&gt;$()</strong>",id:"clone",level:3},{value:"Returns",id:"returns-4",level:4}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rationalbinaryexpressiontleftoperand-trightoperand"},"RationalBinaryExpression","<","TLeftOperand, TRightOperand",">"),(0,a.kt)("p",null,"Class which describes binary (nor commutative or associative) expressions whose value is a Rational\nobject."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract class RationalBinaryExpression<TLeftOperand, TRightOperand> : RationalExpression, Unipi.Nancy.Expressions.Internals.IGenericExpression`1[[Unipi.Nancy.Numerics.Rational, Unipi.Nancy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Unipi.Nancy.Expressions.Visitors.IVisitableRational, System.IEquatable`1[[Unipi.Nancy.Expressions.RationalExpression, Unipi.Nancy.Expressions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], , \n")),(0,a.kt)("h4",{id:"type-parameters"},"Type Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RationalBinaryExpression&lt;TLeftOperand, TRightOperand&gt;.TLeftOperand"),(0,a.kt)("br",null),"\nThe type of the value of the left operand"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RationalBinaryExpression&lt;TLeftOperand, TRightOperand&gt;.TRightOperand"),(0,a.kt)("br",null),"\nThe type of the value of the right operand"),(0,a.kt)("p",null,"Inheritance ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object")," \u2192 ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression"},"RationalExpression")," \u2192 ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalBinaryExpression%602"},"RationalBinaryExpression","<","TLeftOperand, TRightOperand",">"),(0,a.kt)("br",null),"\nImplements ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericExpression%601"},"IGenericExpression","<","Rational",">"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Visitors/IVisitableRational"},"IVisitableRational"),", ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.iequatable-1"},"IEquatable","<","RationalExpression",">"),", IGenericBinaryExpression","<","TLeftOperand, TRightOperand, Rational",">",", IEquatable","<","RationalBinaryExpression","<","TLeftOperand, TRightOperand",">",">"),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"leftexpression"},(0,a.kt)("strong",{parentName:"h3"},"LeftExpression")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public IGenericExpression<TLeftOperand> LeftExpression { get; set; }\n")),(0,a.kt)("h4",{id:"property-value"},"Property Value"),(0,a.kt)("p",null,"IGenericExpression","<","TLeftOperand",">",(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"rightexpression"},(0,a.kt)("strong",{parentName:"h3"},"RightExpression")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public IGenericExpression<TRightOperand> RightExpression { get; set; }\n")),(0,a.kt)("h4",{id:"property-value-1"},"Property Value"),(0,a.kt)("p",null,"IGenericExpression","<","TRightOperand",">",(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"name"},(0,a.kt)("strong",{parentName:"h3"},"Name")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public string Name { get; set; }\n")),(0,a.kt)("h4",{id:"property-value-2"},"Property Value"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.string"},"String"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"settings"},(0,a.kt)("strong",{parentName:"h3"},"Settings")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public ExpressionSettings Settings { get; set; }\n")),(0,a.kt)("h4",{id:"property-value-3"},"Property Value"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings"},"ExpressionSettings"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"value"},(0,a.kt)("strong",{parentName:"h3"},"Value")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public Rational Value { get; }\n")),(0,a.kt)("h4",{id:"property-value-4"},"Property Value"),(0,a.kt)("p",null,"Rational",(0,a.kt)("br",null)),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"gethashcode"},(0,a.kt)("strong",{parentName:"h3"},"GetHashCode()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public int GetHashCode()\n")),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32"},"Int32"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"equalsobject"},(0,a.kt)("strong",{parentName:"h3"},"Equals(Object)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool Equals(object obj)\n")),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"obj")," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.object"},"Object"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"equalsrationalexpression"},(0,a.kt)("strong",{parentName:"h3"},"Equals(RationalExpression)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool Equals(RationalExpression other)\n")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"other")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalExpression"},"RationalExpression"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"equalsrationalbinaryexpressiontleftoperand-trightoperand"},(0,a.kt)("strong",{parentName:"h3"},"Equals(RationalBinaryExpression","<","TLeftOperand, TRightOperand",">",")")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public bool Equals(RationalBinaryExpression<TLeftOperand, TRightOperand> other)\n")),(0,a.kt)("h4",{id:"parameters-2"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"other")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalBinaryExpression%602"},"RationalBinaryExpression","<","TLeftOperand, TRightOperand",">"),(0,a.kt)("br",null)),(0,a.kt)("h4",{id:"returns-3"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean"},"Boolean"),(0,a.kt)("br",null)),(0,a.kt)("h3",{id:"clone"},(0,a.kt)("strong",{parentName:"h3"},"<","Clone",">","$()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract RationalBinaryExpression<TLeftOperand, TRightOperand> <Clone>$()\n")),(0,a.kt)("h4",{id:"returns-4"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/RationalBinaryExpression%602"},"RationalBinaryExpression","<","TLeftOperand, TRightOperand",">"),(0,a.kt)("br",null)))}u.isMDXComponent=!0}}]);