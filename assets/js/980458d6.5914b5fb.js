"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[3285],{2424:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression","title":"SubAdditiveClosureExpression","description":"Class representing an expression whose root operation is the sub-additive closure","source":"@site/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression.md","sourceDirName":"nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals","slug":"/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"SubAdditiveClosureExpression"},"sidebar":"docsSidebar","previous":{"title":"ScaleExpression","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/ScaleExpression"},"next":{"title":"SubtractionExpression","permalink":"/nancy/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubtractionExpression"}}');var i=n(4848),o=n(8453);const t={hide_title:!0,title:"SubAdditiveClosureExpression"},l="SubAdditiveClosureExpression",a={},c=[{value:"Properties",id:"properties",level:2},{value:"<strong>Expression</strong>",id:"expression",level:3},{value:"Property Value",id:"property-value",level:4},{value:"<strong>Name</strong>",id:"name",level:3},{value:"Property Value",id:"property-value-1",level:4},{value:"<strong>Settings</strong>",id:"settings",level:3},{value:"Property Value",id:"property-value-2",level:4},{value:"<strong>Value</strong>",id:"value",level:3},{value:"Property Value",id:"property-value-3",level:4},{value:"<strong>IsSubAdditive</strong>",id:"issubadditive",level:3},{value:"Property Value",id:"property-value-4",level:4},{value:"<strong>IsLeftContinuous</strong>",id:"isleftcontinuous",level:3},{value:"Property Value",id:"property-value-5",level:4},{value:"<strong>IsRightContinuous</strong>",id:"isrightcontinuous",level:3},{value:"Property Value",id:"property-value-6",level:4},{value:"<strong>IsNonNegative</strong>",id:"isnonnegative",level:3},{value:"Property Value",id:"property-value-7",level:4},{value:"<strong>IsNonDecreasing</strong>",id:"isnondecreasing",level:3},{value:"Property Value",id:"property-value-8",level:4},{value:"<strong>IsConcave</strong>",id:"isconcave",level:3},{value:"Property Value",id:"property-value-9",level:4},{value:"<strong>IsConvex</strong>",id:"isconvex",level:3},{value:"Property Value",id:"property-value-10",level:4},{value:"<strong>IsZeroAtZero</strong>",id:"iszeroatzero",level:3},{value:"Property Value",id:"property-value-11",level:4},{value:"<strong>IsWellDefined</strong>",id:"iswelldefined",level:3},{value:"Property Value",id:"property-value-12",level:4},{value:"Constructors",id:"constructors",level:2},{value:"<strong>SubAdditiveClosureExpression(Curve, String, String, ExpressionSettings)</strong>",id:"subadditiveclosureexpressioncurve-string-string-expressionsettings",level:3},{value:"Parameters",id:"parameters",level:4},{value:"<strong>SubAdditiveClosureExpression(CurveExpression, String, ExpressionSettings)</strong>",id:"subadditiveclosureexpressioncurveexpression-string-expressionsettings",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Methods",id:"methods",level:2},{value:"<strong>Accept(ICurveExpressionVisitor)</strong>",id:"accepticurveexpressionvisitor",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"<strong>GetHashCode()</strong>",id:"gethashcode",level:3},{value:"Returns",id:"returns",level:4},{value:"<strong>Equals(Object)</strong>",id:"equalsobject",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<strong>Equals(CurveUnaryExpression&lt;Curve&gt;)</strong>",id:"equalscurveunaryexpressioncurve",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<strong>Equals(SubAdditiveClosureExpression)</strong>",id:"equalssubadditiveclosureexpression",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<strong>&lt;Clone&gt;$()</strong>",id:"clone",level:3},{value:"Returns",id:"returns-4",level:4}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"subadditiveclosureexpression",children:"SubAdditiveClosureExpression"})}),"\n",(0,i.jsxs)(s.p,{children:["Class representing an expression whose root operation is the sub-additive closure\r\n(",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression#subadditiveclosurecomputationsettings",children:"SubAdditiveClosure(ComputationSettings)"}),")"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public class SubAdditiveClosureExpression : Unipi.Nancy.Expressions.CurveUnaryExpression<SubAdditiveClosureExpression>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Inheritance ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"})," \u2192 ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"})," \u2192 ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveUnaryExpression",children:"CurveUnaryExpression<Curve>"})," \u2192 ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression",children:"SubAdditiveClosureExpression"}),(0,i.jsx)("br",{}),"\r\nImplements ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericExpression",children:"IGenericExpression<Curve>"}),", ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/IExpression",children:"IExpression"}),", ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Visitors/IVisitableCurve",children:"IVisitableCurve"}),", ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.iequatable-1",children:"IEquatable<CurveExpression>"}),", ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericUnaryExpression",children:"IGenericUnaryExpression<Curve, Curve>"}),", ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.iequatable-1",children:"IEquatable<CurveUnaryExpression<Curve>>"}),", ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.iequatable-1",children:"IEquatable<SubAdditiveClosureExpression>"})]}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"expression",children:(0,i.jsx)(s.strong,{children:"Expression"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public IGenericExpression<Curve> Expression { get; set; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/IGenericExpression",children:"IGenericExpression<Curve>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"name",children:(0,i.jsx)(s.strong,{children:"Name"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public string Name { get; set; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-1",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"settings",children:(0,i.jsx)(s.strong,{children:"Settings"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public ExpressionSettings Settings { get; set; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-2",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"value",children:(0,i.jsx)(s.strong,{children:"Value"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public Curve Value { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-3",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:["Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"issubadditive",children:(0,i.jsx)(s.strong,{children:"IsSubAdditive"})}),"\n",(0,i.jsx)(s.p,{children:"True if the curve described by the expression is sub-additive. Property evaluated avoiding as much as possible\r\nto make any computation."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsSubAdditive { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-4",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"isleftcontinuous",children:(0,i.jsx)(s.strong,{children:"IsLeftContinuous"})}),"\n",(0,i.jsx)(s.p,{children:"True if the curve described by the expression is left continuous. Property evaluated avoiding as much as\r\npossible to make any computation."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsLeftContinuous { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-5",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"isrightcontinuous",children:(0,i.jsx)(s.strong,{children:"IsRightContinuous"})}),"\n",(0,i.jsx)(s.p,{children:"True if the curve described by the expression is right continuous. Property evaluated avoiding as much as\r\npossible to make any computation."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsRightContinuous { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-6",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"isnonnegative",children:(0,i.jsx)(s.strong,{children:"IsNonNegative"})}),"\n",(0,i.jsx)(s.p,{children:"True if the curve described by the expression is non-negative. Property evaluated avoiding as much as\r\npossible to make any computation."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsNonNegative { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-7",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"isnondecreasing",children:(0,i.jsx)(s.strong,{children:"IsNonDecreasing"})}),"\n",(0,i.jsx)(s.p,{children:"True if the curve described by the expression is non-decreasing. Property evaluated avoiding as much as\r\npossible to make any computation."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsNonDecreasing { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-8",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"isconcave",children:(0,i.jsx)(s.strong,{children:"IsConcave"})}),"\n",(0,i.jsx)(s.p,{children:"True if the curve described by the expression is concave. Property evaluated avoiding as much as\r\npossible to make any computation."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsConcave { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-9",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"isconvex",children:(0,i.jsx)(s.strong,{children:"IsConvex"})}),"\n",(0,i.jsx)(s.p,{children:"True if the curve described by the expression is convex. Property evaluated avoiding as much as\r\npossible to make any computation."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsConvex { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-10",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"iszeroatzero",children:(0,i.jsx)(s.strong,{children:"IsZeroAtZero"})}),"\n",(0,i.jsx)(s.p,{children:"True if the curve f described by the expression is 0 in 0 (f(0) = 0). Property evaluated avoiding as much as\r\npossible to make any computation."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsZeroAtZero { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-11",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"iswelldefined",children:(0,i.jsx)(s.strong,{children:"IsWellDefined"})}),"\n",(0,i.jsxs)(s.p,{children:["True if the operation described by the expression is well-defined according to the definition\r\nin ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/references",children:"[BT08]"})," Section 2.1."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool IsWellDefined { get; }\n"})}),"\n",(0,i.jsx)(s.h4,{id:"property-value-12",children:"Property Value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(s.h3,{id:"subadditiveclosureexpressioncurve-string-string-expressionsettings",children:(0,i.jsx)(s.strong,{children:"SubAdditiveClosureExpression(Curve, String, String, ExpressionSettings)"})}),"\n",(0,i.jsx)(s.p,{children:"Creates the sub-additive closure expression"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public SubAdditiveClosureExpression(Curve curve, string name, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"curve"})," Curve",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"name"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"expressionName"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"settings"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"subadditiveclosureexpressioncurveexpression-string-expressionsettings",children:(0,i.jsx)(s.strong,{children:"SubAdditiveClosureExpression(CurveExpression, String, ExpressionSettings)"})}),"\n",(0,i.jsxs)(s.p,{children:["Class representing an expression whose root operation is the sub-additive closure\r\n(",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression#subadditiveclosurecomputationsettings",children:"SubAdditiveClosure(ComputationSettings)"}),")"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public SubAdditiveClosureExpression(CurveExpression expression, string expressionName, ExpressionSettings settings)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"expression"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveExpression",children:"CurveExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"expressionName"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",children:"String"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"settings"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/ExpressionSettings",children:"ExpressionSettings"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"accepticurveexpressionvisitor",children:(0,i.jsx)(s.strong,{children:"Accept(ICurveExpressionVisitor)"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public void Accept(ICurveExpressionVisitor visitor)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"visitor"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Visitors/ICurveExpressionVisitor",children:"ICurveExpressionVisitor"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"gethashcode",children:(0,i.jsx)(s.strong,{children:"GetHashCode()"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public int GetHashCode()\n"})}),"\n",(0,i.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",children:"Int32"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"equalsobject",children:(0,i.jsx)(s.strong,{children:"Equals(Object)"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool Equals(object obj)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"obj"})," ",(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.object",children:"Object"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"equalscurveunaryexpressioncurve",children:(0,i.jsx)(s.strong,{children:"Equals(CurveUnaryExpression<Curve>)"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool Equals(CurveUnaryExpression<Curve> other)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"other"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions/CurveUnaryExpression",children:"CurveUnaryExpression<Curve>"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"equalssubadditiveclosureexpression",children:(0,i.jsx)(s.strong,{children:"Equals(SubAdditiveClosureExpression)"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public bool Equals(SubAdditiveClosureExpression other)\n"})}),"\n",(0,i.jsx)(s.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"other"})," ",(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression",children:"SubAdditiveClosureExpression"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.boolean",children:"Boolean"}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(s.h3,{id:"clone",children:(0,i.jsx)(s.strong,{children:"<Clone>$()"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-csharp",children:"public SubAdditiveClosureExpression <Clone>$()\n"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/docs/nancy/Unipi.Nancy.Expressions/Unipi.Nancy.Expressions.Internals/SubAdditiveClosureExpression",children:"SubAdditiveClosureExpression"}),(0,i.jsx)("br",{})]})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var r=n(6540);const i={},o=r.createContext(i);function t(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);