"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[6431],{1822:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var i=n(7462),a=(n(7294),n(3905)),o=n(2004),l=n(4996);const s={hide_title:!0,title:"Using notebooks",sidebar_position:2},r="Using notebooks",p={unversionedId:"tutorials/getting-started/notebooks",id:"tutorials/getting-started/notebooks",title:"Using notebooks",description:"A .NET notebook is a .dib file that contains snippets of code, called cells, which you can individually run to immediately see their outputs.",source:"@site/docs/tutorials/getting-started/notebooks.mdx",sourceDirName:"tutorials/getting-started",slug:"/tutorials/getting-started/notebooks",permalink:"/nancy/docs/tutorials/getting-started/notebooks",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{hide_title:!0,title:"Using notebooks",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/nancy/docs/tutorials/getting-started/installation"},next:{title:"Main types",permalink:"/nancy/docs/tutorials/first-tutorial/upp-types"}},u={},c=[{value:"Copy the preamble!",id:"copy-the-preamble",level:2},{value:"The <code>plot()</code> function",id:"the-plot-function",level:2}],d={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-notebooks"},"Using notebooks"),(0,a.kt)("p",null,"A .NET notebook is a ",(0,a.kt)("inlineCode",{parentName:"p"},".dib")," file that contains snippets of code, called ",(0,a.kt)("em",{parentName:"p"},"cells"),", which you can individually run to immediately see their outputs."),(0,a.kt)("p",null,"They are useful to show and discuss code step by step, as we do in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rzippo/nancy/tree/master/examples"},"examples"),", but also to be modified and try things out."),(0,a.kt)("figure",null,(0,a.kt)(o.Z,{preload:!0,playing:!0,loop:!0,controls:!0,muted:!0,width:"100%",height:"auto",url:(0,l.Z)("/img/tutorials/plot-gif.webm"),mdxType:"ReactPlayer"}),(0,a.kt)("figcaption",null,"Running a cell in VS Code.")),(0,a.kt)("h2",{id:"copy-the-preamble"},"Copy the preamble!"),(0,a.kt)("p",null,"You may want to create your own notebooks to test things."),(0,a.kt)("p",null,"At the time of writing, notebooks are like single-file programs, they may reference other libraries (using either Nuget or local ",(0,a.kt)("inlineCode",{parentName:"p"},".dll"),") but you cannot use something like ",(0,a.kt)("inlineCode",{parentName:"p"},"include")," to pick code from elsewhere."),(0,a.kt)("p",null,"Thus you must ",(0,a.kt)("em",{parentName:"p"},"copy")," the preamble that you find at the start of the example notebooks (you will find where it ends clearly marked).\nThis preamble loads the necessary libraries, and defines the ",(0,a.kt)("inlineCode",{parentName:"p"},"plot()")," function."),(0,a.kt)("h2",{id:"the-plot-function"},"The ",(0,a.kt)("inlineCode",{parentName:"h2"},"plot()")," function"),(0,a.kt)("p",null,"Plotting is ",(0,a.kt)("em",{parentName:"p"},"not")," a feature of Nancy, per se.\nAs a computational library, it focuses on data structures and algorithms, leaving higher-level operations such as plotting to the applications using it."),(0,a.kt)("p",null,"For this use-case, as it is really important to see what a ",(0,a.kt)("a",{parentName:"p",href:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve")," looks like for tutorials and experimenting, we implemented ",(0,a.kt)("inlineCode",{parentName:"p"},"plot()")," (with various overloads) to make is easy and immediate to try the library."),(0,a.kt)("figure",null,(0,a.kt)("img",{src:(0,l.Z)("/img/tutorials/plot-example.png")}),(0,a.kt)("figcaption",null,"Example of use: the call ",(0,a.kt)("code",null,"plot(...)")," generates the image below the notebook cell.")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"plot()")," is designed and tested only for simple visualizations in notebooks. For other contexts and uses you may need something different.")),(0,a.kt)("p",null,"You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"plot()")," to visualize one or more ",(0,a.kt)("a",{parentName:"p",href:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve")," or ",(0,a.kt)("a",{parentName:"p",href:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Sequence"},"Sequence")," objects. Many overloads are available:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plot(curve, name, limit)"),": plots the given curve from ",(0,a.kt)("inlineCode",{parentName:"li"},"0")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"limit"),", using ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," for the legend."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plot(curves, names, limit)"),": plots the given list of curves from ",(0,a.kt)("inlineCode",{parentName:"li"},"0")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"limit"),", using the corresponding ",(0,a.kt)("inlineCode",{parentName:"li"},"names")," for the legend."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plot(sequence, name, limit)"),": plots the given sequence, using ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," for the legend."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plot(sequences, names, limit)"),": plots the given list of sequences, using the corresponding ",(0,a.kt)("inlineCode",{parentName:"li"},"names")," for the legend.")),(0,a.kt)("p",null,"You can omit the names, in which case { ",(0,a.kt)("em",{parentName:"p"},"a"),", ",(0,a.kt)("em",{parentName:"p"},"b"),", ",(0,a.kt)("em",{parentName:"p"},"c"),", ... } will be used instead.\nFor ",(0,a.kt)("a",{parentName:"p",href:"/nancy/docs/nancy/Unipi.Nancy.MinPlusAlgebra/Curve"},"Curve"),"s, you can omit the time limit, in which case the function will compute a default one."),(0,a.kt)("p",null,"With the overloads described above, you will have to explicitly declare the lists, e.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'var sc = new Curve( ... );\nvar ac = new Curve( ... );\nplot(\n    new []{sc, ac},     // Curve[]\n    new []{"sc", "ac"}, // string[]\n);\n')),(0,a.kt)("p",null,"However, if none of the optional arguments is provided, you can use an even simpler syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'plot(sc, ac);   // they will be called "a" and "b" in the legend\n')))}m.isMDXComponent=!0}}]);