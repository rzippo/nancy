"use strict";(self.webpackChunknancy_docs=self.webpackChunknancy_docs||[]).push([[1659],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return n?o.createElement(f,s(s({ref:t},l),{},{components:n})):o.createElement(f,s({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var p=2;p<i;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8284:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=n(7462),r=(n(7294),n(3905)),i=n(4996);const s={hide_title:!0,sidebar_position:6,title:"Isospeed convolutions"},a="Isospeed convolutions",c={unversionedId:"tutorials/optimizations/isospeed-convolutions",id:"tutorials/optimizations/isospeed-convolutions",title:"Isospeed convolutions",description:"In [PLSK11] and [Lie17], it was observed that one can use pseudoinverses to switch from a (min,+) computation to a (max,+) one, and back (under some non-restrictive hypotheses).",source:"@site/docs/tutorials/optimizations/isospeed-convolutions.mdx",sourceDirName:"tutorials/optimizations",slug:"/tutorials/optimizations/isospeed-convolutions",permalink:"/nancy/docs/tutorials/optimizations/isospeed-convolutions",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{hide_title:!0,sidebar_position:6,title:"Isospeed convolutions"},sidebar:"tutorialSidebar",previous:{title:"Subadditive convolutions",permalink:"/nancy/docs/tutorials/optimizations/subadditive-convolutions"},next:{title:"Tuning Performance",permalink:"/nancy/docs/tutorials/optimizations/tuning-performance"}},p={},l=[],u={toc:l};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"isospeed-convolutions"},"Isospeed convolutions"),(0,r.kt)("p",null,"In ",(0,r.kt)("a",{href:"/docs/tutorials/references#PLSK11"},"[PLSK11]")," and ",(0,r.kt)("a",{href:"/docs/tutorials/references#Lie17"},"[Lie17]"),", it was observed that one can use pseudoinverses to switch from a (min,+) computation to a (max,+) one, and back (under some non-restrictive hypotheses).\nFurthermore, doing so would often result in significant performance improvements."),(0,r.kt)("figure",null,(0,r.kt)("img",{src:(0,i.Z)("/img/isospeed-convolution/isomorphism.png"),style:{maxWidth:"min(40rem, 100%)"}}),(0,r.kt)("figcaption",null,"The isomorphism between (min,+) and (max,+) convolution.")),(0,r.kt)("p",null,"In ",(0,r.kt)("a",{href:"/docs/tutorials/references#ZNS23a"},"[ZNS23a]")," we explored this further, finding the main properties that cause these performance and devising a new algorithm, ",(0,r.kt)("em",{parentName:"p"},"Isospeed"),", which exploits them to gain significant performance improvements over ",(0,r.kt)("em",{parentName:"p"},"both")," the state-of-art (min,+) and (max,+) convolution algorithms."),(0,r.kt)("p",null,"These improvements are implemented in Nancy transparently to the user, so that no action or configuration in necessary to get these improvements."),(0,r.kt)("p",null,"For more details, checkout the paper ",(0,r.kt)("a",{href:"/docs/tutorials/references#ZNS23a"},"[ZNS23a]")," or ",(0,r.kt)("a",{href:"/docs/tutorials/references#Zippo23"},"[Zippo23]"),", Chapter 14."))}m.isMDXComponent=!0}}]);